{"version":3,"file":"js/app.7f18311e.js","mappings":"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","sources":["webpack://pathfinders-journey/./src/components/layout/GameLayout.vue?c324","webpack://pathfinders-journey/./src/components/layout/GameLayout.vue","webpack://pathfinders-journey/./src/App.vue?2a5e","webpack://pathfinders-journey/./src/App.vue","webpack://pathfinders-journey/./src/models/types/player.ts","webpack://pathfinders-journey/./src/models/enums/cardTypes.ts","webpack://pathfinders-journey/./src/models/enums/seasons.ts","webpack://pathfinders-journey/./src/stores/cardStore.ts","webpack://pathfinders-journey/./src/models/enums/phases.ts","webpack://pathfinders-journey/./src/stores/gameStore.ts","webpack://pathfinders-journey/./src/services/victoryService.ts","webpack://pathfinders-journey/./src/stores/playerStore.ts","webpack://pathfinders-journey/./src/components/core/GameCard.vue?8cb4","webpack://pathfinders-journey/./src/components/core/GameCard.vue","webpack://pathfinders-journey/./src/components/core/GameCard.vue?d3b0","webpack://pathfinders-journey/./src/views/GameSetupView.vue?a1a4","webpack://pathfinders-journey/./src/views/GameSetupView.vue","webpack://pathfinders-journey/./src/views/GameSetupView.vue?ea24","webpack://pathfinders-journey/./src/components/game/GameMap.vue?3818","webpack://pathfinders-journey/./src/components/game/GameMap.vue","webpack://pathfinders-journey/./src/components/game/GameMap.vue?499a","webpack://pathfinders-journey/./src/components/game/ResourceManagement.vue?1a1e","webpack://pathfinders-journey/./src/components/game/ResourceManagement.vue","webpack://pathfinders-journey/./src/components/game/ResourceManagement.vue?99e7","webpack://pathfinders-journey/./src/components/game/CraftingStation.vue?13b4","webpack://pathfinders-journey/./src/components/game/CraftingStation.vue","webpack://pathfinders-journey/./src/services/threatService.ts","webpack://pathfinders-journey/./src/services/craftingService.ts","webpack://pathfinders-journey/./src/components/game/CraftingStation.vue?4876","webpack://pathfinders-journey/./src/components/game/PlayerDashboard.vue?e903","webpack://pathfinders-journey/./src/components/game/PlayerDashboard.vue","webpack://pathfinders-journey/./src/components/game/PlayerDashboard.vue?6633","webpack://pathfinders-journey/./src/components/game/AnimalCompanionSelection.vue?b57f","webpack://pathfinders-journey/./src/components/game/AnimalCompanionSelection.vue","webpack://pathfinders-journey/./src/services/companionService.ts","webpack://pathfinders-journey/./src/components/game/AnimalCompanionSelection.vue?d02d","webpack://pathfinders-journey/./src/components/game/CompanionManagement.vue?774c","webpack://pathfinders-journey/./src/components/game/CompanionManagement.vue","webpack://pathfinders-journey/./src/components/game/CompanionCard.vue?46a1","webpack://pathfinders-journey/./src/components/game/CompanionCard.vue","webpack://pathfinders-journey/./src/components/game/CompanionCard.vue?b9dc","webpack://pathfinders-journey/./src/components/game/CompanionManagement.vue?d0c7","webpack://pathfinders-journey/./src/components/game/GameLog.vue?1239","webpack://pathfinders-journey/./src/components/game/GameLog.vue","webpack://pathfinders-journey/./src/components/game/GameLog.vue?abf6","webpack://pathfinders-journey/./src/views/GameBoardView.vue?b99a","webpack://pathfinders-journey/./src/views/GameBoardView.vue","webpack://pathfinders-journey/./src/views/GameBoardView.vue?5b83","webpack://pathfinders-journey/./src/router/index.ts","webpack://pathfinders-journey/./src/main.ts","webpack://pathfinders-journey/webpack/bootstrap","webpack://pathfinders-journey/webpack/runtime/chunk loaded","webpack://pathfinders-journey/webpack/runtime/compat get default export","webpack://pathfinders-journey/webpack/runtime/define property getters","webpack://pathfinders-journey/webpack/runtime/global","webpack://pathfinders-journey/webpack/runtime/hasOwnProperty shorthand","webpack://pathfinders-journey/webpack/runtime/jsonp chunk loading","webpack://pathfinders-journey/webpack/startup"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"game-layout\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = { class: \"game-layout__content\" }\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'GameLayout',\n  setup(__props) {\n\n// No props or special logic needed for this basic layout component\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"GameLayout\", -1)),\n    _createElementVNode(\"main\", _hoisted_2, [\n      _renderSlot(_ctx.$slots, \"default\")\n    ]),\n    _cache[1] || (_cache[1] = _createElementVNode(\"footer\", { class: \"game-layout__footer\" }, [\n      _createElementVNode(\"p\", null, \"© 2025 Pathfinder's Journey\")\n    ], -1))\n  ]))\n}\n}\n\n})","import script from \"./GameLayout.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameLayout.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameLayout.vue?vue&type=style&index=0&id=656b48d5&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-656b48d5\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport GameLayout from '@/components/layout/GameLayout.vue';\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createBlock(GameLayout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_router_view)\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=53cb32db&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { PlayerAction } from '@/models/enums/actions';\n\nexport interface PlayerEffect {\n  id: string;\n  name: string;\n  description: string;\n  duration: number;\n  magnitude: number;\n  type: string;\n  target: string;\n}\n\nexport enum CompanionState {\n  LOYAL = 'LOYAL',\n  WARY = 'WARY',\n  LEAVING = 'LEAVING'\n}\n\nexport interface CompanionStatus {\n  loyalty: number;\n  state: CompanionState;\n  turnsSinceLastFed: number;\n  turnsWary: number;\n}\n\nexport interface PlayerState {\n  characterId: string;\n  health: number;\n  maxHealth: number;\n  resources: string[];\n  resourceCapacity: number;\n  animalCompanions: string[];\n  craftedItems: string[];\n  experience: number;\n  knowledgeDiscovered: string[];\n  specialAbilityUsed: boolean;\n  activeEffects: PlayerEffect[];\n  hasCraftedLegendaryItem: boolean;\n  uniqueCraftedItemsCount: number;\n  companionLoyalty: { [companionId: string]: CompanionStatus };\n  wisdom: number;\n}\n\nexport interface PlayerActionResult {\n  success: boolean;\n  message: string;\n  type: PlayerAction;\n  data?: any;\n}\n","export enum CardType {\n  CHARACTER = 'CHARACTER',\n  LANDSCAPE = 'LANDSCAPE',\n  ANIMAL_COMPANION = 'ANIMAL_COMPANION',\n  RESOURCE = 'RESOURCE',\n  CRAFTED_ITEM = 'CRAFTED_ITEM',\n  SEASON = 'SEASON',\n  ACTION = 'ACTION'\n}\n\nexport enum ChallengeType {\n  STRENGTH = 'STRENGTH',\n  WISDOM = 'WISDOM',\n  AGILITY = 'AGILITY',\n  DIPLOMACY = 'DIPLOMACY',\n  SURVIVAL = 'SURVIVAL'\n}\n","export enum Season {\n  SAMHAIN = 'samhain',\n  WINTERS_DEPTH = 'wintersDepth',\n  IMBOLC = 'imbolc',\n  BELTANE = 'beltane',\n  LUGHNASADH = 'lughnasadh'\n}\n","import { defineStore } from 'pinia';\nimport { CardType, ChallengeType } from '@/models/enums/cardTypes';\nimport { Season } from '@/models/enums/seasons';\nimport { \n  CharacterCard, \n  LandscapeCard, \n  AnimalCompanionCard, \n  ResourceCard, \n  CraftedItemCard, \n  SeasonCard,\n  ChallengeCard\n} from '@/models/types/cards';\n\ninterface CardStoreState {\n  characters: CharacterCard[];\n  landscapes: LandscapeCard[];\n  animalCompanions: AnimalCompanionCard[];\n  resources: ResourceCard[];\n  craftedItems: CraftedItemCard[];\n  seasons: SeasonCard[];\n  initialized: boolean;\n}\n\nexport const useCardStore = defineStore('card', {\n  state: (): CardStoreState => ({\n    characters: [],\n    landscapes: [],\n    animalCompanions: [],\n    resources: [],\n    craftedItems: [],\n    seasons: [],\n    initialized: false\n  }),\n  \n  getters: {\n    getCharacterById: (state) => (id: string) => {\n      return state.characters.find(character => character.id === id);\n    },\n    \n    getLandscapeById: (state) => (id: string) => {\n      return state.landscapes.find(landscape => landscape.id === id);\n    },\n    \n    getAnimalCompanionById: (state) => (id: string) => {\n      return state.animalCompanions.find(companion => companion.id === id);\n    },\n    \n    getCompanionById: (state) => (id: string) => {\n      return state.animalCompanions.find(companion => companion.id === id);\n    },\n    \n    getResourceById: (state) => (id: string) => {\n      return state.resources.find(resource => resource.id === id);\n    },\n    \n    getCraftedItemById: (state) => (id: string) => {\n      return state.craftedItems.find(item => item.id === id);\n    },\n    \n    getSeasonById: (state) => (id: string) => {\n      return state.seasons.find(season => season.id === id);\n    },\n    \n    getChallengeById: (state) => (id: string) => {\n      const allChallenges = state.landscapes.reduce((challenges, landscape) => {\n        if (landscape.challenges) {\n          // Convert landscape challenges to full challenge cards for compatibility\n          const landscapeChallenges = landscape.challenges.map(challenge => ({\n            id: `${landscape.id}_${challenge.type.toLowerCase()}`,\n            name: `${landscape.name} ${challenge.type}`,\n            description: `A ${challenge.type} challenge at ${landscape.name}`,\n            type: challenge.type as ChallengeType,\n            difficulty: challenge.difficulty,\n            rewards: {\n              resources: [],\n              experience: 10,\n              knowledge: landscape.id\n            }\n          }));\n          return [...challenges, ...landscapeChallenges];\n        }\n        return challenges;\n      }, [] as ChallengeCard[]);\n      \n      return allChallenges.find(challenge => challenge.id === id);\n    },\n    \n    getResourcesBySeason: (state) => (season: Season) => {\n      return state.resources.filter(resource => \n        resource.seasonalAbundance.includes(season)\n      );\n    },\n    \n    getCompanionsBySeason: (state) => (season: Season) => {\n      return state.animalCompanions.filter(companion => \n        companion.affinitySeasons.includes(season)\n      );\n    },\n    \n    getAllCraftedItems: (state) => () => {\n      return state.craftedItems;\n    },\n    \n    getCraftableItems: (state) => () => {\n      return state.craftedItems.map(item => item.id);\n    }\n  },\n  \n  actions: {\n    initializeCards() {\n      // Initialize with sample data\n      this.initializeCharacters();\n      this.initializeLandscapes();\n      this.initializeAnimalCompanions();\n      this.initializeResources();\n      this.initializeCraftedItems();\n      this.initializeSeasons();\n      \n      this.initialized = true;\n    },\n    \n    initializeCharacters() {\n      this.characters = [\n        {\n          id: 'character_1',\n          name: 'The Druid',\n          description: 'A keeper of ancient wisdom with a deep connection to nature.',\n          type: CardType.CHARACTER,\n          healthPoints: 8,\n          strength: 6,\n          wisdom: 10,\n          agility: 6,\n          diplomacy: 8,\n          survival: 9,\n          resourceCapacity: 6,\n          image: '/images/characters/druid.jpg',\n          specialAbility: {\n            name: 'Nature\\'s Harmony',\n            description: 'Can communicate with animals to gain insights about the landscape.'\n          },\n          startingResources: ['resource_1', 'resource_5'],\n          startingCompanion: 'companion_1'\n        },\n        {\n          id: 'character_2',\n          name: 'The Warrior',\n          description: 'A brave fighter skilled in combat and survival.',\n          type: CardType.CHARACTER,\n          healthPoints: 12,\n          strength: 10,\n          wisdom: 6,\n          agility: 8,\n          diplomacy: 5,\n          survival: 8,\n          resourceCapacity: 4,\n          image: '/images/characters/warrior.jpg',\n          specialAbility: {\n            name: 'Battle Prowess',\n            description: 'Years of training have honed combat skills to perfection.'\n          },\n          startingResources: ['resource_2', 'resource_3']\n        },\n        {\n          id: 'character_3',\n          name: 'The Bard',\n          description: 'A storyteller who carries the history and legends of the Celtic people.',\n          type: CardType.CHARACTER,\n          healthPoints: 6,\n          strength: 5,\n          wisdom: 9,\n          agility: 7,\n          diplomacy: 10,\n          survival: 7,\n          resourceCapacity: 8,\n          image: '/images/characters/bard.jpg',\n          specialAbility: {\n            name: 'Ancient Tales',\n            description: 'Knowledge of old stories reveals secrets of the land.'\n          },\n          startingResources: ['resource_4', 'resource_7', 'resource_9']\n        },\n        {\n          id: 'giant_beastfriend',\n          name: 'Giant Beastfriend',\n          description: 'A towering figure with a natural affinity for wild creatures, able to form bonds with even the most ferocious beasts.',\n          type: CardType.CHARACTER,\n          healthPoints: 7,\n          strength: 8,\n          wisdom: 7,\n          agility: 5,\n          diplomacy: 4,\n          survival: 9,\n          resourceCapacity: 8,\n          image: '/images/characters/giant_beastfriend.jpg',\n          specialAbility: {\n            name: 'Animal Empathy',\n            description: 'Animal Companions cost -1 resource to bond with'\n          },\n          startingResources: ['resource_3', 'resource_6'],\n          challengeBonuses: {\n            'physical': 3,\n            'mental': 2,\n            'spiritual': 3,\n            'social': 1\n          }\n        },\n        {\n          id: 'hedge_witch',\n          name: 'Hedge Witch/Warlock',\n          description: 'A practitioner of herbal magic and minor enchantments who dwells at the borderlands between civilization and wilderness.',\n          type: CardType.CHARACTER,\n          healthPoints: 5,\n          strength: 4,\n          wisdom: 10,\n          agility: 6,\n          diplomacy: 5,\n          survival: 8,\n          resourceCapacity: 7,\n          image: '/images/characters/hedge_witch.jpg',\n          specialAbility: {\n            name: 'Herbal Knowledge',\n            description: 'Can substitute one resource for another when crafting'\n          },\n          startingResources: ['resource_8', 'resource_10'],\n          challengeBonuses: {\n            'physical': 1,\n            'mental': 3,\n            'spiritual': 4,\n            'social': 1\n          }\n        },\n        {\n          id: 'iron_crafter',\n          name: 'Iron Crafter',\n          description: 'A master smith whose knowledge of metals and fire allows them to create items of remarkable power.',\n          type: CardType.CHARACTER,\n          healthPoints: 6,\n          strength: 7,\n          wisdom: 8,\n          agility: 5,\n          diplomacy: 6,\n          survival: 6,\n          resourceCapacity: 6,\n          image: '/images/characters/iron_crafter.jpg',\n          specialAbility: {\n            name: 'Master Smith',\n            description: 'Crafting requires one fewer resource'\n          },\n          startingResources: ['resource_2', 'resource_5'],\n          challengeBonuses: {\n            'physical': 3,\n            'mental': 3,\n            'spiritual': 1,\n            'social': 2\n          }\n        },\n        {\n          id: 'village_elder',\n          name: 'Village Elder',\n          description: 'A respected keeper of tradition and wisdom, whose connection to the community provides unique advantages.',\n          type: CardType.CHARACTER,\n          healthPoints: 5,\n          strength: 3,\n          wisdom: 12,\n          agility: 4,\n          diplomacy: 9,\n          survival: 7,\n          resourceCapacity: 5,\n          image: '/images/characters/village_elder.jpg',\n          specialAbility: {\n            name: 'Ancient Wisdom',\n            description: 'Start with knowledge of entire journey path (all landscapes revealed at beginning)'\n          },\n          startingResources: ['resource_7', 'resource_9'],\n          challengeBonuses: {\n            'physical': 1,\n            'mental': 4,\n            'spiritual': 3,\n            'social': 3\n          }\n        }\n      ];\n    },\n    \n    initializeLandscapes() {\n      this.landscapes = [\n        {\n          id: 'landscape_1',\n          name: 'The Misty Forest',\n          description: 'An ancient woodland shrouded in mist where spirits are said to dwell.',\n          type: CardType.LANDSCAPE,\n          challenges: [\n            {\n              id: 'challenge_1',\n              name: 'Lost Path',\n              description: 'The mist has obscured the path, making navigation difficult.',\n              type: ChallengeType.WISDOM,\n              difficulty: 2,\n              rewards: {\n                resources: ['resource_1', 'resource_5'],\n                experience: 1\n              }\n            },\n            {\n              id: 'challenge_2',\n              name: 'Forest Guardian',\n              description: 'A mysterious entity blocks your path, demanding a tribute.',\n              type: ChallengeType.DIPLOMACY,\n              difficulty: 3,\n              rewards: {\n                resources: ['resource_7'],\n                experience: 2,\n                knowledge: 'The forest spirits value respect above all else.'\n              }\n            }\n          ],\n          availableResources: ['resource_1', 'resource_5', 'resource_8'],\n          specialFeature: {\n            name: 'Ancient Grove',\n            description: 'A sacred place where druids once gathered.',\n            effect: 'Heal 1 health if you spend a turn meditating here.'\n          }\n        },\n        {\n          id: 'landscape_2',\n          name: 'The Standing Stones',\n          description: 'A circle of megalithic stones humming with ancient power.',\n          type: CardType.LANDSCAPE,\n          challenges: [\n            {\n              id: 'challenge_3',\n              name: 'Ritual Alignment',\n              description: 'The stones must be aligned with the stars to unlock their power.',\n              type: ChallengeType.WISDOM,\n              difficulty: 4,\n              rewards: {\n                resources: ['resource_10'],\n                experience: 2,\n                knowledge: 'The stones align with the seasonal transitions.'\n              }\n            }\n          ],\n          availableResources: ['resource_2', 'resource_10'],\n          specialFeature: {\n            name: 'Ley Line Nexus',\n            description: 'A powerful convergence of earth energies.',\n            effect: 'Your special ability can be used twice in this location.'\n          }\n        }\n      ];\n    },\n    \n    initializeAnimalCompanions() {\n      this.animalCompanions = [\n        {\n          id: 'companion_1',\n          name: 'Raven',\n          description: 'A wise bird associated with prophecy and insight.',\n          type: CardType.ANIMAL_COMPANION,\n          ability: {\n            name: 'Far Sight',\n            description: 'The raven scouts ahead, revealing dangers and opportunities.',\n            effect: 'Preview the next landscape before traveling there.'\n          },\n          affinitySeasons: [Season.SAMHAIN, Season.WINTERS_DEPTH]\n        },\n        {\n          id: 'companion_2',\n          name: 'Wolf',\n          description: 'A loyal pack animal with keen senses.',\n          type: CardType.ANIMAL_COMPANION,\n          ability: {\n            name: 'Pack Hunter',\n            description: 'The wolf helps track and hunt for resources.',\n            effect: 'Gain an extra resource when gathering in a landscape.'\n          },\n          affinitySeasons: [Season.WINTERS_DEPTH, Season.IMBOLC]\n        },\n        {\n          id: 'companion_3',\n          name: 'Stag',\n          description: 'A majestic forest dweller representing renewal and abundance.',\n          type: CardType.ANIMAL_COMPANION,\n          ability: {\n            name: 'Forest Guide',\n            description: 'The stag knows hidden paths through the wilderness.',\n            effect: 'Reduce the difficulty of navigation challenges by 1.'\n          },\n          affinitySeasons: [Season.BELTANE, Season.LUGHNASADH]\n        }\n      ];\n    },\n    \n    initializeResources() {\n      this.resources = [\n        {\n          id: 'resource_1',\n          name: 'Healing Herbs',\n          description: 'Plants with medicinal properties that can restore health.',\n          type: CardType.RESOURCE,\n          rarity: 'common',\n          seasonalAbundance: [Season.BELTANE, Season.LUGHNASADH],\n          specialEffect: {\n            name: 'Herbal Remedy',\n            description: 'A poultice made from these herbs can heal wounds.',\n            effect: 'Restore 1 health when used.'\n          }\n        },\n        {\n          id: 'resource_2',\n          name: 'Sacred Oak Wood',\n          description: 'Wood from the revered oak tree, imbued with strength.',\n          type: CardType.RESOURCE,\n          rarity: 'uncommon',\n          seasonalAbundance: [Season.LUGHNASADH]\n        },\n        {\n          id: 'resource_3',\n          name: 'Iron Ore',\n          description: 'Raw metal used for crafting tools and weapons.',\n          type: CardType.RESOURCE,\n          rarity: 'uncommon',\n          seasonalAbundance: [Season.IMBOLC, Season.BELTANE]\n        },\n        {\n          id: 'resource_4',\n          name: 'Mistletoe',\n          description: 'A parasitic plant considered sacred by the druids.',\n          type: CardType.RESOURCE,\n          rarity: 'rare',\n          seasonalAbundance: [Season.WINTERS_DEPTH],\n          specialEffect: {\n            name: 'Druidic Focus',\n            description: 'Enhances spiritual connection when used in rituals.',\n            effect: 'Add +1 to wisdom challenges when used.'\n          }\n        },\n        {\n          id: 'resource_5',\n          name: 'Wild Berries',\n          description: 'Nutritious forest fruits that provide sustenance.',\n          type: CardType.RESOURCE,\n          rarity: 'common',\n          seasonalAbundance: [Season.BELTANE, Season.LUGHNASADH]\n        }\n      ];\n    },\n    \n    initializeCraftedItems() {\n      this.craftedItems = [\n        {\n          id: 'item_1',\n          name: 'Herbal Poultice',\n          description: 'A medicinal wrap made from healing herbs.',\n          type: CardType.CRAFTED_ITEM,\n          requiredResources: ['resource_1', 'resource_5'],\n          complexity: 1,\n          ability: {\n            name: 'Healing Touch',\n            description: 'Applies healing herbs directly to wounds.',\n            effect: 'Restore 2 health when used.'\n          }\n        },\n        {\n          id: 'item_2',\n          name: 'Oak Staff',\n          description: 'A sturdy staff carved from sacred oak wood.',\n          type: CardType.CRAFTED_ITEM,\n          requiredResources: ['resource_2'],\n          complexity: 2,\n          ability: {\n            name: 'Nature\\'s Authority',\n            description: 'The staff channels the power of the oak.',\n            effect: 'Add +1 to all wisdom challenges.'\n          },\n          drawback: {\n            description: 'The staff is heavy and cumbersome.',\n            effect: 'Reduce resource capacity by 1 while carried.'\n          }\n        },\n        {\n          id: 'item_3',\n          name: 'Iron Blade',\n          description: 'A simple but effective weapon forged from iron.',\n          type: CardType.CRAFTED_ITEM,\n          requiredResources: ['resource_3'],\n          complexity: 3,\n          ability: {\n            name: 'Sharp Edge',\n            description: 'The blade cuts through obstacles with ease.',\n            effect: 'Add +2 to strength challenges.'\n          }\n        }\n      ];\n    },\n    \n    initializeSeasons() {\n      this.seasons = [\n        {\n          id: 'season_1',\n          name: 'Samhain',\n          description: 'The Celtic new year, when the veil between worlds is thinnest.',\n          type: CardType.SEASON,\n          season: Season.SAMHAIN,\n          abundantResources: ['resource_4'],\n          scarceResources: ['resource_1', 'resource_5'],\n          animalAffinities: ['companion_1'],\n          effects: [\n            {\n              name: 'Thin Veil',\n              description: 'The boundary between the mortal world and the Otherworld weakens.',\n              effect: 'Wisdom challenges are easier, but unexpected spirits may appear.'\n            }\n          ]\n        },\n        {\n          id: 'season_2',\n          name: 'Winter\\'s Depth',\n          description: 'The coldest time of year, when survival is most challenging.',\n          type: CardType.SEASON,\n          season: Season.WINTERS_DEPTH,\n          abundantResources: [],\n          scarceResources: ['resource_1', 'resource_2', 'resource_5'],\n          animalAffinities: ['companion_1', 'companion_2'],\n          effects: [\n            {\n              name: 'Bitter Cold',\n              description: 'The harsh weather tests endurance and resourcefulness.',\n              effect: 'Lose 1 health at the end of each turn unless sheltered.'\n            }\n          ]\n        },\n        {\n          id: 'season_3',\n          name: 'Imbolc',\n          description: 'The first stirrings of spring, a time of purification and renewal.',\n          type: CardType.SEASON,\n          season: Season.IMBOLC,\n          abundantResources: ['resource_3'],\n          scarceResources: [],\n          animalAffinities: ['companion_2'],\n          effects: [\n            {\n              name: 'Renewal',\n              description: 'The land begins to awaken from winter\\'s slumber.',\n              effect: 'Heal 1 health at the start of each turn.'\n            }\n          ]\n        },\n        {\n          id: 'season_4',\n          name: 'Beltane',\n          description: 'The height of spring, celebrating fertility and growth.',\n          type: CardType.SEASON,\n          season: Season.BELTANE,\n          abundantResources: ['resource_1', 'resource_3', 'resource_5'],\n          scarceResources: ['resource_4'],\n          animalAffinities: ['companion_3'],\n          effects: [\n            {\n              name: 'Abundant Growth',\n              description: 'The land is lush with new life and energy.',\n              effect: 'Gather one additional resource per turn.'\n            }\n          ]\n        },\n        {\n          id: 'season_5',\n          name: 'Lughnasadh',\n          description: 'The harvest festival, celebrating the first fruits of the season.',\n          type: CardType.SEASON,\n          season: Season.LUGHNASADH,\n          abundantResources: ['resource_1', 'resource_2', 'resource_5'],\n          scarceResources: [],\n          animalAffinities: ['companion_3'],\n          effects: [\n            {\n              name: 'Harvest Bounty',\n              description: 'The land provides abundant resources before winter.',\n              effect: 'Resource capacity is increased by 2 during this season.'\n            }\n          ]\n        }\n      ];\n    }\n  }\n});\n","export enum GamePhase {\n  SETUP = 'SETUP',\n  CHARACTER_SELECTION = 'CHARACTER_SELECTION',\n  SEASONAL_ASSESSMENT = 'SEASONAL_ASSESSMENT',\n  THREAT_LEVEL_CHECK = 'THREAT_LEVEL_CHECK',\n  LANDSCAPE_CHALLENGE = 'LANDSCAPE_CHALLENGE',\n  CHALLENGE_RESOLUTION = 'CHALLENGE_RESOLUTION',\n  RESOURCE_MANAGEMENT = 'RESOURCE_MANAGEMENT',\n  ANIMAL_COMPANION = 'ANIMAL_COMPANION',\n  CRAFTING = 'CRAFTING',\n  JOURNEY_PROGRESSION = 'JOURNEY_PROGRESSION',\n  GAME_OVER = 'GAME_OVER'\n}\n","import { defineStore } from 'pinia';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport { GameState, VictoryConditions, GameLogEntry, TempEffect } from '@/models/types/game';\nimport { LandscapeCard, SeasonCard } from '@/models/types/cards';\nimport { usePlayerStore } from './playerStore';\nimport { useCardStore } from './cardStore';\n\nexport const useGameStore = defineStore('game', {\n  state: () => ({\n    currentPhase: GamePhase.SEASONAL_ASSESSMENT,\n    currentTurn: 1,\n    currentSeason: Season.SAMHAIN,\n    currentLandscapeId: '',\n    currentChallenge: null as string | null,\n    visitedLandscapes: [] as string[],\n    journeyProgress: 0,\n    journeyPath: [] as string[],\n    gameLog: [] as GameLogEntry[],\n    victoryConditions: {\n      journeyCompleted: false,\n      balanceMaintained: false,\n      knowledgeAcquired: false,\n      bondsFormed: false,\n      questFulfilled: false,\n      landscapesTraversed: false,\n      seasonsExperienced: false,\n      challengesOvercome: false\n    } as VictoryConditions,\n    gameStarted: false,\n    gameOver: false,\n    isVictory: false,\n    threatTokens: 0,\n    blessingTokens: 0,\n    challengeHistory: [] as { id: string, outcome: string, turn: number }[],\n    tempEffects: [] as TempEffect[],\n    journeyComplete: false,\n    wisdom: 0,\n    ceremonyCompleted: false\n  }),\n  \n  getters: {\n    currentLandscape(): LandscapeCard | null {\n      const cardStore = useCardStore();\n      const landscape = cardStore.getLandscapeById(this.currentLandscapeId);\n      return landscape || null;\n    },\n    \n    currentSeasonCard(): SeasonCard | null {\n      const cardStore = useCardStore();\n      const seasonCard = cardStore.getSeasonById(this.currentSeason);\n      return seasonCard || null;\n    },\n    \n    journeyPercentage(): number {\n      return Math.min(100, Math.round((this.journeyProgress / 10) * 100));\n    },\n    \n    isGameOver(): boolean {\n      return this.gameOver;\n    },\n    \n    hasWon(): boolean {\n      return this.isVictory;\n    },\n    \n    formattedGameLog(): GameLogEntry[] {\n      return [...this.gameLog].reverse();\n    },\n    \n    threatLevel(): number {\n      return Math.floor(this.threatTokens / 3);\n    },\n    \n    hasTempEffect(): (effectId: string) => boolean {\n      return (effectId: string) => {\n        return this.tempEffects.some(effect => effect.id === effectId && effect.duration > 0);\n      };\n    },\n    \n    getTempEffectStrength(): (effectId: string) => number {\n      return (effectId: string) => {\n        const effect = this.tempEffects.find(effect => effect.id === effectId && effect.duration > 0);\n        return effect ? effect.strength : 0;\n      };\n    }\n  },\n  \n  actions: {\n    startGame(): void {\n      this.gameStarted = true;\n      this.currentPhase = GamePhase.SEASONAL_ASSESSMENT;\n      this.currentTurn = 1;\n      this.currentSeason = Season.SAMHAIN;\n      this.threatTokens = 0;\n      this.tempEffects = [];\n      this.addToGameLog('Your journey begins in the season of Samhain, when the veil between worlds is thinnest.', true);\n    },\n    \n    resetGame(): void {\n      this.currentPhase = GamePhase.SEASONAL_ASSESSMENT;\n      this.currentTurn = 1;\n      this.currentSeason = Season.SAMHAIN;\n      this.currentLandscapeId = '';\n      this.currentChallenge = null;\n      this.visitedLandscapes = [];\n      this.journeyProgress = 0;\n      this.journeyPath = [];\n      this.gameLog = [];\n      this.victoryConditions = {\n        journeyCompleted: false,\n        balanceMaintained: false,\n        knowledgeAcquired: false,\n        bondsFormed: false,\n        questFulfilled: false,\n        landscapesTraversed: false,\n        seasonsExperienced: false,\n        challengesOvercome: false\n      };\n      this.gameStarted = false;\n      this.gameOver = false;\n      this.isVictory = false;\n      this.threatTokens = 0;\n      this.blessingTokens = 0;\n      this.challengeHistory = [];\n      this.tempEffects = [];\n    },\n    \n    endGame(isVictory: boolean): void {\n      this.gameOver = true;\n      this.isVictory = isVictory;\n      \n      if (isVictory) {\n        this.addToGameLog('Congratulations! You have completed your journey through the Celtic Realm.', true);\n      } else {\n        this.addToGameLog('Your journey has come to an end. The Celtic Realm remains shrouded in mystery.', true);\n      }\n      \n      this.currentPhase = GamePhase.GAME_OVER;\n    },\n    \n    setPhase(phase: GamePhase): void {\n      this.currentPhase = phase;\n      this.addToGameLog(`Entering the ${this.formatPhase(phase)} phase.`);\n    },\n    \n    advancePhase(): void {\n      const phaseOrder = [\n        GamePhase.SEASONAL_ASSESSMENT,\n        GamePhase.THREAT_LEVEL_CHECK,\n        GamePhase.LANDSCAPE_CHALLENGE,\n        GamePhase.CHALLENGE_RESOLUTION,\n        GamePhase.RESOURCE_MANAGEMENT,\n        GamePhase.ANIMAL_COMPANION,\n        GamePhase.CRAFTING,\n        GamePhase.JOURNEY_PROGRESSION\n      ];\n      \n      const currentIndex = phaseOrder.indexOf(this.currentPhase);\n      if (currentIndex !== -1) {\n        this.currentPhase = phaseOrder[(currentIndex + 1) % phaseOrder.length];\n        this.addToGameLog(`Entering the ${this.formatPhase(this.currentPhase)} phase.`, true, 'phase', {\n          previousPhase: phaseOrder[currentIndex],\n          newPhase: this.currentPhase\n        });\n        \n        // If we've completed a full cycle, advance the turn\n        if (this.currentPhase === GamePhase.SEASONAL_ASSESSMENT) {\n          this.advanceTurn();\n        }\n      }\n    },\n    \n    advanceTurn(): void {\n      this.currentTurn++;\n      this.addToGameLog(`Turn ${this.currentTurn} has begun.`, true, 'system', {\n        newTurn: this.currentTurn,\n        currentSeason: this.formatSeason(this.currentSeason)\n      });\n      \n      // Process any temporary effects\n      this.processTempEffects();\n      \n      // Check if we need to advance the season\n      if (this.currentTurn % 3 === 0) {\n        this.advanceSeason();\n      }\n      \n      // Check victory conditions\n      this.checkVictoryConditions();\n    },\n    \n    advanceSeason(): void {\n      const seasonOrder = [\n        Season.SAMHAIN,\n        Season.WINTERS_DEPTH,\n        Season.IMBOLC,\n        Season.BELTANE,\n        Season.LUGHNASADH\n      ];\n      \n      const currentIndex = seasonOrder.indexOf(this.currentSeason);\n      if (currentIndex !== -1) {\n        const nextIndex = (currentIndex + 1) % seasonOrder.length;\n        const previousSeason = this.currentSeason;\n        this.currentSeason = seasonOrder[nextIndex];\n        \n        this.addToGameLog(`The season has changed to ${this.formatSeason(this.currentSeason)}.`, true, 'phase', {\n          previousSeason: this.formatSeason(previousSeason),\n          newSeason: this.formatSeason(this.currentSeason),\n          turn: this.currentTurn\n        });\n        \n        // Process resource changes with seasonal transition\n        this.processSeasonalResourceChanges(previousSeason, this.currentSeason);\n        \n        // Apply season effects\n        const cardStore = useCardStore();\n        const seasonCard = cardStore.getSeasonById(this.currentSeason);\n        \n        if (seasonCard) {\n          this.addToGameLog(`${seasonCard.name}: ${seasonCard.description}`, false, 'system', {\n            seasonEffects: seasonCard.effects\n          });\n          \n          // Apply any immediate effects of the season\n          if (seasonCard.effects && seasonCard.effects.length > 0) {\n            seasonCard.effects.forEach(effect => {\n              const description = typeof effect.effect === 'string' ? effect.effect : `${effect.effect}`;\n              this.addToGameLog(`Season Effect: ${effect.name} - ${description}`, false, 'system', {\n                effectDetails: effect\n              });\n              // Here you would apply the actual effect logic\n            });\n          }\n        }\n      }\n    },\n    \n    setCurrentLandscape(landscapeId: string): void {\n      const previousLandscapeId = this.currentLandscapeId;\n      this.currentLandscapeId = landscapeId;\n      \n      // Add to visited landscapes if not already visited\n      if (!this.visitedLandscapes.includes(landscapeId)) {\n        this.addVisitedLandscape(landscapeId);\n      }\n      \n      const cardStore = useCardStore();\n      const landscape = cardStore.getLandscapeById(landscapeId);\n      \n      if (landscape) {\n        this.addToGameLog(`You have arrived at ${landscape.name}.`, true, 'action', {\n          previousLandscapeId,\n          newLandscapeId: landscapeId,\n          landscapeName: landscape.name,\n          availableResources: landscape.availableResources,\n          specialFeature: landscape.specialFeature,\n          providesShelter: landscape.providesShelter\n        });\n        \n        // Apply entry effects if any\n        if (landscape.entryEffect) {\n          this.addToGameLog(`${landscape.name} Entry Effect: ${landscape.entryEffect.description}`, false, 'system', {\n            entryEffect: landscape.entryEffect\n          });\n          // Here you would apply the actual entry effect logic\n        }\n        \n        // Check if we've traversed enough landscapes for victory condition\n        if (this.visitedLandscapes.length >= 10) {\n          this.victoryConditions.landscapesTraversed = true;\n          this.addToGameLog('You have traversed enough landscapes to complete your journey.', true, 'system', {\n            visitedLandscapes: this.visitedLandscapes.length,\n            requiredLandscapes: 10\n          });\n        }\n      }\n    },\n    \n    addVisitedLandscape(landscapeId: string): void {\n      if (!this.visitedLandscapes.includes(landscapeId)) {\n        this.visitedLandscapes.push(landscapeId);\n        \n        const cardStore = useCardStore();\n        const landscape = cardStore.getLandscapeById(landscapeId);\n        \n        if (landscape) {\n          this.addToGameLog(`${landscape.name} has been added to your journey path.`, false, 'system', {\n            landscapeId,\n            landscapeName: landscape.name,\n            visitedLandscapesCount: this.visitedLandscapes.length\n          });\n          \n          // Add to journey path for tracking\n          this.journeyPath.push(landscapeId);\n          \n          // Increase journey progress\n          this.advanceJourney(1);\n        }\n      }\n    },\n    \n    setCurrentChallenge(challengeId: string | null): void {\n      const previousChallengeId = this.currentChallenge;\n      this.currentChallenge = challengeId;\n      \n      if (challengeId) {\n        const cardStore = useCardStore();\n        const challenge = cardStore.getChallengeById(challengeId);\n        \n        if (challenge) {\n          // Extract challenge details for the log\n          const challengeName = challenge.name || `${this.currentLandscape?.name || 'Unknown'} Challenge`;\n          const challengeType = challenge.type || 'unknown';\n          const challengeDifficulty = challenge.difficulty || 5;\n          const challengeRewards = challenge.rewards || { resources: [], experience: 0 };\n          \n          this.addToGameLog(`You face a challenge: ${challengeName}`, true, 'challenge', {\n            previousChallengeId,\n            newChallengeId: challengeId,\n            challengeName: challengeName,\n            challengeType: challengeType,\n            challengeDifficulty: challengeDifficulty,\n            challengeRewards: challengeRewards\n          });\n        }\n      } else {\n        this.addToGameLog('The challenge has been cleared.', false, 'challenge', {\n          previousChallengeId\n        });\n      }\n    },\n    \n    advanceJourney(steps: number): void {\n      const previousProgress = this.journeyProgress;\n      this.journeyProgress += steps;\n      \n      this.addToGameLog(`Your journey has progressed by ${steps} steps.`, false, 'action', {\n        previousProgress,\n        newProgress: this.journeyProgress,\n        stepsAdded: steps\n      });\n      \n      // Check if journey is complete\n      if (this.journeyProgress >= 15) {\n        this.victoryConditions.journeyCompleted = true;\n        this.addToGameLog('You have completed your journey through the Celtic Realm!', true, 'system', {\n          journeyProgress: this.journeyProgress,\n          journeyCompleted: true\n        });\n        \n        // Check if we should end the game\n        if (this.checkVictoryConditions()) {\n          this.completeJourney(true);\n        }\n      }\n    },\n    \n    completeJourney(isVictory: boolean): void {\n      this.addToGameLog(\n        isVictory \n          ? 'Congratulations! You have successfully completed your journey through the Celtic Realm!' \n          : 'Your journey has come to an end, but not in victory.',\n        true,\n        'system',\n        {\n          isVictory,\n          journeyProgress: this.journeyProgress,\n          victoryConditions: { ...this.victoryConditions },\n          visitedLandscapes: this.visitedLandscapes.length,\n          currentTurn: this.currentTurn,\n          currentSeason: this.formatSeason(this.currentSeason)\n        }\n      );\n      \n      // End the game\n      this.endGame(isVictory);\n    },\n    \n    addToGameLog(\n      message: string, \n      highlight: boolean = false, \n      type: 'phase' | 'action' | 'challenge' | 'resource' | 'companion' | 'crafting' | 'system' | 'error' | 'debug' = 'system',\n      details: { [key: string]: any } = {}\n    ): void {\n      const entry: GameLogEntry = {\n        message,\n        timestamp: Date.now(),\n        highlight,\n        type,\n        details,\n        turn: this.currentTurn,\n        season: this.currentSeason\n      };\n      \n      // Log to console for debugging\n      if (type === 'error') {\n        console.error(entry.message, details);\n      } else if (type === 'debug') {\n        console.debug(entry.message, details);\n      } else {\n        console.log(entry.message, details);\n      }\n      \n      this.gameLog.push(entry);\n      \n      // Keep the log from getting too large\n      if (this.gameLog.length > 100) {\n        this.gameLog.shift();\n      }\n    },\n    \n    checkVictoryConditions(): boolean {\n      const allConditionsMet = Object.values(this.victoryConditions).every(Boolean);\n      \n      if (allConditionsMet) {\n        this.endGame(true);\n      }\n      \n      return allConditionsMet;\n    },\n    \n    formatPhase(phase: GamePhase): string {\n      return phase.replace(/_/g, ' ').toLowerCase();\n    },\n    \n    formatSeason(season: Season): string {\n      return season.replace(/_/g, ' ').toLowerCase();\n    },\n    \n    // New methods for threat management\n    addThreatTokens(amount: number): number {\n      const oldThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      this.threatTokens += amount;\n      \n      const newThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      if (newThreatLevel > oldThreatLevel) {\n        this.addToGameLog(`The threat level has increased to ${newThreatLevel}!`, true);\n      }\n      \n      // Update victory condition for balance\n      this.victoryConditions.balanceMaintained = this.threatTokens < 6;\n      \n      return this.threatTokens;\n    },\n    \n    removeThreatTokens(amount: number): number {\n      const oldThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      this.threatTokens = Math.max(0, this.threatTokens - amount);\n      \n      const newThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      if (newThreatLevel < oldThreatLevel) {\n        this.addToGameLog(`The threat level has decreased to ${newThreatLevel}.`, true);\n      }\n      \n      // Update victory condition for balance\n      this.victoryConditions.balanceMaintained = this.threatTokens < 6;\n      \n      return this.threatTokens;\n    },\n    \n    addTempEffect(effectId: string, name: string, description: string, strength: number, duration: number): void {\n      // Check if effect already exists\n      const existingEffectIndex = this.tempEffects.findIndex(effect => effect.id === effectId);\n      \n      if (existingEffectIndex !== -1) {\n        // Update existing effect\n        this.tempEffects[existingEffectIndex].strength = strength;\n        this.tempEffects[existingEffectIndex].duration = duration;\n      } else {\n        // Add new effect\n        this.tempEffects.push({\n          id: effectId,\n          name,\n          description,\n          strength,\n          duration\n        });\n        \n        this.addToGameLog(`New effect: ${name} - ${description}`, true);\n      }\n    },\n    \n    removeTempEffect(effectId: string): boolean {\n      const index = this.tempEffects.findIndex(effect => effect.id === effectId);\n      \n      if (index !== -1) {\n        const effect = this.tempEffects[index];\n        this.addToGameLog(`Effect ended: ${effect.name}`, true);\n        this.tempEffects.splice(index, 1);\n        return true;\n      }\n      \n      return false;\n    },\n    \n    processTempEffects(): void {\n      // Reduce duration of all temporary effects\n      this.tempEffects.forEach((effect, index) => {\n        if (effect.duration > 0) {\n          effect.duration--;\n          \n          if (effect.duration === 0) {\n            this.addToGameLog(`Effect ended: ${effect.name}`, true);\n            this.tempEffects.splice(index, 1);\n          }\n        }\n      });\n    },\n    \n    clearGameLog(): void {\n      this.gameLog = [];\n      this.addToGameLog('Game log cleared.', false, 'system', {\n        timestamp: Date.now()\n      });\n    },\n    \n    // Handle threat level check phase\n    handleThreatLevelCheck(): void {\n      const threatLevel = this.threatLevel;\n      this.addToGameLog(`Threat Level Check: Current threat level is ${threatLevel}.`, true);\n      \n      // Apply threat level effects to challenge difficulty\n      if (threatLevel > 0) {\n        this.addToGameLog(`Challenge difficulty increased by +${threatLevel} due to threat level.`);\n      }\n      \n      // Special events based on threat tokens\n      if (this.threatTokens >= 10) {\n        this.addToGameLog('DANGER: The otherworldly forces are manifesting! Rolling on the Otherworldly Manifestation table.', true, 'error');\n        this.triggerOtherworldlyManifestation();\n      } else if (this.threatTokens >= 5) {\n        this.addToGameLog('WARNING: The spiritual balance is disturbed. Drawing a random event.', true, 'challenge');\n        this.triggerRandomEvent();\n      }\n      \n      // Advance to next phase\n      this.advancePhase();\n    },\n    \n    // Random Event System\n    triggerRandomEvent(): void {\n      // Define possible random events\n      const randomEvents = [\n        {\n          id: 'sudden_storm',\n          name: 'Sudden Storm',\n          description: 'Dark clouds gather suddenly, bringing a fierce storm.',\n          effect: () => {\n            this.addToGameLog('The storm makes gathering resources more difficult. Resource capacity reduced by 1 temporarily.', true);\n            this.addTempEffect('storm', 'Sudden Storm', 'Resource capacity -1', 1, 2);\n            const playerStore = usePlayerStore();\n            playerStore.addEffect({\n              id: 'storm_effect',\n              name: 'Storm Hindrance',\n              description: 'Resource gathering diminished',\n              type: 'negative',\n              magnitude: -1,\n              duration: 2,\n              target: 'resourceCapacity'\n            });\n          }\n        },\n        {\n          id: 'animal_migration',\n          name: 'Animal Migration',\n          description: 'A sudden migration of animals passes through the area.',\n          effect: () => {\n            this.addToGameLog('The animal migration brings opportunity. Your next Animal Companion check gets +2.', true);\n            this.addTempEffect('migration', 'Animal Migration', 'Animal Companion checks +2', 2, 1);\n          }\n        },\n        {\n          id: 'ancient_memory',\n          name: 'Ancient Memory',\n          description: 'The land itself seems to remember ancient events, stirring old magics.',\n          effect: () => {\n            const playerStore = usePlayerStore();\n            playerStore.gainExperience(1);\n            this.addToGameLog('Ancient wisdom floods your mind. You gain 1 experience point.', true);\n          }\n        },\n        {\n          id: 'fae_mischief',\n          name: 'Fae Mischief',\n          description: 'The faerie folk play tricks on unwary travelers.',\n          effect: () => {\n            this.addToGameLog('Your supplies have been tampered with by mischievous fae.', true);\n            const playerStore = usePlayerStore();\n            playerStore.loseRandomResources(1);\n          }\n        },\n        {\n          id: 'spiritual_blessing',\n          name: 'Spiritual Blessing',\n          description: 'The ancestral spirits take notice of your journey and offer aid.',\n          effect: () => {\n            this.blessingTokens += 1;\n            this.addToGameLog('You receive a blessing from the spirits. +1 Blessing token.', true);\n          }\n        }\n      ];\n      \n      // Select random event\n      const randomEvent = randomEvents[Math.floor(Math.random() * randomEvents.length)];\n      \n      // Trigger the event\n      this.addToGameLog(`Random Event: ${randomEvent.name} - ${randomEvent.description}`, true);\n      randomEvent.effect();\n    },\n    \n    // Otherworldly Manifestation System\n    triggerOtherworldlyManifestation(): void {\n      // Define possible otherworldly manifestations\n      const manifestations = [\n        {\n          id: 'spirit_guardian',\n          name: 'Spirit Guardian',\n          description: 'A powerful guardian spirit manifests to test your worthiness.',\n          effect: () => {\n            this.addToGameLog('The spirit guardian challenges you to prove your worth!', true);\n            this.addTempEffect('guardian_challenge', 'Spirit Guardian Challenge', 'Must succeed on next 2 challenges or lose 2 health', 2, 2);\n            // Set up consequence if challenges are failed\n            this.addToGameLog('You must succeed on your next two challenges or suffer 2 health damage.', true);\n          }\n        },\n        {\n          id: 'reality_distortion',\n          name: 'Reality Distortion',\n          description: 'The boundaries between worlds thin, causing strange distortions in reality.',\n          effect: () => {\n            this.addToGameLog('Reality warps around you, changing your path!', true);\n            // Change the current landscape to a random one\n            const cardStore = useCardStore();\n            const landscapes = cardStore.landscapes;\n            const randomLandscape = landscapes[Math.floor(Math.random() * landscapes.length)];\n            this.setCurrentLandscape(randomLandscape.id);\n            this.addToGameLog(`You suddenly find yourself at ${randomLandscape.name}!`, true);\n          }\n        },\n        {\n          id: 'ancestral_curse',\n          name: 'Ancestral Curse',\n          description: 'Ancient spirits place a curse upon you for disturbing the balance.',\n          effect: () => {\n            this.addToGameLog('An ancestral curse falls upon you!', true);\n            const playerStore = usePlayerStore();\n            playerStore.addEffect({\n              id: 'ancestral_curse',\n              name: 'Ancestral Curse',\n              description: '-1 to all challenge rolls',\n              type: 'negative',\n              magnitude: -1,\n              duration: 3,\n              target: 'challengeRolls'\n            });\n            this.addToGameLog('You feel weakened. -1 to all challenge rolls for 3 turns.', true);\n          }\n        },\n        {\n          id: 'otherworld_portal',\n          name: 'Otherworld Portal',\n          description: 'A portal to the Otherworld opens, risking pulling you in.',\n          effect: () => {\n            this.addToGameLog('A swirling portal to the Otherworld appears before you!', true);\n            // Increase threat further\n            this.addThreatTokens(2);\n            this.addToGameLog('The portal\\'s energy increases the spiritual imbalance. +2 Threat tokens.', true);\n            \n            // But also offer a choice for reward\n            this.addToGameLog('You sense that reaching into the portal could yield a valuable resource, but at great risk...', true);\n            // This would trigger a choice in the UI\n            // For now, simulate a 50/50 chance of benefit vs. harm\n            if (Math.random() > 0.5) {\n              const playerStore = usePlayerStore();\n              const resource = ['silver_mistletoe', 'standing_stone_chips', 'amber_shards'][Math.floor(Math.random() * 3)];\n              playerStore.addResource(resource);\n              this.addToGameLog(`You reach into the portal and retrieve a rare resource: ${resource.replace('_', ' ')}!`, true);\n            } else {\n              const playerStore = usePlayerStore();\n              playerStore.loseHealth(2);\n              this.addToGameLog('The portal\\'s energy burns you as you reach in! You lose 2 health.', true);\n            }\n          }\n        },\n        {\n          id: 'time_anomaly',\n          name: 'Time Anomaly',\n          description: 'Time flows strangely, affecting your progress and abilities.',\n          effect: () => {\n            this.addToGameLog('Time becomes unstable around you!', true);\n            // 50% chance to advance or reverse season\n            if (Math.random() > 0.5) {\n              this.advanceSeason();\n              this.addToGameLog('Time accelerates, advancing the season prematurely!', true);\n            } else {\n              this.reverseSeason();\n              this.addToGameLog('Time flows backwards, returning to the previous season!', true);\n            }\n          }\n        }\n      ];\n      \n      // Select random manifestation\n      const manifestation = manifestations[Math.floor(Math.random() * manifestations.length)];\n      \n      // Trigger the manifestation\n      this.addToGameLog(`Otherworldly Manifestation: ${manifestation.name} - ${manifestation.description}`, true, 'error');\n      manifestation.effect();\n    },\n    \n    // Helper for Time Anomaly manifestation\n    reverseSeason(): void {\n      const seasonOrder = [\n        Season.SAMHAIN,\n        Season.WINTERS_DEPTH,\n        Season.IMBOLC,\n        Season.BELTANE,\n        Season.LUGHNASADH\n      ];\n      \n      const currentIndex = seasonOrder.indexOf(this.currentSeason);\n      if (currentIndex > 0) {\n        const previousSeason = seasonOrder[currentIndex - 1];\n        this.currentSeason = previousSeason;\n        this.addToGameLog(`The season has reversed to ${this.formatSeason(this.currentSeason)}.`, true);\n      } else {\n        this.addToGameLog('The season remains unchanged - you are already at the beginning of the cycle.', true);\n      }\n      \n      // Update the season card\n      this.updateSeasonCard();\n    },\n    \n    // Handle healing and recovery phase\n    handleHealingRecovery(): void {\n      const playerStore = usePlayerStore();\n      \n      // Basic healing opportunity each turn\n      const healingAmount = 1;\n      const currentSeason = this.currentSeasonCard;\n      \n      // Apply seasonal healing modifiers\n      let seasonalHealingModifier = 0;\n      if (currentSeason) {\n        if (this.currentSeason === Season.IMBOLC) {\n          seasonalHealingModifier = 1; // Imbolc provides +1 healing\n        } else if (this.currentSeason === Season.LUGHNASADH) {\n          seasonalHealingModifier = 0; // Lughnasadh doubles healing effectiveness\n          this.addToGameLog('The community support during Lughnasadh doubles your healing effectiveness.');\n        }\n      }\n      \n      const totalHealing = healingAmount + seasonalHealingModifier;\n      \n      if (playerStore.health < playerStore.maxHealth) {\n        playerStore.healHealth(totalHealing);\n        this.addToGameLog(`You recover ${totalHealing} health during the healing phase.`, true, 'system');\n      } else {\n        this.addToGameLog('You are already at full health.', false, 'system');\n      }\n      \n      // Special healing locations\n      if (this.currentLandscape && ['Sacred Oak Grove', 'Druid\\'s Sanctuary', 'Moonlit Loch'].includes(this.currentLandscape.name)) {\n        const specialHealing = 1;\n        playerStore.healHealth(specialHealing);\n        this.addToGameLog(`The spiritual energy at this ${this.currentLandscape.name} provides an additional ${specialHealing} healing.`, true);\n      }\n      \n      // Advance to next phase\n      this.advancePhase();\n    },\n    \n    // Process resource changes during seasonal transitions\n    processSeasonalResourceChanges(previousSeason: Season, newSeason: Season): void {\n      const playerStore = usePlayerStore();\n      const cardStore = useCardStore();\n      const resources = [...playerStore.resources]; // Create a copy to avoid modification during iteration\n      \n      this.addToGameLog(`Checking resources for seasonal changes...`, false, 'system');\n      \n      // Define which resources spoil during which seasonal transitions\n      const seasonalSpoilage = {\n        // From Samhain to Imbolc (early winter)\n        [`${Season.SAMHAIN}_${Season.WINTERS_DEPTH}`]: ['berries', 'mushrooms', 'fresh_herbs'],\n        [`${Season.WINTERS_DEPTH}_${Season.IMBOLC}`]: ['winter_roots', 'preserved_meats'],\n        \n        // From Imbolc to Beltane (spring)\n        [`${Season.IMBOLC}_${Season.BELTANE}`]: ['spring_flowers', 'birch_sap'],\n        \n        // From Beltane to Lughnasadh (summer)\n        [`${Season.BELTANE}_${Season.LUGHNASADH}`]: ['summer_fruits', 'fresh_water'],\n        \n        // From Lughnasadh to Samhain (autumn)\n        [`${Season.LUGHNASADH}_${Season.SAMHAIN}`]: ['summer_fruits', 'fresh_water']\n      };\n      \n      // Define which resources transform during seasonal transitions\n      const seasonalTransformations = {\n        // From Samhain to Imbolc\n        [`${Season.SAMHAIN}_${Season.WINTERS_DEPTH}`]: {\n          'acorns': 'winter_roots', // Acorns become more valuable in winter\n          'fresh_herbs': 'dried_herbs' // Fresh herbs dry out\n        },\n        \n        // From Imbolc to Beltane\n        [`${Season.WINTERS_DEPTH}_${Season.IMBOLC}`]: {\n          'snow_essence': 'spring_water', // Snow melts into spring water\n          'pine_needles': 'spring_flowers' // New growth replaces old\n        },\n        \n        // From Beltane to Lughnasadh\n        [`${Season.IMBOLC}_${Season.BELTANE}`]: {\n          'spring_flowers': 'summer_fruits', // Flowers become fruits\n          'birch_sap': 'sweet_syrup' // Sap concentrates in the heat\n        },\n        \n        // From Lughnasadh to Samhain\n        [`${Season.BELTANE}_${Season.LUGHNASADH}`]: {\n          'green_leaves': 'red_leaves', // Leaves change color\n          'summer_fruits': 'fermented_fruit' // Fruits ferment\n        }\n      };\n      \n      // Check for resources that spoil during this seasonal transition\n      const transitionKey = `${previousSeason}_${newSeason}`;\n      const spoilingResources = seasonalSpoilage[transitionKey] || [];\n      const transformingResources = seasonalTransformations[transitionKey] || {};\n      \n      // Process spoilage\n      resources.forEach(resourceId => {\n        // Check if this resource spoils\n        if (spoilingResources.includes(resourceId)) {\n          playerStore.removeResource(resourceId);\n          this.addToGameLog(`Your ${this.formatResourceName(resourceId)} has spoiled with the change to ${this.formatSeason(newSeason)}.`, true, 'resource');\n        }\n        \n        // Check if this resource transforms\n        if (resourceId in transformingResources) {\n          const newResourceId = transformingResources[resourceId];\n          playerStore.removeResource(resourceId);\n          playerStore.addResource(newResourceId);\n          \n          // Get resource names for better logging\n          const oldResource = cardStore.getResourceById(resourceId);\n          const newResource = cardStore.getResourceById(newResourceId);\n          \n          const oldName = oldResource ? oldResource.name : this.formatResourceName(resourceId);\n          const newName = newResource ? newResource.name : this.formatResourceName(newResourceId);\n          \n          this.addToGameLog(`Your ${oldName} has transformed into ${newName} with the change to ${this.formatSeason(newSeason)}.`, true, 'resource');\n        }\n      });\n      \n      // Update resource availability based on the new season\n      this.updateResourceAvailability();\n    },\n    \n    // Helper method to format resource ID to a friendly name\n    formatResourceName(resourceId: string): string {\n      return resourceId.replace(/_/g, ' ');\n    },\n    \n    // Update resource availability based on current season\n    updateResourceAvailability(): void {\n      // This would be implemented in the cardStore or another appropriate place\n      // It would adjust what resources are available in each landscape based on the season\n      \n      this.addToGameLog(`Resource availability has adjusted to the new season.`, false, 'system');\n      \n      // Here we would apply season-specific resource modifiers\n      // For example, some resources become more abundant in certain seasons\n    },\n    \n    // Method to perform a D8 dice roll (1-8)\n    rollD8(): number {\n      // Random number between 1 and 8\n      const roll = Math.floor(Math.random() * 8) + 1;\n      this.addToGameLog(`You rolled a ${roll} on a D8.`, true, 'system');\n      return roll;\n    },\n    \n    // Resolve a challenge based on roll and difficulty\n    resolveChallenge(totalRoll: number, difficulty: number): 'SUCCESS' | 'PARTIAL' | 'FAILURE' {\n      this.addToGameLog(`Challenge attempt: Roll ${totalRoll} vs Difficulty ${difficulty}`, true, 'challenge');\n      \n      // Natural 8 is always a success\n      if (totalRoll >= difficulty + 2) {\n        this.addToGameLog('Critical Success! You overcome the challenge with exceptional results.', true, 'challenge');\n        \n        // Add to challenge history\n        if (this.currentChallenge) {\n          this.challengeHistory.push({\n            id: this.currentChallenge,\n            outcome: 'SUCCESS',\n            turn: this.currentTurn\n          });\n        }\n        \n        // Remove threat tokens for successful challenge\n        this.removeThreatTokens(1);\n        \n        return 'SUCCESS';\n      } else if (totalRoll >= difficulty) {\n        this.addToGameLog('Success! You overcome the challenge.', true, 'challenge');\n        \n        // Add to challenge history\n        if (this.currentChallenge) {\n          this.challengeHistory.push({\n            id: this.currentChallenge,\n            outcome: 'SUCCESS',\n            turn: this.currentTurn\n          });\n        }\n        \n        return 'SUCCESS';\n      } else if (totalRoll >= difficulty - 2) {\n        this.addToGameLog('Partial Success. You manage to barely overcome parts of the challenge.', true, 'challenge');\n        \n        // Add to challenge history\n        if (this.currentChallenge) {\n          this.challengeHistory.push({\n            id: this.currentChallenge,\n            outcome: 'PARTIAL',\n            turn: this.currentTurn\n          });\n        }\n        \n        // Add threat tokens for partial success\n        this.addThreatTokens(1);\n        \n        return 'PARTIAL';\n      } else {\n        this.addToGameLog('Failure. The challenge proves too difficult for now.', true, 'challenge');\n        \n        // Add to challenge history\n        if (this.currentChallenge) {\n          this.challengeHistory.push({\n            id: this.currentChallenge,\n            outcome: 'FAILURE',\n            turn: this.currentTurn\n          });\n        }\n        \n        // Add threat tokens for failure\n        this.addThreatTokens(2);\n        \n        return 'FAILURE';\n      }\n    },\n    \n    // Perform a special action at a location\n    performSpecialAction(actionId: string): { success: boolean; message: string } {\n      const cardStore = useCardStore();\n      const playerStore = usePlayerStore();\n      \n      // Handle different special actions based on ID\n      switch (actionId) {\n        case 'standing_stones_ceremony':\n          // This is the final ceremony at the Great Standing Stones\n          this.ceremonyCompleted = true;\n          this.journeyComplete = true;\n          \n          // Add wisdom to player\n          playerStore.wisdom = (playerStore.wisdom || 0) + 5;\n          \n          // Log the result\n          this.addToGameLog('You have performed the ancient ceremony at the Standing Stones. Your journey is complete!', true, 'special');\n          \n          return {\n            success: true,\n            message: 'You have successfully completed the journey!'\n          };\n          \n        case 'heal_at_spring':\n          // Healing at the sacred spring\n          playerStore.healHealth(5);\n          \n          this.addToGameLog('You drink from the sacred spring and feel revitalized.', true, 'special');\n          \n          return {\n            success: true,\n            message: 'You feel refreshed and healed.'\n          };\n          \n        case 'meditation':\n          // Gaining wisdom through meditation\n          playerStore.wisdom = (playerStore.wisdom || 0) + 2;\n          \n          this.addToGameLog('You meditate peacefully, gaining insight and wisdom.', true, 'special');\n          \n          return {\n            success: true,\n            message: 'Your mind feels clearer and wiser.'\n          };\n          \n        default:\n          return {\n            success: false,\n            message: 'That action is not available at this location.'\n          };\n      }\n    },\n    \n    // Method to gather resources from the current landscape\n    gatherResources(): void {\n      const playerStore = usePlayerStore();\n      const cardStore = useCardStore();\n      \n      if (!this.currentLandscape) {\n        this.addToGameLog('No landscape available to gather resources from.', true, 'error');\n        return;\n      }\n      \n      // Get available resources from current landscape\n      const availableResources = this.currentLandscape.availableResources || [];\n      \n      if (availableResources.length === 0) {\n        this.addToGameLog(`There are no resources available at ${this.currentLandscape.name}.`, true, 'resource');\n        return;\n      }\n      \n      // Check if player has room for resources\n      if (playerStore.resources.length >= playerStore.resourceCapacity) {\n        this.addToGameLog(`Your resource capacity (${playerStore.resourceCapacity}) is full. You must discard resources before gathering more.`, true, 'resource');\n        return;\n      }\n      \n      // Perform gathering challenge\n      const baseDifficulty = 5; // Base difficulty for resource gathering\n      const seasonalModifier = this.getSeasonalResourceModifier();\n      const threatModifier = Math.floor(this.threatTokens / 3); // Threat level affects difficulty\n      \n      const difficulty = baseDifficulty + threatModifier + seasonalModifier;\n      \n      // Roll for challenge\n      const roll = this.rollD8();\n      const characterModifier = playerStore.wisdom || 0;\n      const totalRoll = roll + characterModifier;\n      \n      // Determine outcome\n      const outcome = this.resolveChallenge(totalRoll, difficulty);\n      \n      // Award resources based on outcome\n      if (outcome === 'SUCCESS') {\n        // Success: Gain 2 resources\n        this.awardResources(2, availableResources);\n        this.addToGameLog(`Success! You've gathered resources from ${this.currentLandscape.name}.`, true, 'resource');\n      } else if (outcome === 'PARTIAL') {\n        // Partial success: Gain 1 resource\n        this.awardResources(1, availableResources);\n        this.addToGameLog(`Partial success. You've gathered a small amount of resources from ${this.currentLandscape.name}.`, true, 'resource');\n      } else {\n        // Failure: No resources gathered\n        this.addToGameLog(`You failed to gather any resources from ${this.currentLandscape.name}.`, true, 'resource');\n      }\n      \n      // Apply seasonal bonus for Lughnasadh (Harvest season)\n      if (this.currentSeason === Season.LUGHNASADH && (outcome === 'SUCCESS' || outcome === 'PARTIAL')) {\n        this.addToGameLog('The harvest season blesses you with an additional resource.', true, 'resource');\n        this.awardResources(1, availableResources);\n      }\n    },\n    \n    // Helper to award resources to the player\n    awardResources(count: number, availableResources: string[]): void {\n      const playerStore = usePlayerStore();\n      const cardStore = useCardStore();\n      \n      // Make sure count doesn't exceed available space\n      const remainingCapacity = playerStore.resourceCapacity - playerStore.resources.length;\n      count = Math.min(count, remainingCapacity);\n      \n      if (count <= 0) {\n        this.addToGameLog('Your resource capacity is full.', true, 'resource');\n        return;\n      }\n      \n      // Randomly select resources from available ones\n      for (let i = 0; i < count; i++) {\n        if (availableResources.length === 0) break;\n        \n        const randomIndex = Math.floor(Math.random() * availableResources.length);\n        const resourceId = availableResources[randomIndex];\n        \n        playerStore.addResource(resourceId);\n        \n        const resource = cardStore.getResourceById(resourceId);\n        const resourceName = resource ? resource.name : this.formatResourceName(resourceId);\n        \n        this.addToGameLog(`You gathered ${resourceName}.`, false, 'resource');\n      }\n    },\n    \n    // Get seasonal modifier for resource gathering\n    getSeasonalResourceModifier(): number {\n      // Check if resources are abundant or scarce in the current season\n      switch (this.currentSeason) {\n        case Season.SAMHAIN:\n          return 1; // Slightly easier gathering during Samhain\n        case Season.WINTERS_DEPTH:\n          return 2; // More difficult during Winter's Depth\n        case Season.IMBOLC:\n          return 0; // Normal during Imbolc\n        case Season.BELTANE:\n          return -1; // Easier during Beltane (abundance)\n        case Season.LUGHNASADH:\n          return -2; // Much easier during Lughnasadh (harvest time)\n        default:\n          return 0;\n      }\n    },\n  }\n});\n","/**\n * Victory Service\n * Validates victory conditions based on game state\n */\nimport { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\n\nclass VictoryService {\n  /**\n   * Check all victory conditions\n   * @returns Object with victory status and individual conditions\n   */\n  checkVictoryConditions(): {\n    isVictory: boolean;\n    conditions: {\n      journeyCompleted: boolean;\n      balanceMaintained: boolean;\n      knowledgeAcquired: boolean;\n      bondsFormed: boolean;\n      questFulfilled: boolean;\n      landscapesTraversed: boolean;\n      seasonsExperienced: boolean;\n      challengesOvercome: boolean;\n    };\n  } {\n    const journeyCompleted = this.checkJourneyCompletion();\n    const balanceMaintained = this.checkBalanceMaintained();\n    const knowledgeAcquired = this.checkKnowledgeAcquired();\n    const bondsFormed = this.checkBondsFormed();\n    const questFulfilled = this.checkPersonalQuest();\n    \n    // Add the missing conditions\n    const landscapesTraversed = this.checkLandscapesTraversed();\n    const seasonsExperienced = this.checkSeasonsExperienced();\n    const challengesOvercome = this.checkChallengesOvercome();\n    \n    const conditions = {\n      journeyCompleted,\n      balanceMaintained,\n      knowledgeAcquired,\n      bondsFormed,\n      questFulfilled,\n      landscapesTraversed,\n      seasonsExperienced,\n      challengesOvercome\n    };\n    \n    const isVictory = Object.values(conditions).every(Boolean);\n    \n    // Update game state\n    const gameStore = useGameStore();\n    gameStore.victoryConditions = conditions;\n    \n    return {\n      isVictory,\n      conditions\n    };\n  }\n  \n  /**\n   * Check if journey is complete (all 15 landscapes visited)\n   * @returns True if journey is complete\n   */\n  checkJourneyCompletion(): boolean {\n    const gameStore = useGameStore();\n    \n    // Complete when all 15 landscapes have been visited\n    return gameStore.visitedLandscapes.length >= 15;\n  }\n  \n  /**\n   * Check if balance is maintained (fewer than 6 threat tokens)\n   * @returns True if balance is maintained\n   */\n  checkBalanceMaintained(): boolean {\n    const gameStore = useGameStore();\n    return gameStore.threatTokens < 6;\n  }\n  \n  /**\n   * Check if knowledge acquired (at least 2 crafted items)\n   * @returns True if knowledge is acquired\n   */\n  checkKnowledgeAcquired(): boolean {\n    const playerStore = usePlayerStore();\n    return playerStore.craftedItems.length >= 2;\n  }\n  \n  /**\n   * Check if bonds formed (at least one animal companion)\n   * @returns True if bonds are formed\n   */\n  checkBondsFormed(): boolean {\n    const playerStore = usePlayerStore();\n    return playerStore.animalCompanions.length >= 1;\n  }\n  \n  /**\n   * Check character-specific personal quest\n   * @returns True if personal quest is fulfilled\n   */\n  checkPersonalQuest(): boolean {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    const gameStore = useGameStore();\n    \n    const character = cardStore.getCharacterById(playerStore.characterId);\n    if (!character) {\n      return false;\n    }\n    \n    // Since we don't have access to the actual properties needed,\n    // we'll implement a simplified version based on the character's ID\n    switch (character.id) {\n      case 'giant_beastfriend':\n        // Bond with at least 4 different Animal Companions\n        // Using companionCount getter instead of animalCompanions array\n        return playerStore.companionCount >= 4;\n        \n      case 'hedge_witch':\n        // Create at least 3 different Crafted Items\n        // Using craftedItemCount getter instead of craftedItems array\n        return playerStore.craftedItemCount >= 3;\n        \n      case 'iron_crafter':\n        // Craft a Legendary Item\n        // Since hasCraftedLegendaryItem doesn't exist, we'll assume this is based on having enough crafted items\n        return playerStore.craftedItemCount >= 5;\n        \n      case 'druid_seer':\n        // Complete 3 Ritual Sites\n        // Since completedRitualSites doesn't exist, we'll assume this is based on visited landscapes\n        return gameStore.visitedLandscapes.length >= 10;\n        \n      case 'celtic_warrior':\n        // Defeat 5 Challenges with Strength\n        // Since we don't have a way to track this, we'll assume this is based on visited landscapes\n        return gameStore.visitedLandscapes.length >= 12;\n        \n      case 'forest_guardian':\n        // Maintain perfect balance (0 threat tokens) for 5 consecutive turns\n        // Since we can't track consecutive turns, we'll check if threat tokens are at 0\n        return gameStore.threatTokens === 0;\n        \n      default:\n        return false;\n    }\n  }\n  \n  /**\n   * Check if landscapes traversed (at least 10 landscapes visited)\n   * @returns True if landscapes traversed\n   */\n  checkLandscapesTraversed(): boolean {\n    const gameStore = useGameStore();\n    return gameStore.visitedLandscapes.length >= 10;\n  }\n  \n  /**\n   * Check if seasons experienced (at least 3 seasons experienced)\n   * @returns True if seasons experienced\n   */\n  checkSeasonsExperienced(): boolean {\n    const gameStore = useGameStore();\n    // Since experiencedSeasons doesn't exist, we'll assume this is always true for now\n    // In a real implementation, we would track the seasons experienced\n    return true;\n  }\n  \n  /**\n   * Check if challenges overcome (at least 5 challenges overcome)\n   * @returns True if challenges overcome\n   */\n  checkChallengesOvercome(): boolean {\n    const gameStore = useGameStore();\n    // Since overcomeChallenges doesn't exist, we'll assume this is always true for now\n    // In a real implementation, we would track the challenges overcome\n    return true;\n  }\n  \n  /**\n   * Process victory\n   */\n  processVictory(): void {\n    const gameStore = useGameStore();\n    \n    // Use the endGame method instead of directly modifying state properties\n    gameStore.endGame(true);\n    \n    // Add a victory message to the game log\n    gameStore.addToGameLog('Victory! You have completed your journey through the Celtic Realm.', true);\n  }\n  \n  /**\n   * Process defeat\n   * @param reason The reason for defeat\n   */\n  processDefeat(reason: string): void {\n    const gameStore = useGameStore();\n    \n    // Use the endGame method instead of directly modifying state properties\n    gameStore.endGame(false);\n    \n    // Add the defeat reason to the game log\n    gameStore.addToGameLog(`Defeat: ${reason}`, true);\n    \n    // We can't set gameStats directly as it doesn't exist in the store\n    // Instead, we'll log the stats to the game log\n    gameStore.addToGameLog(`Game Stats - Turns: ${gameStore.currentTurn}, Threat: ${gameStore.threatTokens}, Season: ${gameStore.currentSeason}`, false);\n  }\n  \n  /**\n   * Check for defeat conditions\n   * @returns Object with defeat status and reason\n   */\n  checkDefeatConditions(): {\n    isDefeat: boolean;\n    reason: string | null;\n  } {\n    const gameStore = useGameStore();\n    const playerStore = usePlayerStore();\n    \n    // Check health\n    if (playerStore.health <= 0) {\n      return {\n        isDefeat: true,\n        reason: 'Your journey has ended as your health has fallen to zero.'\n      };\n    }\n    \n    // Check threat level\n    if (gameStore.threatTokens >= 15) {\n      return {\n        isDefeat: true,\n        reason: 'The otherworldly forces have overwhelmed you as threat tokens reached 15.'\n      };\n    }\n    \n    // Check if exceeded maximum turns\n    if (gameStore.currentTurn >= 30) {\n      return {\n        isDefeat: true,\n        reason: 'Your journey has taken too long, and winter has claimed you.'\n      };\n    }\n    \n    return {\n      isDefeat: false,\n      reason: null\n    };\n  }\n}\n\nexport const victoryService = new VictoryService();\n","import { defineStore } from 'pinia';\nimport { PlayerState, PlayerEffect, CompanionState } from '@/models/types/player';\nimport { CharacterCard } from '@/models/types/cards';\nimport { useCardStore } from './cardStore';\nimport { useGameStore } from './gameStore';\nimport { victoryService } from '@/services/victoryService';\n\nexport const usePlayerStore = defineStore('player', {\n  state: (): PlayerState => ({\n    characterId: '',\n    health: 10,\n    maxHealth: 10,\n    resources: [],\n    resourceCapacity: 5,\n    animalCompanions: [],\n    craftedItems: [],\n    experience: 0,\n    knowledgeDiscovered: [],\n    specialAbilityUsed: false,\n    activeEffects: [],\n    hasCraftedLegendaryItem: false,\n    uniqueCraftedItemsCount: 0,\n    companionLoyalty: {},\n    wisdom: 0,  // Add missing wisdom property\n  }),\n  \n  getters: {\n    character(): CharacterCard | null {\n      const cardStore = useCardStore();\n      const character = cardStore.getCharacterById(this.characterId);\n      return character || null;\n    },\n    \n    resourceCount(): number {\n      return this.resources.length;\n    },\n    \n    isResourceCapacityReached(): boolean {\n      return this.resources.length >= this.resourceCapacity;\n    },\n    \n    companionCount(): number {\n      return this.animalCompanions.length;\n    },\n    \n    craftedItemCount(): number {\n      return this.craftedItems.length;\n    },\n    \n    experienceLevel(): number {\n      // Calculate level based on experience points\n      // Every 3 experience points = 1 level\n      return Math.floor(this.experience / 3) + 1;\n    },\n    \n    hasEffect(): (effectId: string) => boolean {\n      return (effectId: string) => {\n        return this.activeEffects.some(effect => effect.id === effectId && effect.duration > 0);\n      };\n    },\n    \n    getEffectStrength(): (effectId: string) => number {\n      return (effectId: string) => {\n        const effect = this.activeEffects.find(effect => effect.id === effectId && effect.duration > 0);\n        return effect ? effect.magnitude : 0;\n      };\n    }\n  },\n  \n  actions: {\n    setCharacter(characterId: string): void {\n      const cardStore = useCardStore();\n      const character = cardStore.getCharacterById(characterId);\n      \n      if (character) {\n        this.characterId = characterId;\n        this.health = character.healthPoints;\n        this.maxHealth = character.healthPoints;\n        this.resourceCapacity = character.resourceCapacity;\n        \n        // Add starting resources if any\n        if (character.startingResources) {\n          character.startingResources.forEach(resourceId => {\n            this.addResource(resourceId);\n          });\n        }\n        \n        // Add starting companions if any\n        if (character.startingCompanion) {\n          this.addAnimalCompanion(character.startingCompanion);\n        }\n        \n        if (character.startingCompanions) {\n          character.startingCompanions.forEach(companionId => {\n            this.addAnimalCompanion(companionId);\n          });\n        }\n      }\n    },\n    \n    selectCharacter(characterId: string): boolean {\n      this.setCharacter(characterId);\n      return true;\n    },\n    \n    addResource(resourceId: string) {\n      if (this.resources.length < this.resourceCapacity) {\n        this.resources.push(resourceId);\n        return true;\n      }\n      return false;\n    },\n    \n    removeResource(resourceId: string) {\n      const index = this.resources.indexOf(resourceId);\n      if (index !== -1) {\n        this.resources.splice(index, 1);\n        return true;\n      }\n      return false;\n    },\n    \n    addAnimalCompanion(companionId: string) {\n      if (!this.animalCompanions.includes(companionId)) {\n        this.animalCompanions.push(companionId);\n        \n        // Initialize companion loyalty status\n        this.companionLoyalty[companionId] = {\n          loyalty: 5, // Initial loyalty level (1-10 scale)\n          state: CompanionState.LOYAL,\n          turnsSinceLastFed: 0,\n          turnsWary: 0\n        };\n        \n        return true;\n      }\n      return false;\n    },\n    \n    removeAnimalCompanion(companionId: string) {\n      const index = this.animalCompanions.indexOf(companionId);\n      if (index !== -1) {\n        this.animalCompanions.splice(index, 1);\n        \n        // Clean up companion loyalty data\n        if (this.companionLoyalty[companionId]) {\n          delete this.companionLoyalty[companionId];\n        }\n        \n        return true;\n      }\n      return false;\n    },\n    \n    // Feed an animal companion\n    feedCompanion(companionId: string, resourceId: string): boolean {\n      // Check if the companion exists\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      // Check if the player has the resource\n      if (!this.resources.includes(resourceId)) {\n        return false;\n      }\n      \n      // Remove the resource\n      this.removeResource(resourceId);\n      \n      // Get companion status\n      const status = this.companionLoyalty[companionId];\n      if (!status) {\n        // Initialize if missing\n        this.companionLoyalty[companionId] = {\n          loyalty: 5,\n          state: CompanionState.LOYAL,\n          turnsSinceLastFed: 0,\n          turnsWary: 0\n        };\n      }\n      \n      // Update companion status\n      const updatedStatus = this.companionLoyalty[companionId];\n      \n      // Reset feeding counter\n      updatedStatus.turnsSinceLastFed = 0;\n      \n      // Increase loyalty (max 10)\n      updatedStatus.loyalty = Math.min(10, updatedStatus.loyalty + 1);\n      \n      // If companion was wary, restore to loyal state\n      if (updatedStatus.state === CompanionState.WARY) {\n        updatedStatus.state = CompanionState.LOYAL;\n        updatedStatus.turnsWary = 0;\n      }\n      \n      const gameStore = useGameStore();\n      gameStore.addToGameLog(`You fed your animal companion with ${gameStore.formatResourceName(resourceId)}.`, true, 'companion');\n      \n      return true;\n    },\n    \n    // Handle companions at end of turn\n    updateCompanionStatus(): void {\n      const gameStore = useGameStore();\n      const cardStore = useCardStore();\n      \n      // Iterate through all companions\n      this.animalCompanions.forEach(companionId => {\n        const status = this.companionLoyalty[companionId];\n        \n        // Skip if no status is recorded\n        if (!status) return;\n        \n        // Increment turns since last fed\n        status.turnsSinceLastFed++;\n        \n        // Get companion card for better logging\n        const companion = cardStore.getAnimalCompanionById(companionId);\n        const companionName = companion ? companion.name : 'Animal companion';\n        \n        // Check if companion should become wary (3 turns without food)\n        if (status.state === CompanionState.LOYAL && status.turnsSinceLastFed >= 3) {\n          status.state = CompanionState.WARY;\n          status.turnsWary = 0;\n          gameStore.addToGameLog(`${companionName} has become wary due to lack of food.`, true, 'companion');\n        }\n        \n        // If already wary, update wary counter\n        if (status.state === CompanionState.WARY) {\n          status.turnsWary++;\n          \n          // If wary for 2 turns, mark as leaving\n          if (status.turnsWary >= 2) {\n            status.state = CompanionState.LEAVING;\n            gameStore.addToGameLog(`${companionName} is leaving you due to continued neglect.`, true, 'companion');\n          }\n        }\n        \n        // If companion is marked as leaving, remove it\n        if (status.state === CompanionState.LEAVING) {\n          this.removeAnimalCompanion(companionId);\n          gameStore.addToGameLog(`${companionName} has left you.`, true, 'companion');\n        }\n      });\n    },\n    \n    // Check if a companion is in a specific state\n    isCompanionInState(companionId: string, state: CompanionState): boolean {\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      return status ? status.state === state : false;\n    },\n    \n    // Get all companions in a specific state\n    getCompanionsInState(state: CompanionState): string[] {\n      return this.animalCompanions.filter(id => {\n        const status = this.companionLoyalty[id];\n        return status && status.state === state;\n      });\n    },\n    \n    addCraftedItem(itemId: string) {\n      if (!this.craftedItems.includes(itemId)) {\n        this.craftedItems.push(itemId);\n        return true;\n      }\n      return false;\n    },\n    \n    removeCraftedItem(itemId: string) {\n      const index = this.craftedItems.indexOf(itemId);\n      if (index !== -1) {\n        this.craftedItems.splice(index, 1);\n        return true;\n      }\n      return false;\n    },\n    \n    // Add experience points to the player\n    addExperience(amount: number): number {\n      this.experience += amount;\n      return this.experience;\n    },\n    \n    // For backward compatibility with tests\n    gainExperience(amount: number): number {\n      return this.addExperience(amount);\n    },\n    \n    loseHealth(amount: number) {\n      this.health = Math.max(0, this.health - amount);\n      \n      // Check if player has died\n      if (this.health <= 0) {\n        // Check defeat conditions and get the reason\n        const defeatResult = victoryService.checkDefeatConditions();\n        \n        // Process defeat using the victory service\n        if (defeatResult.isDefeat) {\n          victoryService.processDefeat(defeatResult.reason || 'Your health has reached zero.');\n        }\n      }\n      \n      return this.health > 0;\n    },\n    \n    healHealth(amount: number) {\n      this.health = Math.min(this.maxHealth, this.health + amount);\n      return this.health;\n    },\n    \n    discoverKnowledge(knowledgeId: string) {\n      if (!this.knowledgeDiscovered.includes(knowledgeId)) {\n        this.knowledgeDiscovered.push(knowledgeId);\n        return true;\n      }\n      return false;\n    },\n    \n    useSpecialAbility() {\n      if (!this.specialAbilityUsed) {\n        this.specialAbilityUsed = true;\n        return true;\n      }\n      return false;\n    },\n    \n    resetSpecialAbility() {\n      this.specialAbilityUsed = false;\n      return true;\n    },\n    \n    resetPlayer() {\n      this.characterId = '';\n      this.health = 10;\n      this.maxHealth = 10;\n      this.resources = [];\n      this.resourceCapacity = 5;\n      this.animalCompanions = [];\n      this.craftedItems = [];\n      this.experience = 0;\n      this.knowledgeDiscovered = [];\n      this.specialAbilityUsed = false;\n      this.activeEffects = [];\n      this.hasCraftedLegendaryItem = false;\n      this.uniqueCraftedItemsCount = 0;\n      this.companionLoyalty = {};\n    },\n    \n    addCompanion(companionId: string) {\n      if (!this.animalCompanions.includes(companionId)) {\n        this.animalCompanions.push(companionId);\n        if (!this.companionLoyalty) {\n          this.companionLoyalty = {};\n        }\n        this.companionLoyalty[companionId] = 1;\n      }\n    },\n    \n    removeCompanion(companionId: string) {\n      this.animalCompanions = this.animalCompanions.filter(id => id !== companionId);\n      if (this.companionLoyalty && this.companionLoyalty[companionId]) {\n        delete this.companionLoyalty[companionId];\n      }\n    },\n    \n    setCompanionLoyalty(companionId: string, loyalty: number) {\n      if (!this.companionLoyalty) {\n        this.companionLoyalty = {};\n      }\n      this.companionLoyalty[companionId] = loyalty;\n    },\n    \n    // New methods for threat management\n    takeDamage(amount: number) {\n      const gameStore = useGameStore();\n      const alive = this.loseHealth(amount);\n      \n      gameStore.addToGameLog(`You take ${amount} damage. Health: ${this.health}/${this.maxHealth}`);\n      \n      if (!alive) {\n        gameStore.addToGameLog('You have been defeated!', true);\n        gameStore.endGame(false);\n      }\n      \n      return alive;\n    },\n    \n    loseRandomResources(amount: number) {\n      const gameStore = useGameStore();\n      let lostCount = 0;\n      \n      // Don't try to remove more resources than the player has\n      amount = Math.min(amount, this.resources.length);\n      \n      for (let i = 0; i < amount; i++) {\n        if (this.resources.length > 0) {\n          // Get a random resource index\n          const randomIndex = Math.floor(Math.random() * this.resources.length);\n          const resourceId = this.resources[randomIndex];\n          \n          // Get resource name for logging\n          const cardStore = useCardStore();\n          const resource = cardStore.getResourceById(resourceId);\n          \n          // Remove the resource\n          this.resources.splice(randomIndex, 1);\n          lostCount++;\n          \n          gameStore.addToGameLog(`You lost ${resource ? resource.name : 'a resource'}.`);\n        }\n      }\n      \n      return lostCount;\n    },\n    \n    addEffect(effect: PlayerEffect) {\n      const gameStore = useGameStore();\n      \n      // Check if effect already exists\n      const existingEffectIndex = this.activeEffects.findIndex(e => e.id === effect.id);\n      \n      if (existingEffectIndex !== -1) {\n        // Update existing effect\n        this.activeEffects[existingEffectIndex].magnitude = effect.magnitude;\n        this.activeEffects[existingEffectIndex].duration = effect.duration;\n        gameStore.addToGameLog(`Effect renewed: ${effect.name}`, true);\n      } else {\n        // Add new effect\n        this.activeEffects.push(effect);\n        gameStore.addToGameLog(`New effect gained: ${effect.name} - ${effect.description}`, true);\n      }\n      \n      return true;\n    },\n    \n    removeEffect(effectId: string) {\n      const gameStore = useGameStore();\n      const index = this.activeEffects.findIndex(effect => effect.id === effectId);\n      \n      if (index !== -1) {\n        const effect = this.activeEffects[index];\n        gameStore.addToGameLog(`Effect ended: ${effect.name}`, true);\n        this.activeEffects.splice(index, 1);\n        return true;\n      }\n      \n      return false;\n    },\n    \n    processEffects() {\n      // Reduce duration of all effects\n      this.activeEffects.forEach((effect, index) => {\n        if (effect.duration > 0) {\n          effect.duration--;\n          \n          if (effect.duration === 0) {\n            const gameStore = useGameStore();\n            gameStore.addToGameLog(`Effect ended: ${effect.name}`, true);\n            this.activeEffects.splice(index, 1);\n          }\n        }\n      });\n    },\n    \n    // Use a companion's special ability\n    useCompanionAbility(companionId: string): boolean {\n      // Check if the companion exists and is in a loyal state\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      if (!status || status.state !== CompanionState.LOYAL) {\n        return false;\n      }\n      \n      // Get companion info from card store to perform ability\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const companion = cardStore.getCompanionById(companionId);\n      \n      if (!companion) {\n        return false;\n      }\n      \n      gameStore.addToGameLog(`You use ${companion.name}'s special ability: ${companion.ability.description}`, true, 'companion');\n      \n      // Apply ability effects based on companion type\n      // (In a real implementation, this would have specific logic for each companion)\n      \n      return true;\n    },\n    \n    // Get the loyalty status of a companion\n    getCompanionStatus(companionId: string): CompanionState {\n      if (!this.animalCompanions.includes(companionId)) {\n        return CompanionState.LEAVING;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      if (!status) {\n        return CompanionState.LOYAL; // Default to loyal if no status is found\n      }\n      \n      return status.state;\n    },\n    \n    // Use a crafted item's effect\n    useCraftedItem(itemId: string): boolean {\n      // Check if the player has the item\n      if (!this.craftedItems.includes(itemId)) {\n        return false;\n      }\n      \n      // Get item details from card store\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const item = cardStore.getCraftedItemById(itemId);\n      \n      if (!item) {\n        return false;\n      }\n      \n      gameStore.addToGameLog(`You use ${item.name}: ${item.description}`, true, 'crafting');\n      \n      // Apply item effects based on the type\n      // (In a real implementation, this would have specific logic for each item)\n      \n      // Track item usage - some items might be single-use\n      // For now, we'll keep items after use\n      \n      return true;\n    },\n    \n    // Use a companion to help with a challenge\n    useCompanionForChallenge(companionId: string): boolean {\n      // Check if the companion exists and is in a loyal state\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      if (!status || status.state !== CompanionState.LOYAL) {\n        return false;\n      }\n      \n      // Get companion info from card store\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const companion = cardStore.getCompanionById(companionId);\n      \n      if (!companion) {\n        return false;\n      }\n      \n      gameStore.addToGameLog(`${companion.name} helps you with the challenge.`, true, 'companion');\n      \n      // In a real implementation, this could reduce companion loyalty or have other effects\n      \n      return true;\n    },\n    \n    // Use a companion to keep watch during the night\n    useCompanionForNight(companionId: string): boolean {\n      // Check if the companion exists and is in a loyal state\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      if (!status || status.state !== CompanionState.LOYAL) {\n        return false;\n      }\n      \n      // Get companion info from card store\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const companion = cardStore.getCompanionById(companionId);\n      \n      if (!companion) {\n        return false;\n      }\n      \n      gameStore.addToGameLog(`${companion.name} keeps watch over you during the night.`, true, 'companion');\n      \n      // In a real implementation, this could reduce companion loyalty or have other effects\n      \n      return true;\n    },\n    \n    // Get a list of items that can be crafted with current resources\n    getCraftableItems(): string[] {\n      const cardStore = useCardStore();\n      const allCraftableItems = cardStore.getAllCraftedItems().map(item => item.id);\n      const craftableItems: string[] = [];\n      \n      for (const itemId of allCraftableItems) {\n        const item = cardStore.getCraftedItemById(itemId);\n        if (!item || !item.requiredResources) continue;\n        \n        // Check if we have all the required resources\n        let canCraft = true;\n        for (const resourceId of item.requiredResources) {\n          if (!this.resources.includes(resourceId)) {\n            canCraft = false;\n            break;\n          }\n        }\n        \n        if (canCraft) {\n          craftableItems.push(itemId);\n        }\n      }\n      \n      return craftableItems;\n    },\n\n    // Craft an item from resources\n    craftItem(itemId: string): boolean {\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const item = cardStore.getCraftedItemById(itemId);\n      \n      if (!item || !item.requiredResources) {\n        return false;\n      }\n      \n      // Check if we have all the resources needed\n      for (const resourceId of item.requiredResources) {\n        if (!this.resources.includes(resourceId)) {\n          return false;\n        }\n      }\n      \n      // Remove resources used in crafting\n      for (const resourceId of item.requiredResources) {\n        this.removeResource(resourceId);\n      }\n      \n      // Add the crafted item\n      this.addCraftedItem(itemId);\n      \n      gameStore.addToGameLog(`You crafted ${item.name}.`, true, 'crafting');\n      \n      return true;\n    },\n\n    // Rest to recover health\n    rest(): boolean {\n      const gameStore = useGameStore();\n      \n      // Heal 1 health point when resting\n      this.healHealth(1);\n      \n      gameStore.addToGameLog(`You rest and recover. Health is now ${this.health}/${this.maxHealth}.`, true, 'system');\n      \n      return true;\n    },\n    \n    // Use a companion to help with gathering resources\n    useCompanionForGathering(companionId: string): boolean {\n      // Check if the companion exists and is in a loyal state\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      if (!status || status.state !== CompanionState.LOYAL) {\n        return false;\n      }\n      \n      // Get companion info from card store\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const companion = cardStore.getCompanionById(companionId);\n      \n      if (!companion) {\n        return false;\n      }\n      \n      gameStore.addToGameLog(`${companion.name} helps you gather resources.`, true, 'companion');\n      \n      // In a real implementation, this could reduce companion loyalty or have other effects\n      \n      return true;\n    },\n  }\n});\n","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"game-card__header\",\n  style: {\"border-top-left-radius\":\"12px\",\"border-top-right-radius\":\"12px\",\"padding\":\"10px\",\"text-align\":\"center\",\"background-color\":\"rgba(140, 120, 81, 0.25)\"}\n}\nconst _hoisted_2 = { style: {\"margin\":\"0\",\"font-size\":\"1.1rem\",\"text-transform\":\"capitalize\",\"color\":\"#5a3e2b\",\"font-weight\":\"bold\",\"letter-spacing\":\"0.5px\"} }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"game-card__subtitle\",\n  style: {\"font-size\":\"0.8rem\",\"opacity\":\"0.8\",\"color\":\"#5a3e2b\"}\n}\nconst _hoisted_4 = { style: {\"position\":\"absolute\",\"top\":\"50%\",\"left\":\"50%\",\"transform\":\"translate(-50%, -50%)\",\"font-size\":\"4rem\",\"opacity\":\"0.07\",\"pointer-events\":\"none\",\"color\":\"#5a3e2b\"} }\nconst _hoisted_5 = {\n  class: \"game-card__body\",\n  style: {\"flex-grow\":\"1\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\",\"text-align\":\"center\",\"padding\":\"15px\",\"z-index\":\"1\",\"color\":\"#5a3e2b\"}\n}\nconst _hoisted_6 = {\n  key: 0,\n  class: \"game-card__footer\",\n  style: {\"border-bottom-left-radius\":\"12px\",\"border-bottom-right-radius\":\"12px\",\"padding\":\"10px\",\"text-align\":\"center\",\"background-color\":\"rgba(140, 120, 81, 0.15)\"}\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"game-card\", _ctx.cardTypeClass]),\n    onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('click', $event))),\n    style: {\"position\":\"relative\",\"border-radius\":\"12px\",\"aspect-ratio\":\"2.5/3.5\",\"max-width\":\"220px\",\"width\":\"100%\",\"display\":\"flex\",\"flex-direction\":\"column\",\"box-shadow\":\"3px 3px 8px rgba(0,0,0,0.2)\",\"overflow\":\"hidden\",\"background\":\"linear-gradient(to bottom, #f0e6d2 0%, #e6d7b9 100%)\",\"border\":\"2px solid #8c7851\"}\n  }, [\n    _cache[1] || (_cache[1] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"#f0e6d2\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"GameCard\", -1)),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"h3\", _hoisted_2, _toDisplayString(_ctx.title), 1),\n      (_ctx.subtitle)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(_ctx.subtitle), 1))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.getSuitSymbol()), 1),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n    ]),\n    (_ctx.$slots.footer)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n          _renderSlot(_ctx.$slots, \"footer\", {}, undefined, true)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 2))\n}","<template>\n  <div \n    class=\"game-card\" \n    :class=\"cardTypeClass\"\n    @click=\"$emit('click', $event)\"\n    style=\"position: relative; border-radius: 12px; aspect-ratio: 2.5/3.5; max-width: 220px; width: 100%; display: flex; flex-direction: column; box-shadow: 3px 3px 8px rgba(0,0,0,0.2); overflow: hidden; background: linear-gradient(to bottom, #f0e6d2 0%, #e6d7b9 100%); border: 2px solid #8c7851;\"\n  >\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: #f0e6d2; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">GameCard</div>\n    \n    <div class=\"game-card__header\" style=\"border-top-left-radius: 12px; border-top-right-radius: 12px; padding: 10px; text-align: center; background-color: rgba(140, 120, 81, 0.25);\">\n      <h3 style=\"margin: 0; font-size: 1.1rem; text-transform: capitalize; color: #5a3e2b; font-weight: bold; letter-spacing: 0.5px;\">{{ title }}</h3>\n      <div v-if=\"subtitle\" class=\"game-card__subtitle\" style=\"font-size: 0.8rem; opacity: 0.8; color: #5a3e2b;\">{{ subtitle }}</div>\n    </div>\n    \n    <!-- Center suit symbol -->\n    <div style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 4rem; opacity: 0.07; pointer-events: none; color: #5a3e2b;\">{{ getSuitSymbol() }}</div>\n    \n    <div class=\"game-card__body\" style=\"flex-grow: 1; display: flex; align-items: center; justify-content: center; text-align: center; padding: 15px; z-index: 1; color: #5a3e2b;\">\n      <slot></slot>\n    </div>\n    \n    <div v-if=\"$slots.footer\" class=\"game-card__footer\" style=\"border-bottom-left-radius: 12px; border-bottom-right-radius: 12px; padding: 10px; text-align: center; background-color: rgba(140, 120, 81, 0.15);\">\n      <slot name=\"footer\"></slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue';\nimport { CardType } from '@/models/enums/cardTypes';\nimport { Season } from '@/models/enums/seasons';\n\nexport default defineComponent({\n  name: 'GameCard',\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    subtitle: {\n      type: String,\n      default: ''\n    },\n    cardType: {\n      type: String as PropType<CardType>,\n      required: true,\n      validator: (value: string) => {\n        return Object.values(CardType).includes(value as CardType);\n      }\n    },\n    season: {\n      type: String as PropType<Season | null>,\n      default: null,\n      validator: (value: string) => {\n        return value === null || Object.values(Season).includes(value as Season);\n      }\n    }\n  },\n  computed: {\n    cardTypeClass() {\n      if (!this.cardType) return {};\n      \n      const cardTypeValue = this.cardType.toLowerCase();\n      const classes = {\n        [`game-card--${cardTypeValue.replace(/_/g, '-')}`]: true\n      };\n      \n      if (this.cardType === CardType.SEASON && this.season) {\n        classes[this.season.toLowerCase()] = true;\n      }\n      \n      return classes;\n    },\n    \n    cardTypeIdentifierClass() {\n      if (!this.cardType) return '';\n      \n      switch(this.cardType) {\n        case CardType.LANDSCAPE:\n          return 'stone-arch-border';\n        case CardType.ANIMAL_COMPANION:\n          return 'paw-print-corner';\n        case CardType.RESOURCE:\n          return 'woven-basket';\n        case CardType.CRAFTED_ITEM:\n          return 'anvil-symbol';\n        case CardType.SEASON:\n          return 'wheel-symbol';\n        case CardType.CHARACTER:\n          return 'silhouette-symbol';\n        case CardType.ACTION:\n          return 'arrow-symbol';\n        default:\n          return '';\n      }\n    }\n  },\n  methods: {\n    getSuitSymbol() {\n      // Return different suit symbols based on card type\n      switch(this.cardType) {\n        case CardType.LANDSCAPE:\n          return '♣'; // clubs\n        case CardType.ANIMAL_COMPANION:\n          return '♥'; // hearts\n        case CardType.RESOURCE:\n          return '♦'; // diamonds\n        case CardType.CRAFTED_ITEM:\n          return '♠'; // spades\n        case CardType.SEASON:\n          return '★'; // star\n        case CardType.CHARACTER:\n          return '✦'; // diamond star\n        case CardType.ACTION:\n          return '➜'; // arrow\n        default:\n          return '•'; // bullet\n      }\n    }\n  },\n  emits: ['click']\n});\n</script>\n\n<style lang=\"scss\" scoped>\n// Card styles\n.game-card {\n  font-family: 'Cinzel', serif;\n  \n  // Season-specific styling\n  &.game-card--season {\n    &.samhain {\n      background: linear-gradient(to bottom, #f0e6d2 0%, #d2a679 100%);\n    }\n    \n    &.winters_depth {\n      background: linear-gradient(to bottom, #f0e6d2 0%, #b3c7d6 100%);\n    }\n    \n    &.imbolc {\n      background: linear-gradient(to bottom, #f0e6d2 0%, #c6d8c6 100%);\n    }\n    \n    &.beltane {\n      background: linear-gradient(to bottom, #f0e6d2 0%, #f7c9a9 100%);\n    }\n    \n    &.lughnasadh {\n      background: linear-gradient(to bottom, #f0e6d2 0%, #f0d9a0 100%);\n    }\n  }\n  \n  // Card type styling\n  &.game-card--landscape {\n    border-top: 4px solid #6c4f30;\n  }\n  \n  &.game-card--animal-companion {\n    border-top: 4px solid #8a4444;\n  }\n  \n  &.game-card--resource {\n    border-top: 4px solid #4c6c42;\n  }\n  \n  &.game-card--crafted-item {\n    border-top: 4px solid #444b69;\n  }\n  \n  &.game-card--character {\n    border: 2px solid #82632b;\n    border-top-width: 4px;\n  }\n  \n  &.game-card--action {\n    border: 2px solid #5a3e2b;\n    border-top-width: 4px;\n    background: linear-gradient(to bottom, #f0c8a0 0%, #8c7851 100%);\n  }\n  \n  .game-card__body p {\n    font-size: 11px;\n  }\n  \n  &__header {\n    padding: 10px;\n    font-family: 'Cinzel', serif;\n    position: relative;\n    z-index: 1;\n  }\n  \n  &__title {\n    margin: 0;\n    font-size: 16px;\n    font-weight: bold;\n  }\n  \n  &__subtitle {\n    margin: 5px 0 0;\n    font-size: 12px;\n    opacity: 0.8;\n  }\n\n  &__body {\n    padding: 15px;\n    flex-grow: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    \n    p {\n      font-size: 11px;\n      line-height: 1.4;\n      margin-bottom: 10px;\n    }\n  }\n}\n</style>\n","import { render } from \"./GameCard.vue?vue&type=template&id=3bc056ac&scoped=true&ts=true\"\nimport script from \"./GameCard.vue?vue&type=script&lang=ts\"\nexport * from \"./GameCard.vue?vue&type=script&lang=ts\"\n\nimport \"./GameCard.vue?vue&type=style&index=0&id=3bc056ac&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3bc056ac\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"game-setup\" }\nconst _hoisted_2 = { class: \"game-container\" }\nconst _hoisted_3 = { class: \"character-selection\" }\nconst _hoisted_4 = { style: {\"font-size\":\"10pt\"} }\nconst _hoisted_5 = {\n  class: \"character-stats\",\n  style: {\"font-size\":\"10pt\",\"background\":\"transparent\"}\n}\nconst _hoisted_6 = {\n  class: \"stat\",\n  style: {\"background\":\"transparent\"}\n}\nconst _hoisted_7 = { style: {\"font-size\":\"9pt\"} }\nconst _hoisted_8 = {\n  class: \"stat\",\n  style: {\"background\":\"transparent\"}\n}\nconst _hoisted_9 = { style: {\"font-size\":\"9pt\"} }\nconst _hoisted_10 = {\n  class: \"character-abilities\",\n  style: {\"font-size\":\"10pt\"}\n}\n\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useGameStore } from '@/stores/gameStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport type { CharacterCard } from '@/models/types/cards';\nimport GameCard from '@/components/core/GameCard.vue'; // Import the GameCard component\n\n// Initialize stores and router\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'GameSetupView',\n  setup(__props) {\n\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\n\n// Initialize state\nconst characters = ref<CharacterCard[]>([]);\nconst selectedCharacter = ref<CharacterCard | null>(null);\n\n// Load characters when component is mounted\nconst loadCharacters = () => {\n  if (!cardStore.initialized) {\n    cardStore.initializeCards();\n  }\n  characters.value = cardStore.characters;\n};\n\n// Select a character\nconst selectCharacter = (character: CharacterCard) => {\n  selectedCharacter.value = character;\n};\n\n// Get the ability name for a character\nconst getAbilityName = (character: CharacterCard) => {\n  return character.specialAbility?.name || '';\n};\n\n// Get the ability description for a character\nconst getAbilityDescription = (character: CharacterCard) => {\n  return character.specialAbility?.description || '';\n};\n\n// Start the game with the selected character\nconst startGame = (character: CharacterCard) => {\n  try {\n    console.log('Starting game with character:', character.name);\n    \n    // Set the player's character\n    playerStore.selectCharacter(character.id);\n    \n    // Initialize game state\n    gameStore.startGame();\n    gameStore.setPhase(GamePhase.SEASONAL_ASSESSMENT);\n    \n    // Add initial game log entry\n    gameStore.addToGameLog(`You begin your journey as ${character.name}.`, true, 'system');\n    \n    // Set initial landscape if not already set\n    if (!gameStore.currentLandscapeId) {\n      const landscapes = cardStore.landscapes;\n      if (landscapes.length > 0) {\n        const firstLandscape = landscapes[0];\n        gameStore.setCurrentLandscape(firstLandscape.id);\n        \n        // Set a challenge from this landscape\n        if (firstLandscape.challenges && firstLandscape.challenges.length > 0) {\n          const firstChallenge = firstLandscape.challenges[0];\n          gameStore.setCurrentChallenge(firstChallenge.id);\n          console.log('Set initial challenge:', firstChallenge.name);\n        }\n      }\n    }\n    \n    // Navigate to the game board - use a slight delay to ensure all state changes are processed\n    console.log('Navigating to game board');\n    setTimeout(() => {\n      router.push('/game');\n    }, 50);\n  } catch (error) {\n    console.error('Error starting game:', error);\n    alert('There was an error starting your adventure. Please try again.');\n  }\n};\n\n// Load characters when component is mounted\nloadCharacters();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[4] || (_cache[4] = _createStaticVNode(\"<div class=\\\"game-header\\\" data-v-6de09f1e><h1 class=\\\"game-title\\\" data-v-6de09f1e>Game Setup</h1><p class=\\\"game-subtitle\\\" data-v-6de09f1e>Choose your character and begin your journey through the mystical Celtic landscape.</p></div><div class=\\\"celtic-quote\\\" data-v-6de09f1e> &quot;The journey through the Celtic Realm is one of discovery, challenge, and transformation.&quot; </div><h2 data-v-6de09f1e>Select Your Character</h2><p class=\\\"character-intro mb-4\\\" data-v-6de09f1e> Each character brings unique abilities and challenges to your journey. Choose wisely, as your character&#39;s strengths and weaknesses will shape your path through the Celtic Realm. </p>\", 4)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(characters.value, (character) => {\n          return (_openBlock(), _createBlock(GameCard, {\n            key: character.id,\n            title: character.name,\n            cardType: \"CHARACTER\",\n            class: _normalizeClass({ 'selected': selectedCharacter.value && selectedCharacter.value.id === character.id }),\n            onClick: ($event: any) => (startGame(character))\n          }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"p\", _hoisted_4, _toDisplayString(character.description), 1),\n              _createElementVNode(\"div\", _hoisted_5, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _cache[0] || (_cache[0] = _createElementVNode(\"span\", {\n                    class: \"stat-label\",\n                    style: {\"font-size\":\"9pt\"}\n                  }, \"Health:\", -1)),\n                  _cache[1] || (_cache[1] = _createTextVNode()),\n                  _createElementVNode(\"span\", _hoisted_7, _toDisplayString(character.healthPoints), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n                    class: \"stat-label\",\n                    style: {\"font-size\":\"9pt\"}\n                  }, \"Capacity:\", -1)),\n                  _cache[3] || (_cache[3] = _createTextVNode()),\n                  _createElementVNode(\"span\", _hoisted_9, _toDisplayString(character.resourceCapacity), 1)\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_10, [\n                _createElementVNode(\"strong\", null, _toDisplayString(getAbilityName(character)) + \":\", 1),\n                _createTextVNode(\" \" + _toDisplayString(getAbilityDescription(character)), 1)\n              ])\n            ]),\n            _: 2\n          }, 1032, [\"title\", \"class\", \"onClick\"]))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"game-setup\">\n    <div class=\"game-container\">\n      <div class=\"game-header\">\n        <h1 class=\"game-title\">Game Setup</h1>\n        <p class=\"game-subtitle\">Choose your character and begin your journey through the mystical Celtic landscape.</p>\n      </div>\n      \n      <div class=\"celtic-quote\">\n        \"The journey through the Celtic Realm is one of discovery, challenge, and transformation.\"\n      </div>\n      \n      <h2>Select Your Character</h2>\n      <p class=\"character-intro mb-4\">\n        Each character brings unique abilities and challenges to your journey. Choose wisely, as your character's strengths and weaknesses will shape your path through the Celtic Realm.\n      </p>\n      \n      <div class=\"character-selection\">\n        <GameCard \n          v-for=\"character in characters\" \n          :key=\"character.id\" \n          :title=\"character.name\"\n          cardType=\"CHARACTER\"\n          :class=\"{ 'selected': selectedCharacter && selectedCharacter.id === character.id }\"\n          @click=\"startGame(character)\"\n        >\n          <p style=\"font-size: 10pt;\">{{ character.description }}</p>\n          \n          <div class=\"character-stats\" style=\"font-size: 10pt; background: transparent;\">\n            <div class=\"stat\" style=\"background: transparent;\"><span class=\"stat-label\" style=\"font-size: 9pt;\">Health:</span> <span style=\"font-size: 9pt;\">{{ character.healthPoints }}</span></div>\n            <div class=\"stat\" style=\"background: transparent;\"><span class=\"stat-label\" style=\"font-size: 9pt;\">Capacity:</span> <span style=\"font-size: 9pt;\">{{ character.resourceCapacity }}</span></div>\n          </div>\n          \n          <div class=\"character-abilities\" style=\"font-size: 10pt;\">\n            <strong>{{ getAbilityName(character) }}:</strong> {{ getAbilityDescription(character) }}\n          </div>\n        </GameCard>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useGameStore } from '@/stores/gameStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport type { CharacterCard } from '@/models/types/cards';\nimport GameCard from '@/components/core/GameCard.vue'; // Import the GameCard component\n\n// Initialize stores and router\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\n\n// Initialize state\nconst characters = ref<CharacterCard[]>([]);\nconst selectedCharacter = ref<CharacterCard | null>(null);\n\n// Load characters when component is mounted\nconst loadCharacters = () => {\n  if (!cardStore.initialized) {\n    cardStore.initializeCards();\n  }\n  characters.value = cardStore.characters;\n};\n\n// Select a character\nconst selectCharacter = (character: CharacterCard) => {\n  selectedCharacter.value = character;\n};\n\n// Get the ability name for a character\nconst getAbilityName = (character: CharacterCard) => {\n  return character.specialAbility?.name || '';\n};\n\n// Get the ability description for a character\nconst getAbilityDescription = (character: CharacterCard) => {\n  return character.specialAbility?.description || '';\n};\n\n// Start the game with the selected character\nconst startGame = (character: CharacterCard) => {\n  try {\n    console.log('Starting game with character:', character.name);\n    \n    // Set the player's character\n    playerStore.selectCharacter(character.id);\n    \n    // Initialize game state\n    gameStore.startGame();\n    gameStore.setPhase(GamePhase.SEASONAL_ASSESSMENT);\n    \n    // Add initial game log entry\n    gameStore.addToGameLog(`You begin your journey as ${character.name}.`, true, 'system');\n    \n    // Set initial landscape if not already set\n    if (!gameStore.currentLandscapeId) {\n      const landscapes = cardStore.landscapes;\n      if (landscapes.length > 0) {\n        const firstLandscape = landscapes[0];\n        gameStore.setCurrentLandscape(firstLandscape.id);\n        \n        // Set a challenge from this landscape\n        if (firstLandscape.challenges && firstLandscape.challenges.length > 0) {\n          const firstChallenge = firstLandscape.challenges[0];\n          gameStore.setCurrentChallenge(firstChallenge.id);\n          console.log('Set initial challenge:', firstChallenge.name);\n        }\n      }\n    }\n    \n    // Navigate to the game board - use a slight delay to ensure all state changes are processed\n    console.log('Navigating to game board');\n    setTimeout(() => {\n      router.push('/game');\n    }, 50);\n  } catch (error) {\n    console.error('Error starting game:', error);\n    alert('There was an error starting your adventure. Please try again.');\n  }\n};\n\n// Load characters when component is mounted\nloadCharacters();\n</script>\n\n<style lang=\"scss\" scoped>\n.game-setup {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n  \n  .game-container {\n    max-width: 1200px;\n    width: 100%;\n  }\n  \n  .game-header {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n  \n  .game-title {\n    font-size: 2.5rem;\n    color: #5c3d2e;\n    margin-bottom: 0.25rem;\n  }\n  \n  .game-subtitle {\n    font-size: 1.2rem;\n    color: #6a5d4d;\n  }\n  \n  .celtic-quote {\n    font-family: 'Tangerine', cursive;\n    font-size: 1.8rem;\n    text-align: center;\n    color: #5c3d2e;\n    margin: 1rem 0;\n    font-style: italic;\n  }\n  \n  h2 {\n    font-size: 1.8rem;\n    color: #5c3d2e;\n    text-align: center;\n    margin-bottom: 0.5rem;\n  }\n  \n  .character-intro {\n    text-align: center;\n    max-width: 800px;\n    margin: 0 auto;\n    color: #6a5d4d;\n  }\n  \n  .character-selection {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 1rem;\n    margin-top: 1rem;\n  }\n  \n  .character-stats {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 0.25rem;\n    \n    .stat {\n      background-color: rgba(92, 61, 46, 0.1);\n      padding: 0.2rem;\n      border-radius: 5px;\n      font-size: 1.3rem;\n      \n      .stat-label {\n        font-weight: bold;\n        color: #5c3d2e;\n      }\n    }\n  }\n  \n  .character-abilities {\n    margin-bottom: 0.25rem;\n    font-size: 1.3rem;\n    color: #6a5d4d;\n    \n    strong {\n      color: #5c3d2e;\n    }\n  }\n}\n</style>\n","import script from \"./GameSetupView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameSetupView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameSetupView.vue?vue&type=style&index=0&id=6de09f1e&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6de09f1e\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"game-map\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = { class: \"game-map__content\" }\nconst _hoisted_3 = { class: \"map-container\" }\nconst _hoisted_4 = { class: \"map-grid\" }\nconst _hoisted_5 = { class: \"location-marker\" }\nconst _hoisted_6 = { class: \"location-name\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[1] || (_cache[1] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"GameMap\", -1)),\n    _cache[2] || (_cache[2] = _createElementVNode(\"h3\", { class: \"game-map__title\" }, \"Journey Map\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.journeyLocations, (location, index) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: index,\n              class: _normalizeClass([\"map-location\", { \n              'map-location--active': index === _ctx.currentLocationIndex,\n              'map-location--visited': index < _ctx.currentLocationIndex\n            }])\n            }, [\n              _createElementVNode(\"div\", _hoisted_5, _toDisplayString(index + 1), 1),\n              _createElementVNode(\"div\", _hoisted_6, _toDisplayString(location.name), 1)\n            ], 2))\n          }), 128))\n        ]),\n        _cache[0] || (_cache[0] = _createElementVNode(\"div\", { class: \"map-path\" }, null, -1))\n      ])\n    ])\n  ]))\n}","<template>\n  <div class=\"game-map\" style=\"border: 2px solid lightblue; position: relative;\">\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">GameMap</div>\n    <h3 class=\"game-map__title\">Journey Map</h3>\n    <div class=\"game-map__content\">\n      <div class=\"map-container\">\n        <div class=\"map-grid\">\n          <div \n            v-for=\"(location, index) in journeyLocations\" \n            :key=\"index\"\n            class=\"map-location\"\n            :class=\"{ \n              'map-location--active': index === currentLocationIndex,\n              'map-location--visited': index < currentLocationIndex\n            }\"\n          >\n            <div class=\"location-marker\">{{ index + 1 }}</div>\n            <div class=\"location-name\">{{ location.name }}</div>\n          </div>\n        </div>\n        <div class=\"map-path\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed } from 'vue';\nimport { useGameStore } from '@/stores/gameStore';\n\nexport default defineComponent({\n  name: 'GameMap',\n  \n  setup() {\n    const gameStore = useGameStore();\n    \n    const journeyLocations = ref([\n      { name: 'Forest Edge', type: 'forest' },\n      { name: 'River Crossing', type: 'river' },\n      { name: 'Mountain Pass', type: 'mountain' },\n      { name: 'Ancient Ruins', type: 'ruins' },\n      { name: 'Valley Settlement', type: 'settlement' }\n    ]);\n    \n    const currentLocationIndex = computed(() => {\n      return gameStore.journeyProgress || 0;\n    });\n    \n    return {\n      journeyLocations,\n      currentLocationIndex\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.game-map {\n  width: 100%;\n  margin-bottom: $spacing-lg;\n  \n  &__title {\n    margin-bottom: $spacing-md;\n    text-align: center;\n  }\n  \n  &__content {\n    background-color: rgba($light-color, 0.9);\n    border-radius: $border-radius-md;\n    padding: $spacing-md;\n    box-shadow: 0 2px 4px rgba($dark-color, 0.2);\n  }\n}\n\n.map-container {\n  position: relative;\n  min-height: 200px;\n}\n\n.map-grid {\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  z-index: 2;\n}\n\n.map-path {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  height: 4px;\n  background-color: $border-color;\n  z-index: 1;\n  transform: translateY(-50%);\n}\n\n.map-location {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  \n  .location-marker {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    background-color: $light-color;\n    border: 2px solid $border-color;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: $spacing-xs;\n    font-weight: bold;\n    z-index: 2;\n  }\n  \n  .location-name {\n    font-size: $font-size-sm;\n    text-align: center;\n    max-width: 100px;\n  }\n  \n  &--active {\n    .location-marker {\n      background-color: $primary-color;\n      color: $light-color;\n      border-color: darken($primary-color, 10%);\n    }\n    \n    .location-name {\n      font-weight: bold;\n    }\n  }\n  \n  &--visited {\n    .location-marker {\n      background-color: $success-color;\n      color: $light-color;\n      border-color: darken($success-color, 10%);\n    }\n  }\n}\n</style>\n","import { render } from \"./GameMap.vue?vue&type=template&id=11ad1a66&scoped=true&ts=true\"\nimport script from \"./GameMap.vue?vue&type=script&lang=ts\"\nexport * from \"./GameMap.vue?vue&type=script&lang=ts\"\n\nimport \"./GameMap.vue?vue&type=style&index=0&id=11ad1a66&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-11ad1a66\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"resource-management\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"resource-management__inactive\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"resource-management__active\"\n}\nconst _hoisted_4 = { class: \"resource-management__inventory\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"resource-grid\"\n}\nconst _hoisted_7 = [\"onClick\"]\nconst _hoisted_8 = {\n  key: 0,\n  class: \"resource-type mt-3\"\n}\nconst _hoisted_9 = {\n  key: 1,\n  class: \"resource-seasons mt-3\"\n}\nconst _hoisted_10 = { class: \"season-tags\" }\nconst _hoisted_11 = {\n  key: 2,\n  class: \"resource-special-effect mt-3\"\n}\nconst _hoisted_12 = {\n  key: 0,\n  class: \"resource-management__actions mt-4\"\n}\nconst _hoisted_13 = [\"disabled\"]\nconst _hoisted_14 = { class: \"resource-management__continue mt-4\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_GameCard = _resolveComponent(\"GameCard\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[7] || (_cache[7] = _createElementVNode(\"h3\", { class: \"resource-management__title\" }, \"Resource Management\", -1)),\n    (_ctx.currentPhase !== _ctx.GamePhase.RESOURCE_MANAGEMENT)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[4] || (_cache[4] = [\n          _createElementVNode(\"p\", null, \"Resource management is not available during the current phase.\", -1)\n        ])))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"h4\", null, \"Your Resources (\" + _toDisplayString(_ctx.playerResources.length) + \" / \" + _toDisplayString(_ctx.resourceCapacity) + \")\", 1),\n            (_ctx.playerResources.length === 0)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" You don't have any resources. Explore landscapes to gather resources. \"))\n              : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.playerResources, (resource) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: resource.id,\n                      class: _normalizeClass([\"resource-grid__item\", { 'selected': _ctx.selectedResourceId === resource.id }]),\n                      onClick: ($event: any) => (_ctx.selectResource(resource))\n                    }, [\n                      _createVNode(_component_GameCard, {\n                        title: resource.name,\n                        subtitle: 'Resource',\n                        cardType: _ctx.CardType.RESOURCE\n                      }, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"p\", null, _toDisplayString(resource.description), 1),\n                          (resource.rarity)\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n                                _createElementVNode(\"h5\", null, \"Rarity: \" + _toDisplayString(resource.rarity), 1),\n                                _createElementVNode(\"p\", null, _toDisplayString(_ctx.getRarityDescription(resource.rarity)), 1)\n                              ]))\n                            : _createCommentVNode(\"\", true),\n                          (resource.seasonalAbundance && resource.seasonalAbundance.length)\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                                _cache[5] || (_cache[5] = _createElementVNode(\"h5\", null, \"Seasonal Availability\", -1)),\n                                _createElementVNode(\"div\", _hoisted_10, [\n                                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(resource.seasonalAbundance, (season) => {\n                                    return (_openBlock(), _createElementBlock(\"span\", {\n                                      key: season,\n                                      class: _normalizeClass([\"season-tag\", _ctx.getSeasonClassName(season)])\n                                    }, _toDisplayString(_ctx.formatSeasonName(season)), 3))\n                                  }), 128))\n                                ])\n                              ]))\n                            : _createCommentVNode(\"\", true),\n                          (resource.specialEffect)\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n                                _cache[6] || (_cache[6] = _createElementVNode(\"h5\", null, \"Special Effect\", -1)),\n                                _createElementVNode(\"p\", null, _toDisplayString(resource.specialEffect.description), 1)\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 2\n                      }, 1032, [\"title\", \"cardType\"])\n                    ], 10, _hoisted_7))\n                  }), 128))\n                ]))\n          ]),\n          (_ctx.selectedResourceId)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                _createElementVNode(\"button\", {\n                  class: \"btn btn--primary\",\n                  onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.useResource && _ctx.useResource(...args))),\n                  disabled: !_ctx.canUseSelectedResource\n                }, \" Use Resource \", 8, _hoisted_13),\n                _createElementVNode(\"button\", {\n                  class: \"btn btn--secondary ml-2\",\n                  onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.discardResource && _ctx.discardResource(...args)))\n                }, \" Discard Resource \"),\n                _createElementVNode(\"button\", {\n                  class: \"btn btn--accent ml-2\",\n                  onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.cancelSelection && _ctx.cancelSelection(...args)))\n                }, \" Cancel \")\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_14, [\n            _createElementVNode(\"button\", {\n              class: \"btn btn--primary btn--lg\",\n              onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.continueJourney && _ctx.continueJourney(...args)))\n            }, \" Continue Journey \")\n          ])\n        ]))\n  ]))\n}","<template>\n  <div class=\"resource-management\">\n    <h3 class=\"resource-management__title\">Resource Management</h3>\n    \n    <div v-if=\"currentPhase !== GamePhase.RESOURCE_MANAGEMENT\" class=\"resource-management__inactive\">\n      <p>Resource management is not available during the current phase.</p>\n    </div>\n    \n    <div v-else class=\"resource-management__active\">\n      <div class=\"resource-management__inventory\">\n        <h4>Your Resources ({{ playerResources.length }} / {{ resourceCapacity }})</h4>\n        <div v-if=\"playerResources.length === 0\" class=\"empty-state\">\n          You don't have any resources. Explore landscapes to gather resources.\n        </div>\n        <div v-else class=\"resource-grid\">\n          <div \n            v-for=\"resource in playerResources\" \n            :key=\"resource.id\"\n            class=\"resource-grid__item\"\n            :class=\"{ 'selected': selectedResourceId === resource.id }\"\n            @click=\"selectResource(resource)\"\n          >\n            <GameCard \n              :title=\"resource.name\" \n              :subtitle=\"'Resource'\" \n              :cardType=\"CardType.RESOURCE\"\n            >\n              <p>{{ resource.description }}</p>\n              \n              <div class=\"resource-type mt-3\" v-if=\"resource.rarity\">\n                <h5>Rarity: {{ resource.rarity }}</h5>\n                <p>{{ getRarityDescription(resource.rarity) }}</p>\n              </div>\n              \n              <div class=\"resource-seasons mt-3\" v-if=\"resource.seasonalAbundance && resource.seasonalAbundance.length\">\n                <h5>Seasonal Availability</h5>\n                <div class=\"season-tags\">\n                  <span \n                    v-for=\"season in resource.seasonalAbundance\" \n                    :key=\"season\"\n                    class=\"season-tag\"\n                    :class=\"getSeasonClassName(season)\"\n                  >\n                    {{ formatSeasonName(season) }}\n                  </span>\n                </div>\n              </div>\n              \n              <div class=\"resource-special-effect mt-3\" v-if=\"resource.specialEffect\">\n                <h5>Special Effect</h5>\n                <p>{{ resource.specialEffect.description }}</p>\n              </div>\n            </GameCard>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"selectedResourceId\" class=\"resource-management__actions mt-4\">\n        <button \n          class=\"btn btn--primary\" \n          @click=\"useResource\"\n          :disabled=\"!canUseSelectedResource\"\n        >\n          Use Resource\n        </button>\n        <button \n          class=\"btn btn--secondary ml-2\" \n          @click=\"discardResource\"\n        >\n          Discard Resource\n        </button>\n        <button \n          class=\"btn btn--accent ml-2\" \n          @click=\"cancelSelection\"\n        >\n          Cancel\n        </button>\n      </div>\n      \n      <div class=\"resource-management__continue mt-4\">\n        <button \n          class=\"btn btn--primary btn--lg\" \n          @click=\"continueJourney\"\n        >\n          Continue Journey\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue';\nimport { GamePhase } from '@/models/enums/phases';\nimport { CardType } from '@/models/enums/cardTypes';\nimport { Season } from '@/models/enums/seasons';\nimport { useCardStore, usePlayerStore, useGameStore } from '@/stores';\nimport { ResourceCard } from '@/models/types/cards';\nimport GameCard from '@/components/core/GameCard.vue';\n\nexport default defineComponent({\n  name: 'ResourceManagement',\n  components: {\n    GameCard\n  },\n  setup() {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n    \n    const selectedResourceId = ref<string | null>(null);\n    \n    const currentPhase = computed(() => {\n      return gameStore.currentPhase;\n    });\n    \n    const playerResources = computed(() => {\n      const resourceIds = playerStore.resources;\n      return resourceIds.map(id => cardStore.getResourceById(id)).filter(Boolean) as ResourceCard[];\n    });\n    \n    const resourceCapacity = computed(() => {\n      return playerStore.resourceCapacity;\n    });\n    \n    const selectedResource = computed(() => {\n      if (!selectedResourceId.value) return null;\n      return playerResources.value.find(r => r.id === selectedResourceId.value) || null;\n    });\n    \n    const canUseSelectedResource = computed(() => {\n      if (!selectedResource.value) return false;\n      \n      // Check if the resource has a special effect\n      return !!selectedResource.value.specialEffect;\n    });\n    \n    const selectResource = (resource: ResourceCard) => {\n      selectedResourceId.value = resource.id;\n    };\n    \n    const useResource = () => {\n      if (!selectedResource.value) return;\n      \n      // Apply the resource effect\n      const resource = selectedResource.value;\n      \n      if (resource.specialEffect) {\n        // Apply the effect based on the resource type\n        gameStore.addToGameLog(`Used ${resource.name}: ${resource.specialEffect.description}`);\n        \n        // Remove the resource after use\n        playerStore.removeResource(resource.id);\n        \n        // Reset selection\n        selectedResourceId.value = null;\n      }\n    };\n    \n    const discardResource = () => {\n      if (!selectedResource.value) return;\n      \n      // Remove the resource\n      playerStore.removeResource(selectedResource.value.id);\n      gameStore.addToGameLog(`Discarded ${selectedResource.value.name}`);\n      \n      // Reset selection\n      selectedResourceId.value = null;\n    };\n    \n    const cancelSelection = () => {\n      selectedResourceId.value = null;\n    };\n    \n    const continueJourney = () => {\n      gameStore.advancePhase();\n    };\n    \n    // Convert season value to a CSS class name\n    const getSeasonClassName = (season: string): string => {\n      // Always return lowercase values for CSS classes\n      if (typeof season === 'string') {\n        return season.toLowerCase().replace(/_/g, '-');\n      }\n      return '';\n    };\n    \n    const formatSeasonName = (season: string): string => {\n      // Handle various season formats\n      if (typeof season !== 'string') {\n        return 'Unknown Season';\n      }\n      \n      // Try to match with Season enum values\n      switch (season) {\n        case Season.SAMHAIN:\n          return 'Samhain';\n        case Season.WINTERS_DEPTH:\n          return 'Winter\\'s Depth';\n        case Season.IMBOLC:\n          return 'Imbolc';\n        case Season.BELTANE:\n          return 'Beltane';\n        case Season.LUGHNASADH:\n          return 'Lughnasadh';\n        default:\n          // For legacy string values that aren't enum values\n          return season.replace(/_/g, ' ')\n            .replace(/\\b\\w/g, l => l.toUpperCase())\n            .replace('Winters Depth', 'Winter\\'s Depth');\n      }\n    };\n    \n    const getRarityDescription = (rarity: string) => {\n      switch (rarity) {\n        case 'common':\n          return 'Commonly found throughout the Celtic Realm.';\n        case 'uncommon':\n          return 'Somewhat rare, but can be found in specific locations.';\n        case 'rare':\n          return 'Very rare and valuable, found only in special circumstances.';\n        default:\n          return 'Unknown rarity.';\n      }\n    };\n    \n    return {\n      currentPhase,\n      GamePhase,\n      CardType,\n      playerResources,\n      resourceCapacity,\n      selectedResource,\n      selectedResourceId,\n      canUseSelectedResource,\n      selectResource,\n      useResource,\n      discardResource,\n      cancelSelection,\n      continueJourney,\n      formatSeasonName,\n      getSeasonClassName,\n      getRarityDescription\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.resource-management {\n  padding: $spacing-md;\n  \n  &__title {\n    font-family: $font-family-display;\n    margin-bottom: $spacing-md;\n    color: $primary-color;\n  }\n  \n  &__inactive {\n    background-color: rgba(0, 0, 0, 0.05);\n    padding: $spacing-md;\n    border-radius: $border-radius-md;\n    text-align: center;\n  }\n  \n  &__active {\n    display: flex;\n    flex-direction: column;\n    gap: $spacing-md;\n  }\n  \n  &__inventory {\n    background-color: white;\n    border-radius: $border-radius-md;\n    box-shadow: $shadow-sm;\n    padding: $spacing-md;\n    \n    h4 {\n      margin-bottom: $spacing-md;\n      color: $secondary-color;\n    }\n  }\n  \n  &__actions, &__continue {\n    display: flex;\n    justify-content: center;\n  }\n}\n\n.resource-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: $spacing-md;\n  \n  &__item {\n    cursor: pointer;\n    transition: transform $transition-normal;\n    \n    &:hover {\n      transform: translateY(-5px);\n    }\n    \n    &.selected {\n      transform: translateY(-5px);\n      box-shadow: 0 0 0 2px $accent-color;\n      border-radius: $border-radius-md;\n    }\n  }\n}\n\n.resource-type, .resource-affinity, .resource-seasons, .resource-special-effect {\n  margin-top: $spacing-sm;\n  padding: $spacing-xs $spacing-sm;\n  background-color: rgba(0, 0, 0, 0.02);\n  border-radius: $border-radius-sm;\n  \n  h5 {\n    color: $secondary-color;\n    font-size: $font-size-base;\n    margin-bottom: $spacing-xs;\n  }\n}\n\n.season-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $spacing-xs;\n  \n  .season-tag {\n    display: inline-block;\n    padding: 2px 8px;\n    border-radius: 12px;\n    font-size: $font-size-sm;\n    \n    &.samhain {\n      background-color: rgba($danger-color, 0.2);\n      color: $danger-color;\n    }\n    \n    &.winters-depth {\n      background-color: rgba($primary-color, 0.2);\n      color: $primary-color;\n    }\n    \n    &.imbolc {\n      background-color: rgba($success-color, 0.2);\n      color: $success-color;\n    }\n    \n    &.beltane {\n      background-color: rgba($warning-color, 0.2);\n      color: darken($warning-color, 10%);\n    }\n    \n    &.lughnasadh {\n      background-color: rgba($accent-color, 0.2);\n      color: $accent-color;\n    }\n  }\n}\n\n.empty-state {\n  text-align: center;\n  padding: $spacing-lg;\n  color: $secondary-color;\n  font-style: italic;\n}\n\n.mt-3 {\n  margin-top: $spacing-md;\n}\n\n.mt-4 {\n  margin-top: $spacing-lg;\n}\n\n.ml-2 {\n  margin-left: $spacing-sm;\n}\n</style>\n","import { render } from \"./ResourceManagement.vue?vue&type=template&id=754d0e67&scoped=true&ts=true\"\nimport script from \"./ResourceManagement.vue?vue&type=script&lang=ts\"\nexport * from \"./ResourceManagement.vue?vue&type=script&lang=ts\"\n\nimport \"./ResourceManagement.vue?vue&type=style&index=0&id=754d0e67&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-754d0e67\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"crafting-station\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = {\n  key: 0,\n  class: \"crafting-station__inactive\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"crafting-station__active\"\n}\nconst _hoisted_4 = { class: \"crafting-station__recipes\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"recipe-list\"\n}\nconst _hoisted_7 = [\"onClick\"]\nconst _hoisted_8 = { class: \"recipe-complexity\" }\nconst _hoisted_9 = { class: \"recipe-resources\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"crafting-station__details\"\n}\nconst _hoisted_11 = { class: \"item-ability mt-3\" }\nconst _hoisted_12 = { class: \"ability-description\" }\nconst _hoisted_13 = {\n  key: 0,\n  class: \"item-drawback mt-3\"\n}\nconst _hoisted_14 = { class: \"drawback-description\" }\nconst _hoisted_15 = { class: \"item-resources mt-3\" }\nconst _hoisted_16 = { class: \"resource-requirements\" }\nconst _hoisted_17 = { class: \"resource-status\" }\nconst _hoisted_18 = { class: \"crafting-actions mt-4\" }\nconst _hoisted_19 = [\"disabled\"]\nconst _hoisted_20 = {\n  key: 1,\n  class: \"crafting-station__placeholder\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[8] || (_cache[8] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"CraftingStation\", -1)),\n    _cache[9] || (_cache[9] = _createElementVNode(\"h3\", { class: \"crafting-station__title\" }, \"Crafting Station\", -1)),\n    (_ctx.currentPhase !== _ctx.GamePhase.CRAFTING)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[2] || (_cache[2] = [\n          _createElementVNode(\"p\", null, \"Crafting is not available during the current phase.\", -1)\n        ])))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"div\", _hoisted_4, [\n            _cache[4] || (_cache[4] = _createElementVNode(\"h4\", null, \"Available Recipes\", -1)),\n            (_ctx.availableRecipes.length === 0)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" You don't have enough resources to craft any items. \"))\n              : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.availableRecipes, (item) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: item.id,\n                      class: _normalizeClass([\"recipe-list__item\", { 'selected': _ctx.selectedRecipe?.id === item.id }]),\n                      onClick: ($event: any) => (_ctx.selectRecipe(item))\n                    }, [\n                      _createElementVNode(\"h5\", null, _toDisplayString(item.name), 1),\n                      _createElementVNode(\"div\", _hoisted_8, \"Complexity: \" + _toDisplayString(item.complexity), 1),\n                      _createElementVNode(\"div\", _hoisted_9, [\n                        _cache[3] || (_cache[3] = _createElementVNode(\"div\", null, \"Required Resources:\", -1)),\n                        _createElementVNode(\"ul\", null, [\n                          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.requiredResources, (resourceId) => {\n                            return (_openBlock(), _createElementBlock(\"li\", { key: resourceId }, [\n                              _createTextVNode(_toDisplayString(_ctx.getResourceName(resourceId)) + \" \", 1),\n                              _createElementVNode(\"span\", {\n                                class: _normalizeClass([\"resource-status\", { 'available': _ctx.hasResource(resourceId), 'missing': !_ctx.hasResource(resourceId) }])\n                              }, _toDisplayString(_ctx.hasResource(resourceId) ? '✓' : '✗'), 3)\n                            ]))\n                          }), 128))\n                        ])\n                      ])\n                    ], 10, _hoisted_7))\n                  }), 128))\n                ]))\n          ]),\n          (_ctx.selectedRecipe)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                _createElementVNode(\"h4\", null, _toDisplayString(_ctx.selectedRecipe.name), 1),\n                _createElementVNode(\"p\", null, _toDisplayString(_ctx.selectedRecipe.description), 1),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _createElementVNode(\"h5\", null, \"Ability: \" + _toDisplayString(_ctx.selectedRecipe.ability.name), 1),\n                  _createElementVNode(\"p\", _hoisted_12, _toDisplayString(_ctx.selectedRecipe.ability.description), 1)\n                ]),\n                (_ctx.selectedRecipe.drawback)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                      _cache[5] || (_cache[5] = _createElementVNode(\"h5\", null, \"Drawback\", -1)),\n                      _createElementVNode(\"p\", _hoisted_14, _toDisplayString(_ctx.selectedRecipe.drawback.description), 1)\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_15, [\n                  _cache[6] || (_cache[6] = _createElementVNode(\"h5\", null, \"Required Resources\", -1)),\n                  _createElementVNode(\"ul\", _hoisted_16, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedRecipe.requiredResources, (resourceId) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: resourceId,\n                        class: _normalizeClass({ 'available': _ctx.hasResource(resourceId), 'missing': !_ctx.hasResource(resourceId) })\n                      }, [\n                        _createTextVNode(_toDisplayString(_ctx.getResourceName(resourceId)) + \" \", 1),\n                        _createElementVNode(\"span\", _hoisted_17, _toDisplayString(_ctx.hasResource(resourceId) ? '✓' : '✗'), 1)\n                      ], 2))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_18, [\n                  _createElementVNode(\"button\", {\n                    class: \"btn btn--primary\",\n                    onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.craftItem && _ctx.craftItem(...args))),\n                    disabled: !_ctx.canCraftSelectedRecipe\n                  }, \" Craft Item \", 8, _hoisted_19),\n                  _createElementVNode(\"button\", {\n                    class: \"btn btn--secondary ml-2\",\n                    onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.cancelCrafting && _ctx.cancelCrafting(...args)))\n                  }, \" Cancel \")\n                ])\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _cache[7] || (_cache[7] = [\n                _createElementVNode(\"p\", null, \"Select a recipe to view details and craft an item.\", -1)\n              ])))\n        ]))\n  ]))\n}","<template>\n  <div class=\"crafting-station\" style=\"border: 2px solid lightblue; position: relative;\">\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">CraftingStation</div>\n    <h3 class=\"crafting-station__title\">Crafting Station</h3>\n    \n    <div v-if=\"currentPhase !== GamePhase.CRAFTING\" class=\"crafting-station__inactive\">\n      <p>Crafting is not available during the current phase.</p>\n    </div>\n    \n    <div v-else class=\"crafting-station__active\">\n      <div class=\"crafting-station__recipes\">\n        <h4>Available Recipes</h4>\n        <div v-if=\"availableRecipes.length === 0\" class=\"empty-state\">\n          You don't have enough resources to craft any items.\n        </div>\n        <div v-else class=\"recipe-list\">\n          <div \n            v-for=\"item in availableRecipes\" \n            :key=\"item.id\"\n            class=\"recipe-list__item\"\n            :class=\"{ 'selected': selectedRecipe?.id === item.id }\"\n            @click=\"selectRecipe(item)\"\n          >\n            <h5>{{ item.name }}</h5>\n            <div class=\"recipe-complexity\">Complexity: {{ item.complexity }}</div>\n            <div class=\"recipe-resources\">\n              <div>Required Resources:</div>\n              <ul>\n                <li v-for=\"resourceId in item.requiredResources\" :key=\"resourceId\">\n                  {{ getResourceName(resourceId) }}\n                  <span \n                    class=\"resource-status\"\n                    :class=\"{ 'available': hasResource(resourceId), 'missing': !hasResource(resourceId) }\"\n                  >\n                    {{ hasResource(resourceId) ? '✓' : '✗' }}\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"selectedRecipe\" class=\"crafting-station__details\">\n        <h4>{{ selectedRecipe.name }}</h4>\n        <p>{{ selectedRecipe.description }}</p>\n        \n        <div class=\"item-ability mt-3\">\n          <h5>Ability: {{ selectedRecipe.ability.name }}</h5>\n          <p class=\"ability-description\">{{ selectedRecipe.ability.description }}</p>\n        </div>\n        \n        <div v-if=\"selectedRecipe.drawback\" class=\"item-drawback mt-3\">\n          <h5>Drawback</h5>\n          <p class=\"drawback-description\">{{ selectedRecipe.drawback.description }}</p>\n        </div>\n        \n        <div class=\"item-resources mt-3\">\n          <h5>Required Resources</h5>\n          <ul class=\"resource-requirements\">\n            <li \n              v-for=\"resourceId in selectedRecipe.requiredResources\" \n              :key=\"resourceId\"\n              :class=\"{ 'available': hasResource(resourceId), 'missing': !hasResource(resourceId) }\"\n            >\n              {{ getResourceName(resourceId) }}\n              <span class=\"resource-status\">\n                {{ hasResource(resourceId) ? '✓' : '✗' }}\n              </span>\n            </li>\n          </ul>\n        </div>\n        \n        <div class=\"crafting-actions mt-4\">\n          <button \n            class=\"btn btn--primary\" \n            @click=\"craftItem\"\n            :disabled=\"!canCraftSelectedRecipe\"\n          >\n            Craft Item\n          </button>\n          <button class=\"btn btn--secondary ml-2\" @click=\"cancelCrafting\">\n            Cancel\n          </button>\n        </div>\n      </div>\n      \n      <div v-else class=\"crafting-station__placeholder\">\n        <p>Select a recipe to view details and craft an item.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, onMounted } from 'vue';\nimport { GamePhase } from '@/models/enums/phases';\nimport { useCardStore, usePlayerStore, useGameStore } from '@/stores';\nimport { CraftedItemCard } from '@/models/types/cards';\nimport { CraftingService } from '@/services/craftingService';\n\nexport default defineComponent({\n  name: 'CraftingStation',\n  setup() {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n    \n    const craftingService = ref<CraftingService | null>(null);\n    const selectedRecipe = ref<CraftedItemCard | null>(null);\n    \n    onMounted(() => {\n      try {\n        craftingService.value = new CraftingService();\n        console.log('CraftingStation: CraftingService initialized successfully');\n      } catch (error) {\n        console.error('CraftingStation: Error initializing CraftingService:', error);\n      }\n    });\n    \n    const currentPhase = computed(() => {\n      return gameStore.currentPhase;\n    });\n    \n    const playerResources = computed(() => {\n      return playerStore.resources;\n    });\n    \n    const availableRecipes = computed(() => {\n      // Filter craftable items based on resources the player has\n      return cardStore.craftedItems.filter(item => {\n        // Check if the player has ALL of the required resources\n        return item.requiredResources.every(resourceId => \n          playerResources.value.includes(resourceId)\n        );\n      });\n    });\n    \n    const canCraftSelectedRecipe = computed(() => {\n      if (!selectedRecipe.value) return false;\n      \n      // Just check if player has all required resources\n      return selectedRecipe.value.requiredResources.every(resourceId => \n        playerResources.value.includes(resourceId)\n      );\n    });\n    \n    const getResourceName = (resourceId: string) => {\n      const resource = cardStore.getResourceById(resourceId);\n      return resource ? resource.name : 'Unknown Resource';\n    };\n    \n    const hasResource = (resourceId: string) => {\n      return playerResources.value.includes(resourceId);\n    };\n    \n    const selectRecipe = (recipe: CraftedItemCard) => {\n      selectedRecipe.value = recipe;\n    };\n    \n    const craftItem = () => {\n      if (!selectedRecipe.value || !canCraftSelectedRecipe.value) return;\n      \n      if (craftingService.value) {\n        // Use the crafting service if available\n        const result = craftingService.value.craftItem(selectedRecipe.value.id);\n        if (!result) {\n          console.error('Failed to craft item');\n          return;\n        }\n      } else {\n        // Fallback: Remove resources used for crafting\n        selectedRecipe.value.requiredResources.forEach(resourceId => {\n          playerStore.removeResource(resourceId);\n        });\n      }\n      \n      // Add the crafted item to the player's inventory\n      playerStore.addCraftedItem(selectedRecipe.value.id);\n      \n      // Add experience for crafting\n      playerStore.gainExperience(1);\n      \n      // Log the crafting\n      gameStore.addToGameLog(`You crafted a ${selectedRecipe.value.name}!`);\n      \n      // Reset selection\n      selectedRecipe.value = null;\n      \n      // Move to the next phase\n      gameStore.advancePhase();\n    };\n    \n    const cancelCrafting = () => {\n      selectedRecipe.value = null;\n      \n      // Skip crafting and move to the next phase\n      gameStore.advancePhase();\n    };\n    \n    return {\n      currentPhase,\n      availableRecipes,\n      selectedRecipe,\n      canCraftSelectedRecipe,\n      getResourceName,\n      hasResource,\n      selectRecipe,\n      craftItem,\n      cancelCrafting,\n      GamePhase\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.crafting-station {\n  background-color: white;\n  border-radius: $border-radius-md;\n  box-shadow: $shadow-md;\n  padding: $spacing-md;\n  \n  &__title {\n    margin-top: 0;\n    margin-bottom: $spacing-md;\n    padding-bottom: $spacing-sm;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  }\n  \n  &__inactive {\n    text-align: center;\n    padding: $spacing-lg;\n    color: rgba($dark-color, 0.6);\n    font-style: italic;\n  }\n  \n  &__active {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: $spacing-lg;\n    \n    @media (max-width: $breakpoint-md) {\n      grid-template-columns: 1fr;\n    }\n  }\n  \n  &__placeholder {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 200px;\n    background-color: rgba(0, 0, 0, 0.02);\n    border-radius: $border-radius-md;\n    padding: $spacing-md;\n    text-align: center;\n    color: rgba($dark-color, 0.6);\n  }\n}\n\n.recipe-list {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: $spacing-md;\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &__item {\n    background-color: rgba(0, 0, 0, 0.02);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    border-radius: $border-radius-md;\n    padding: $spacing-md;\n    cursor: pointer;\n    transition: all $transition-fast;\n    \n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n      transform: translateY(-2px);\n    }\n    \n    &.selected {\n      border-color: $accent-color;\n      background-color: rgba($accent-color, 0.05);\n    }\n    \n    h5 {\n      margin-top: 0;\n      margin-bottom: $spacing-xs;\n    }\n  }\n}\n\n.recipe-complexity {\n  font-size: $font-size-sm;\n  color: $accent-color;\n  margin-bottom: $spacing-xs;\n}\n\n.recipe-resources {\n  font-size: $font-size-sm;\n  \n  ul {\n    list-style-type: none;\n    padding-left: $spacing-md;\n    margin-top: $spacing-xs;\n  }\n}\n\n.resource-requirements {\n  list-style-type: none;\n  padding-left: 0;\n  \n  li {\n    padding: $spacing-xs $spacing-sm;\n    margin-bottom: $spacing-xs;\n    border-radius: $border-radius-sm;\n    display: flex;\n    justify-content: space-between;\n    \n    &.available {\n      background-color: rgba($success-color, 0.1);\n    }\n    \n    &.missing {\n      background-color: rgba($danger-color, 0.1);\n    }\n  }\n}\n\n.resource-status {\n  font-weight: bold;\n  \n  &.available {\n    color: $success-color;\n  }\n  \n  &.missing {\n    color: $danger-color;\n  }\n}\n\n.empty-state {\n  text-align: center;\n  padding: $spacing-lg;\n  color: rgba($dark-color, 0.6);\n  font-style: italic;\n}\n</style>\n","import { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { TempEffect } from '@/models/types/game';\nimport { PlayerEffect } from '@/models/types/player';\nimport { Season } from '@/models/enums/seasons';\n\n// Threat manifestation types\nexport enum ThreatManifestationType {\n  RESOURCE_LOSS = 'RESOURCE_LOSS',\n  HEALTH_LOSS = 'HEALTH_LOSS',\n  CHALLENGE_DIFFICULTY = 'CHALLENGE_DIFFICULTY',\n  COMPANION_EFFECT = 'COMPANION_EFFECT',\n  LANDSCAPE_EFFECT = 'LANDSCAPE_EFFECT',\n  SEASONAL_SHIFT = 'SEASONAL_SHIFT'\n}\n\n// Threat event types\nexport enum ThreatEventType {\n  MINOR = 'MINOR',\n  MODERATE = 'MODERATE',\n  MAJOR = 'MAJOR'\n}\n\n// Otherworldly manifestation types - Aligned with game requirements\nexport enum OtherworldlyManifestationType {\n  MIST_WRAITH = 'MIST_WRAITH',\n  BARROW_WIGHT = 'BARROW_WIGHT',\n  FAERIE_ENTICEMENT = 'FAERIE_ENTICEMENT',\n  WILD_HUNT = 'WILD_HUNT',\n  ANCIENT_GUARDIAN = 'ANCIENT_GUARDIAN',\n  BOUNDARY_COLLAPSE = 'BOUNDARY_COLLAPSE',\n  SPIRIT_POSSESSION = 'SPIRIT_POSSESSION',\n  COSMIC_IMBALANCE = 'COSMIC_IMBALANCE'\n}\n\n// Interface for threat events\nexport interface ThreatEvent {\n  id: string;\n  name: string;\n  description: string;\n  type: ThreatEventType;\n  manifestation: ThreatManifestationType;\n  strength: number;\n  duration: number;\n}\n\n/**\n * Service for managing threat tokens and their effects in the game\n */\nexport class ThreatService {\n  private gameStore = useGameStore();\n  private playerStore = usePlayerStore();\n  private cardStore = useCardStore();\n  \n  // Track threat reduction per turn\n  private threatReductionThisTurn = 0;\n  \n  // Maximum threat reduction allowed per turn\n  private readonly MAX_THREAT_REDUCTION_PER_TURN = 3;\n  \n  // Sacred sites for threat reduction\n  private readonly SACRED_SITES = {\n    MOONLIT_LOCH: 'moonlit_loch',\n    DRUIDS_SANCTUARY: 'druids_sanctuary'\n  };\n  \n  // Resources that can affect threat\n  private readonly THREAT_RESOURCES = {\n    SACRED_WATER: 'sacred_water',\n    ROWAN_WOOD: 'rowan_wood'\n  };\n  \n  // Track if seasonal ritual has been performed\n  private hasPerformedSeasonalRitual = false;\n  \n  // Predefined threat events\n  private threatEvents: ThreatEvent[] = [\n    // Minor threat events\n    {\n      id: 'threat_event_1',\n      name: 'Unsettling Whispers',\n      description: 'Strange whispers echo through the landscape, causing unease.',\n      type: ThreatEventType.MINOR,\n      manifestation: ThreatManifestationType.CHALLENGE_DIFFICULTY,\n      strength: 1,\n      duration: 2\n    },\n    {\n      id: 'threat_event_2',\n      name: 'Sudden Chill',\n      description: 'A bone-deep chill sets in, making it harder to perform tasks.',\n      type: ThreatEventType.MINOR,\n      manifestation: ThreatManifestationType.HEALTH_LOSS,\n      strength: 1,\n      duration: 1\n    },\n    {\n      id: 'threat_event_3',\n      name: 'Misplaced Supplies',\n      description: 'Some of your resources have mysteriously gone missing.',\n      type: ThreatEventType.MINOR,\n      manifestation: ThreatManifestationType.RESOURCE_LOSS,\n      strength: 1,\n      duration: 1\n    },\n    \n    // Moderate threat events\n    {\n      id: 'threat_event_4',\n      name: 'Otherworldly Fog',\n      description: 'A thick, unnatural fog descends, obscuring paths and hiding dangers.',\n      type: ThreatEventType.MODERATE,\n      manifestation: ThreatManifestationType.LANDSCAPE_EFFECT,\n      strength: 2,\n      duration: 3\n    },\n    {\n      id: 'threat_event_5',\n      name: 'Animal Unrest',\n      description: 'Animals in the area become agitated and difficult to approach.',\n      type: ThreatEventType.MODERATE,\n      manifestation: ThreatManifestationType.COMPANION_EFFECT,\n      strength: 2,\n      duration: 2\n    },\n    {\n      id: 'threat_event_6',\n      name: 'Weakening Boundaries',\n      description: 'The veil between worlds thins, allowing strange energies to seep through.',\n      type: ThreatEventType.MODERATE,\n      manifestation: ThreatManifestationType.CHALLENGE_DIFFICULTY,\n      strength: 2,\n      duration: 3\n    },\n    \n    // Major threat events\n    {\n      id: 'threat_event_7',\n      name: 'Seasonal Disruption',\n      description: 'The natural cycle of seasons is disrupted, causing environmental chaos.',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.SEASONAL_SHIFT,\n      strength: 3,\n      duration: 4\n    },\n    {\n      id: 'threat_event_8',\n      name: 'Otherworldly Manifestation',\n      description: 'A powerful entity from beyond manifests, draining life force from all it encounters.',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.HEALTH_LOSS,\n      strength: 3,\n      duration: 3\n    },\n    {\n      id: 'threat_event_9',\n      name: 'Resource Blight',\n      description: 'A mysterious blight affects resources in the area, causing them to wither or spoil.',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.RESOURCE_LOSS,\n      strength: 3,\n      duration: 4\n    }\n  ];\n  \n  // Predefined otherworldly manifestations - Aligned with game requirements\n  private otherworldlyManifestations: (ThreatEvent & {\n    counterResource?: string;\n    requiresChallenge?: boolean;\n    challengeType?: string;\n    requiresOffering?: boolean;\n  })[] = [\n    {\n      id: 'manifestation_1',\n      name: 'Mist Wraith',\n      description: 'Obscures path, requires Amber Shards to banish',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.LANDSCAPE_EFFECT,\n      strength: 2,\n      duration: 3,\n      counterResource: 'amber_shards'\n    },\n    {\n      id: 'manifestation_2',\n      name: 'Barrow Wight',\n      description: 'Drains health each turn, must outrun or confront',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.HEALTH_LOSS,\n      strength: 2,\n      duration: 3,\n      requiresChallenge: true\n    },\n    {\n      id: 'manifestation_3',\n      name: 'Faerie Enticement',\n      description: 'Attempts to lead you astray, requires willpower challenge',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.CHALLENGE_DIFFICULTY,\n      strength: 2,\n      duration: 2,\n      challengeType: 'mental'\n    },\n    {\n      id: 'manifestation_4',\n      name: 'Wild Hunt',\n      description: 'Pursues you for 1d4 turns, must hide or join the hunt',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.CHALLENGE_DIFFICULTY,\n      strength: 3,\n      duration: Math.floor(Math.random() * 4) + 1, // 1d4 turns\n      challengeType: 'physical'\n    },\n    {\n      id: 'manifestation_5',\n      name: 'Ancient Guardian',\n      description: 'Blocks path, requires specific offering or riddling',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.LANDSCAPE_EFFECT,\n      strength: 3,\n      duration: 2,\n      requiresOffering: true\n    },\n    {\n      id: 'manifestation_6',\n      name: 'Boundary Collapse',\n      description: 'Seasons blur, unpredictable effects each turn',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.SEASONAL_SHIFT,\n      strength: 3,\n      duration: 4\n    },\n    {\n      id: 'manifestation_7',\n      name: 'Spirit Possession',\n      description: 'Animal Companion turns against you',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.COMPANION_EFFECT,\n      strength: 3,\n      duration: 3\n    },\n    {\n      id: 'manifestation_8',\n      name: 'Cosmic Imbalance',\n      description: 'All challenges +2 difficulty until balance restored',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.CHALLENGE_DIFFICULTY,\n      strength: 2,\n      duration: 4\n    }\n  ];\n  \n  /**\n   * Add threat tokens to the game state\n   * @param amount Number of threat tokens to add\n   * @returns Current number of threat tokens\n   */\n  public addThreatTokens(amount: number): number {\n    return this.gameStore.addThreatTokens(amount);\n  }\n  \n  /**\n   * Remove threat tokens from the game state\n   * @param amount Number of threat tokens to remove\n   * @returns Current number of threat tokens\n   */\n  public removeThreatTokens(amount: number): number {\n    // Enforce maximum threat reduction per turn\n    const remainingReduction = this.MAX_THREAT_REDUCTION_PER_TURN - this.threatReductionThisTurn;\n    if (remainingReduction <= 0) {\n      this.gameStore.addToGameLog('Maximum threat reduction reached for this turn.', true);\n      return this.gameStore.threatTokens;\n    }\n    \n    // Adjust amount if it would exceed the maximum\n    const actualAmount = Math.min(amount, remainingReduction);\n    \n    // Update the reduction tracker\n    this.threatReductionThisTurn += actualAmount;\n    \n    // Log the reduction\n    if (actualAmount < amount) {\n      this.gameStore.addToGameLog(`Reduced ${actualAmount} threat tokens (limit reached for this turn).`, true);\n    }\n    \n    return this.gameStore.removeThreatTokens(actualAmount);\n  }\n  \n  /**\n   * Reset the threat reduction tracker for a new turn\n   */\n  public resetThreatReductionTracker(): void {\n    this.threatReductionThisTurn = 0;\n  }\n  \n  /**\n   * Get the current threat level (1 level per 3 tokens)\n   * @returns Current threat level\n   */\n  public getThreatLevel(): number {\n    return Math.floor(this.gameStore.threatTokens / 3);\n  }\n  \n  /**\n   * Check if the player has an effect that prevents threat\n   * @returns True if player has threat prevention effect\n   */\n  public hasThreatPrevention(): boolean {\n    return this.playerStore.hasEffect('threat_prevention');\n  }\n  \n  /**\n   * Generate a random threat event based on current threat level\n   * @returns A random threat event\n   */\n  public generateRandomThreatEvent(): ThreatEvent | null {\n    const threatLevel = this.getThreatLevel();\n    \n    // No events if threat level is 0\n    if (threatLevel === 0) {\n      return null;\n    }\n    \n    // Filter events based on threat level\n    let eligibleEvents: ThreatEvent[] = [];\n    \n    if (threatLevel === 1) {\n      eligibleEvents = this.threatEvents.filter(event => event.type === ThreatEventType.MINOR);\n    } else if (threatLevel === 2) {\n      eligibleEvents = this.threatEvents.filter(event => \n        event.type === ThreatEventType.MINOR || event.type === ThreatEventType.MODERATE\n      );\n    } else {\n      // All events are eligible at threat level 3+\n      eligibleEvents = this.threatEvents;\n    }\n    \n    // Return random event from eligible events\n    if (eligibleEvents.length > 0) {\n      const randomIndex = Math.floor(Math.random() * eligibleEvents.length);\n      return eligibleEvents[randomIndex];\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Apply a threat event to the game state\n   * @param event The threat event to apply\n   */\n  public applyThreatEvent(event: ThreatEvent): void {\n    // Skip if player has threat prevention\n    if (this.hasThreatPrevention()) {\n      this.gameStore.addToGameLog(`${event.name} was prevented by your protective effects!`, true);\n      return;\n    }\n    \n    // Add effect to game state\n    this.gameStore.addToGameLog(`Threat manifests: ${event.name} - ${event.description}`, true);\n    \n    // Apply immediate effects based on manifestation type\n    switch (event.manifestation) {\n      case ThreatManifestationType.HEALTH_LOSS:\n        this.playerStore.takeDamage(event.strength);\n        this.gameStore.addToGameLog(`You lose ${event.strength} health from the threat.`);\n        break;\n        \n      case ThreatManifestationType.RESOURCE_LOSS:\n        this.playerStore.loseRandomResources(event.strength);\n        this.gameStore.addToGameLog(`You lose ${event.strength} random resources from the threat.`);\n        break;\n        \n      case ThreatManifestationType.CHALLENGE_DIFFICULTY:\n        // Add temporary effect to increase challenge difficulty\n        this.gameStore.addTempEffect(\n          'threat_challenge_difficulty',\n          'Increased Challenge Difficulty',\n          `Challenges are ${event.strength} points more difficult due to threat.`,\n          event.strength,\n          event.duration\n        );\n        break;\n        \n      case ThreatManifestationType.COMPANION_EFFECT:\n        // Add temporary effect to reduce companion effectiveness\n        this.gameStore.addTempEffect(\n          'threat_companion_effect',\n          'Companion Unrest',\n          `Animal companions are less effective due to threat.`,\n          event.strength,\n          event.duration\n        );\n        break;\n        \n      case ThreatManifestationType.LANDSCAPE_EFFECT:\n        // Add temporary effect to reduce resource gathering\n        this.gameStore.addTempEffect(\n          'threat_landscape_effect',\n          'Landscape Disruption',\n          `Resource gathering is reduced due to threat.`,\n          event.strength,\n          event.duration\n        );\n        break;\n        \n      case ThreatManifestationType.SEASONAL_SHIFT:\n        // Add temporary effect to disrupt seasonal benefits\n        this.gameStore.addTempEffect(\n          'threat_seasonal_shift',\n          'Seasonal Disruption',\n          `Seasonal benefits are reduced due to threat.`,\n          event.strength,\n          event.duration\n        );\n        \n        // Advance the season if this is a major event\n        if (event.type === ThreatEventType.MAJOR) {\n          this.gameStore.advanceSeason();\n        }\n        break;\n    }\n  }\n  \n  /**\n   * Generate and apply a random threat manifestation based on current threat level\n   * @returns The applied threat event, or null if none was applied\n   */\n  public manifestThreat(): ThreatEvent | null {\n    // Check if player has threat prevention\n    if (this.hasThreatPrevention()) {\n      this.gameStore.addToGameLog('Your protective effects prevented a threat manifestation!', true);\n      return null;\n    }\n    \n    // Generate random event\n    const event = this.generateRandomThreatEvent();\n    \n    // Apply the event if one was generated\n    if (event) {\n      this.applyThreatEvent(event);\n      return event;\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Check if a threat manifestation should occur based on current threat level\n   * Higher threat levels have higher chance of manifestation\n   * @returns True if a manifestation should occur\n   */\n  public shouldManifestThreat(): boolean {\n    const threatLevel = this.getThreatLevel();\n    \n    // No manifestations at threat level 0\n    if (threatLevel === 0) {\n      return false;\n    }\n    \n    // Probability increases with threat level\n    const manifestationChance = threatLevel * 0.15; // 15% per threat level\n    return Math.random() < manifestationChance;\n  }\n  \n  /**\n   * Add a threat prevention effect to the player\n   * @param duration Duration of the effect in turns\n   * @param strength Strength of the effect (higher values prevent stronger threats)\n   */\n  public addThreatPreventionEffect(duration: number, strength: number = 1): void {\n    const effect: PlayerEffect = {\n      id: 'threat_prevention',\n      name: 'Threat Prevention',\n      description: 'Prevents threat manifestations from affecting you.',\n      magnitude: strength,\n      duration,\n      type: 'protection',\n      target: 'player'\n    };\n    \n    this.playerStore.addEffect(effect);\n    this.gameStore.addToGameLog(`You are now protected from threats for ${duration} turns.`, true);\n  }\n  \n  /**\n   * Process threat-related effects at the end of a turn\n   * This includes checking for new manifestations and updating existing effects\n   */\n  public processThreatEffects(): void {\n    // Reset threat reduction tracker for the new turn\n    this.resetThreatReductionTracker();\n    \n    // Check if a new threat should manifest\n    if (this.shouldManifestThreat()) {\n      this.manifestThreat();\n    }\n    \n    // Roll for otherworldly manifestation if threat is high\n    if (this.gameStore.threatTokens >= 10) {\n      this.rollForOtherworldlyManifestation();\n    }\n    \n    // Process existing effects (already handled by game and player stores)\n  }\n  \n  /**\n   * Use a sacred site to reduce threat\n   * @param landscapeId ID of the current landscape\n   * @returns Number of threat tokens removed, or 0 if not a sacred site\n   */\n  public useSacredSiteForThreatReduction(landscapeId: string): number {\n    if (landscapeId === this.SACRED_SITES.MOONLIT_LOCH) {\n      // Moonlit Loch: Remove 1-3 tokens through purification ritual\n      const reduction = Math.floor(Math.random() * 3) + 1; // 1-3 tokens\n      this.gameStore.addToGameLog(`You performed a purification ritual at the Moonlit Loch, reducing threat by ${reduction}.`, true);\n      return this.removeThreatTokens(reduction);\n    } \n    else if (landscapeId === this.SACRED_SITES.DRUIDS_SANCTUARY) {\n      // Druid's Sanctuary: Remove 2 tokens through meditation\n      this.gameStore.addToGameLog('You meditated at the Druid\\'s Sanctuary, reducing threat by 2.', true);\n      return this.removeThreatTokens(2);\n    }\n    \n    return 0;\n  }\n  \n  /**\n   * Use a resource to reduce or prevent threat\n   * @param resourceId ID of the resource to use\n   * @returns True if the resource was used successfully for threat reduction\n   */\n  public useResourceForThreatReduction(resourceId: string): boolean {\n    const playerStore = usePlayerStore();\n    \n    if (resourceId === this.THREAT_RESOURCES.SACRED_WATER) {\n      // Sacred Water: Remove 1 token when used\n      if (this.removeThreatTokens(1) > 0) {\n        playerStore.removeResource(resourceId);\n        this.gameStore.addToGameLog('You used Sacred Water to purify and reduce threat by 1.', true);\n        return true;\n      }\n    } \n    else if (resourceId === this.THREAT_RESOURCES.ROWAN_WOOD) {\n      // Rowan Wood: Prevent 1 token accumulation when used\n      playerStore.removeResource(resourceId);\n      \n      // Add a temporary effect to prevent the next threat token accumulation\n      this.gameStore.addTempEffect(\n        'threat_prevention_rowan',\n        'Rowan Protection',\n        'Protected from threat accumulation by Rowan Wood.',\n        1,\n        1\n      );\n      \n      this.gameStore.addToGameLog('You used Rowan Wood to ward against the next threat accumulation.', true);\n      return true;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Perform a seasonal purification ritual\n   * @returns Number of threat tokens removed\n   */\n  public performSeasonalPurificationRitual(): number {\n    const gameStore = this.gameStore;\n    const currentSeason = gameStore.currentSeason;\n    \n    // Check if ritual already performed this season\n    if (this.hasPerformedSeasonalRitual) {\n      gameStore.addToGameLog('You have already performed a purification ritual this season.', true);\n      return 0;\n    }\n    \n    // Different ritual effectiveness based on season\n    let reduction = 1;\n    let ritualName = '';\n    \n    switch (currentSeason) {\n      case Season.IMBOLC:\n        ritualName = 'Imbolc Purification';\n        reduction = 3;\n        break;\n      case Season.BELTANE:\n        ritualName = 'Spring Renewal Ritual';\n        reduction = 2;\n        break;\n      case Season.LUGHNASADH:\n        ritualName = 'Summer Solstice Ceremony';\n        reduction = 3;\n        break;\n      case Season.SAMHAIN:\n        ritualName = 'Autumn Harvest Offering';\n        reduction = 2;\n        break;\n      case Season.WINTERS_DEPTH:\n        ritualName = 'Winter Solstice Vigil';\n        reduction = 1;\n        break;\n    }\n    \n    // Mark ritual as performed this season\n    this.hasPerformedSeasonalRitual = true;\n    \n    gameStore.addToGameLog(`You performed the ${ritualName}, reducing threat by ${reduction}.`, true);\n    return this.removeThreatTokens(reduction);\n  }\n  \n  /**\n   * Reset the seasonal ritual tracker when season changes\n   */\n  public resetSeasonalRitualTracker(): void {\n    this.hasPerformedSeasonalRitual = false;\n  }\n  \n  /** \n   * Roll for an otherworldly manifestation (when threat is high)\n   * @returns The manifestation that occurred, or null if none\n   */\n  public rollForOtherworldlyManifestation(): any {\n    if (this.gameStore.threatTokens < 10) {\n      return null;\n    }\n    \n    // Roll 1d8 for manifestation type\n    const roll = Math.floor(Math.random() * 8) + 1;\n    const manifestation = this.otherworldlyManifestations[roll - 1];\n    \n    this.gameStore.addToGameLog(`Otherworldly Manifestation: ${manifestation.name} - ${manifestation.description}`, true);\n    \n    // Apply the manifestation effects\n    this.applyThreatEvent(manifestation);\n    \n    return manifestation;\n  }\n  \n  /**\n   * Check if the current landscape is a sacred site for threat reduction\n   * @param landscapeId ID of the landscape to check\n   * @returns True if the landscape is a sacred site\n   */\n  public isSacredSite(landscapeId: string): boolean {\n    return landscapeId === this.SACRED_SITES.MOONLIT_LOCH || \n           landscapeId === this.SACRED_SITES.DRUIDS_SANCTUARY;\n  }\n  \n  /**\n   * Check if a resource can be used for threat reduction\n   * @param resourceId ID of the resource to check\n   * @returns True if the resource can reduce threat\n   */\n  public isResourceUsefulForThreat(resourceId: string): boolean {\n    return resourceId === this.THREAT_RESOURCES.SACRED_WATER || \n           resourceId === this.THREAT_RESOURCES.ROWAN_WOOD;\n  }\n  \n  /**\n   * Get threat accumulation for crafting a powerful item\n   * @param itemId ID of the crafted item\n   * @returns Number of threat tokens to add (0 if none)\n   */\n  public getThreatForCraftedItem(itemId: string): number {\n    const item = this.cardStore.getCraftedItemById(itemId);\n    \n    if (!item) return 0;\n    \n    // Default threat costs based on complexity\n    if (item.complexity) {\n      const complexityValue = typeof item.complexity === 'number' \n        ? item.complexity \n        : this.getComplexityValue(item.complexity);\n        \n      // Higher complexity means more threat\n      if (complexityValue >= 4) {\n        return 3; // LEGENDARY\n      } else if (complexityValue >= 3) {\n        return 2; // ADVANCED\n      } else if (complexityValue >= 2) {\n        return 1; // COMPLEX\n      }\n    }\n    \n    return 0;\n  }\n  \n  /**\n   * Get numeric value for complexity string\n   * @param complexity Complexity as string\n   * @returns Numeric value\n   */\n  private getComplexityValue(complexity: string): number {\n    switch (complexity) {\n      case 'LEGENDARY': return 4;\n      case 'ADVANCED': return 3;\n      case 'COMPLEX': return 2;\n      case 'SIMPLE': \n      default: return 1;\n    }\n  }\n  \n  /**\n   * Add threat for seasonal crossing\n   * @returns Number of threat tokens added\n   */\n  public addThreatForSeasonalCrossing(): number {\n    return this.addThreatTokens(2);\n  }\n  \n  /**\n   * Add threat for disrespecting a sacred site\n   * @param landscapeId ID of the landscape\n   * @param severity How severe the disrespect was (1-3)\n   * @returns Number of threat tokens added\n   */\n  public addThreatForSacredSiteDisrespect(landscapeId: string, severity: number = 1): number {\n    // Only add threat if it's a sacred site\n    if (this.isSacredSite(landscapeId)) {\n      // Ensure severity is within bounds\n      const threatAmount = Math.max(1, Math.min(3, severity));\n      this.gameStore.addToGameLog(`Your actions have disrespected a sacred site, increasing threat by ${threatAmount}.`, true);\n      return this.addThreatTokens(threatAmount);\n    }\n    \n    return 0;\n  }\n  \n  /**\n   * Process threat system on season change\n   * @param oldSeason Previous season\n   * @param newSeason Current season\n   */\n  public handleSeasonChange(oldSeason: Season, newSeason: Season): void {\n    // Reset the seasonal ritual tracker\n    this.resetSeasonalRitualTracker();\n    \n    // Add threat for seasonal crossing if player is unprepared\n    const playerStore = this.playerStore;\n    \n    // Check if player has necessary preparation for the season\n    let isPrepared = false;\n    \n    // Check for seasonal preparation items or effects\n    if (newSeason === Season.WINTERS_DEPTH) {\n      isPrepared = playerStore.resources.some(r => ['woven_reeds', 'forge_cinders'].includes(r));\n    } else if (newSeason === Season.IMBOLC) {\n      isPrepared = playerStore.resources.some(r => ['rowan_wood', 'silver_mistletoe'].includes(r));\n    } else if (newSeason === Season.BELTANE) {\n      isPrepared = playerStore.resources.some(r => ['oak_galls', 'amber_shards'].includes(r));\n    } else if (newSeason === Season.LUGHNASADH) {\n      isPrepared = playerStore.resources.some(r => ['sacred_water', 'horse_hair'].includes(r));\n    } else if (newSeason === Season.SAMHAIN) {\n      isPrepared = playerStore.resources.some(r => ['barrow_dust', 'ogham_sticks'].includes(r));\n    }\n    \n    // Add threat if unprepared\n    if (!isPrepared) {\n      this.addThreatForSeasonalCrossing();\n      this.gameStore.addToGameLog(`You were unprepared for the transition to ${newSeason}, increasing threat by 2.`, true);\n    } else {\n      this.gameStore.addToGameLog(`Your preparations have eased the transition to ${newSeason}.`, true);\n    }\n  }\n  \n  /**\n   * Process threat system at the end of a turn\n   * Handles threat accumulation, manifestations, and other threat-related effects\n   */\n  public processEndOfTurn(): void {\n    // Process threat effects\n    this.processThreatEffects();\n    \n    // Check current landscape for any threat-related effects\n    const currentLandscapeId = this.gameStore.currentLandscapeId;\n    if (this.isSacredSite(currentLandscapeId)) {\n      this.gameStore.addToGameLog(`You are at a sacred site (${currentLandscapeId}). You may perform a ritual to reduce threat.`, false);\n    }\n    \n    // Apply any pending threat effects from crafted items\n    // This would be handled elsewhere when crafting occurs\n  }\n  \n  /**\n   * Integrate with the resource service to handle resource usage for threat reduction\n   * @param resourceId ID of the resource to use\n   * @returns True if the resource was used for threat reduction\n   */\n  public processResourceUse(resourceId: string): boolean {\n    if (this.isResourceUsefulForThreat(resourceId)) {\n      return this.useResourceForThreatReduction(resourceId);\n    }\n    return false;\n  }\n}\n","/**\n * Crafting Service\n * Handles crafting mechanics and resource requirements\n */\nimport { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { ThreatService } from '@/services/threatService';\n\n// Define interfaces to extend existing types\ninterface ExtendedLandscape {\n  hasCraftingFacilities?: boolean;\n  craftingBonuses?: Record<string, number>;\n  specialCraftingCapabilities?: number;\n}\n\n// Complexity tiers with their numeric values for difficulty calculation\nconst COMPLEXITY_TIERS = {\n  SIMPLE: 1,\n  COMPLEX: 2,\n  ADVANCED: 3,\n  LEGENDARY: 4\n};\n\n// Map string complexity values to numeric tier values\nconst getComplexityValue = (complexity: string | number): number => {\n  // If it's already a number, return it\n  if (typeof complexity === 'number') {\n    return complexity;\n  }\n  \n  switch(complexity.toLowerCase()) {\n    case 'simple': return COMPLEXITY_TIERS.SIMPLE;\n    case 'complex': return COMPLEXITY_TIERS.COMPLEX;\n    case 'advanced': return COMPLEXITY_TIERS.ADVANCED;\n    case 'legendary': return COMPLEXITY_TIERS.LEGENDARY;\n    default: return COMPLEXITY_TIERS.SIMPLE;\n  }\n};\n\nclass CraftingService {\n  private gameStore = useGameStore();\n  private playerStore = usePlayerStore();\n  private cardStore = useCardStore();\n  private threatService = new ThreatService();\n  \n  /**\n   * Check if player can craft an item\n   * @param itemId The ID of the item to craft\n   * @returns Object with canCraft flag and missing resources\n   */\n  canCraftItem(itemId: string): {\n    canCraft: boolean;\n    missingResources: string[];\n    landscapeSupported: boolean;\n    playerSkill: boolean;\n  } {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    const gameStore = useGameStore();\n    \n    // Get crafted item\n    const item = cardStore.getCraftedItemById(itemId);\n    if (!item) {\n      return { canCraft: false, missingResources: [], landscapeSupported: false, playerSkill: false };\n    }\n    \n    // Check if player already has this item\n    if (playerStore.craftedItems.includes(itemId)) {\n      return { canCraft: false, missingResources: [], landscapeSupported: false, playerSkill: false };\n    }\n    \n    // Check required resources\n    const missingResources = [];\n    for (const resourceId of item.requiredResources) {\n      if (!playerStore.resources.includes(resourceId)) {\n        missingResources.push(resourceId);\n      }\n    }\n    \n    // Check if current landscape supports crafting this item complexity\n    const landscapeSupported = this.isComplexitySupportedByLandscape(\n      getComplexityValue(item.complexity),\n      gameStore.currentLandscapeId\n    );\n    \n    // Check if player has sufficient skill level for this item\n    const playerSkill = this.playerHasSkillForComplexity(\n      getComplexityValue(item.complexity)\n    );\n    \n    return {\n      canCraft: missingResources.length === 0,\n      missingResources,\n      landscapeSupported,\n      playerSkill\n    };\n  }\n  \n  /**\n   * Check if the current landscape supports crafting at the given complexity tier\n   * @param complexityTier The numeric complexity tier value\n   * @param landscapeId The current landscape ID\n   * @returns True if the landscape supports this complexity\n   */\n  isComplexitySupportedByLandscape(complexityTier: number, landscapeId: string): boolean {\n    const cardStore = useCardStore();\n    const landscape = cardStore.getLandscapeById(landscapeId) as unknown as ExtendedLandscape;\n    \n    if (!landscape) {\n      return false;\n    }\n    \n    // Basic landscapes may only support simple crafting\n    if (!landscape.hasCraftingFacilities && complexityTier > COMPLEXITY_TIERS.SIMPLE) {\n      return false;\n    }\n    \n    // Specialized crafting landscapes (with facilities) support up to complex items\n    if (landscape.hasCraftingFacilities && complexityTier <= COMPLEXITY_TIERS.COMPLEX) {\n      return true;\n    }\n    \n    // Check for special crafting landscapes that support advanced or legendary\n    if (landscape.specialCraftingCapabilities) {\n      return complexityTier <= landscape.specialCraftingCapabilities;\n    }\n    \n    // Default case: simple items can be crafted anywhere\n    return complexityTier === COMPLEXITY_TIERS.SIMPLE;\n  }\n  \n  /**\n   * Check if player has sufficient skill for crafting at the given complexity tier\n   * @param complexityTier The numeric complexity tier value\n   * @returns True if player has the necessary skill\n   */\n  playerHasSkillForComplexity(complexityTier: number): boolean {\n    const playerStore = usePlayerStore();\n    \n    // Number of crafted items can indicate skill level\n    const craftedItemCount = playerStore.craftedItemCount;\n    \n    // Simple items require no prior crafting\n    if (complexityTier === COMPLEXITY_TIERS.SIMPLE) {\n      return true;\n    }\n    \n    // Complex items require at least 1 prior crafted item\n    if (complexityTier === COMPLEXITY_TIERS.COMPLEX) {\n      return craftedItemCount >= 1;\n    }\n    \n    // Advanced items require at least 3 prior crafted items\n    if (complexityTier === COMPLEXITY_TIERS.ADVANCED) {\n      return craftedItemCount >= 3;\n    }\n    \n    // Legendary items require at least 5 prior crafted items\n    if (complexityTier === COMPLEXITY_TIERS.LEGENDARY) {\n      return craftedItemCount >= 5;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Craft an item if possible\n   * @param itemId ID of the item to craft\n   * @returns True if the item was crafted, false otherwise\n   */\n  public craftItem(itemId: string): boolean {\n    const { canCraft, missingResources, landscapeSupported, playerSkill } = this.canCraftItem(itemId);\n    \n    if (!canCraft) {\n      if (missingResources.length > 0) {\n        this.gameStore.addToGameLog(`Cannot craft item: missing resources - ${missingResources.join(', ')}`, true);\n      } else if (!landscapeSupported) {\n        this.gameStore.addToGameLog('Cannot craft item: current landscape does not support this complexity of crafting', true);\n      } else if (!playerSkill) {\n        this.gameStore.addToGameLog('Cannot craft item: insufficient crafting experience', true);\n      } else {\n        this.gameStore.addToGameLog('Cannot craft item: unknown reason', true);\n      }\n      return false;\n    }\n    \n    const item = this.cardStore.getCraftedItemById(itemId);\n    if (!item) {\n      this.gameStore.addToGameLog(`Cannot craft item: item with ID ${itemId} not found`, true);\n      return false;\n    }\n    \n    // Validate each required resource exists in the game data\n    const invalidResources = [];\n    for (const resourceId of item.requiredResources) {\n      if (!this.cardStore.getResourceById(resourceId)) {\n        invalidResources.push(resourceId);\n      }\n    }\n    \n    if (invalidResources.length > 0) {\n      this.gameStore.addToGameLog(`Crafting failed: invalid resource references - ${invalidResources.join(', ')}`, true);\n      return false;\n    }\n    \n    // Remove required resources\n    for (const resourceId of item.requiredResources) {\n      this.playerStore.removeResource(resourceId);\n    }\n    \n    // Add the crafted item to inventory\n    this.playerStore.addCraftedItem(itemId);\n    \n    // Update unique crafted items count for skill progression\n    if (!this.playerStore.craftedItems.includes(itemId)) {\n      this.playerStore.uniqueCraftedItemsCount++;\n    }\n    \n    // Check for legendary item\n    if (item.isLegendary) {\n      this.playerStore.hasCraftedLegendaryItem = true;\n    }\n    \n    // Apply threat cost based on item complexity\n    const threatCost = this.threatService.getThreatForCraftedItem(itemId);\n    if (threatCost > 0) {\n      this.threatService.addThreatTokens(threatCost);\n      this.gameStore.addToGameLog(`Crafting this powerful item has increased threat by ${threatCost}.`, true);\n    }\n    \n    this.gameStore.addToGameLog(`Successfully crafted ${item.name}!`, true);\n    return true;\n  }\n  \n  /**\n   * Calculate crafting difficulty for an item\n   * @param itemId The ID of the item to craft\n   * @returns The calculated difficulty\n   */\n  calculateCraftingDifficulty(itemId: string): number {\n    const cardStore = useCardStore();\n    const gameStore = useGameStore();\n    \n    // Get crafted item\n    const item = cardStore.getCraftedItemById(itemId);\n    if (!item) {\n      return 0;\n    }\n    \n    // Get the complexity tier numeric value\n    const complexityValue = getComplexityValue(item.complexity);\n    \n    // Base difficulty from item\n    // Use item complexity as the base if no specific difficulty is defined\n    const baseDifficulty = typeof item['difficulty'] === 'number' ? item['difficulty'] : 3;\n    let difficulty = baseDifficulty * complexityValue;\n    \n    // Apply location bonus/penalty\n    const locationBonus = this.getLocationCraftingBonus(itemId, gameStore.currentLandscapeId);\n    difficulty -= locationBonus * 2; // Increase the impact of location bonuses\n    \n    // Apply seasonal effects\n    const seasonalModifier = this.getSeasonalCraftingModifier(gameStore.currentSeason);\n    difficulty += seasonalModifier;\n    \n    // Apply threat level effects\n    const threatLevel = Math.floor(gameStore.threatTokens / 3);\n    difficulty += threatLevel;\n    \n    // Apply player's crafting experience bonus\n    const playerStore = usePlayerStore();\n    const experienceBonus = Math.floor(playerStore.craftedItemCount / 2);\n    difficulty -= experienceBonus;\n    \n    // Ensure minimum difficulty of 1\n    return Math.max(1, difficulty);\n  }\n  \n  /**\n   * Get crafting bonus for current location\n   * @param itemId The ID of the item to craft\n   * @param locationId The ID of the current location\n   * @returns The location bonus (positive is beneficial)\n   */\n  getLocationCraftingBonus(itemId: string, locationId: string): number {\n    const cardStore = useCardStore();\n    \n    const item = cardStore.getCraftedItemById(itemId);\n    const landscape = cardStore.getLandscapeById(locationId) as unknown as ExtendedLandscape;\n    \n    if (!item || !landscape) {\n      return 0;\n    }\n    \n    // Check if location has crafting facilities\n    if (landscape.hasCraftingFacilities) {\n      return 1;\n    }\n    \n    // Check if location has special bonus for this item type\n    if (landscape.craftingBonuses && item.type && landscape.craftingBonuses[item.type]) {\n      return landscape.craftingBonuses[item.type];\n    }\n    \n    // Check if landscape has special affinity for the item's complexity\n    if (landscape.specialCraftingCapabilities && \n        getComplexityValue(item.complexity) <= landscape.specialCraftingCapabilities) {\n      return 2; // Bigger bonus for specialized crafting locations\n    }\n    \n    return 0;\n  }\n  \n  /**\n   * Get seasonal modifier for crafting\n   * @param season The current season\n   * @returns The seasonal modifier (negative is beneficial)\n   */\n  getSeasonalCraftingModifier(season: string): number {\n    // Define seasonal crafting modifiers\n    const seasonalModifiers: Record<string, number> = {\n      'SAMHAIN': 0,\n      'WINTERS_DEPTH': 1, // Harder to craft in winter\n      'IMBOLC': 0,\n      'BELTANE': -1, // Easier to craft in spring\n      'LUGHNASADH': -1 // Easier to craft in harvest season\n    };\n    \n    return seasonalModifiers[season] || 0;\n  }\n  \n  /**\n   * Get recipe suggestions based on available resources\n   * @returns Array of craftable item IDs\n   */\n  getRecipeSuggestions(): string[] {\n    const cardStore = useCardStore();\n    const craftableItems = cardStore.getAllCraftedItems();\n    \n    // Filter to items that can be crafted\n    return craftableItems\n      .filter(item => item.requiredResources && item.requiredResources.length > 0)\n      .map(item => item.id);\n  }\n  \n  /**\n   * Get recipe suggestions filtered by complexity (number of required resources)\n   * @param maxComplexity The maximum number of resources required for a recipe\n   * @returns An array of item IDs for craftable items that meet the complexity requirement\n   */\n  getRecipeSuggestionsByComplexity(maxComplexity: number): string[] {\n    const cardStore = useCardStore();\n    const craftableItems = cardStore.getAllCraftedItems();\n    \n    // Filter to items that can be crafted and match complexity\n    return craftableItems\n      .filter(item => \n        item.requiredResources && \n        item.requiredResources.length > 0 && \n        item.requiredResources.length <= maxComplexity\n      )\n      .map(item => item.id);\n  }\n  \n  /**\n   * Get detailed crafting requirements and restrictions for an item\n   * @param itemId The ID of the item to check\n   * @returns Detailed crafting requirements object\n   */\n  getCraftingRequirements(itemId: string): {\n    item: any,\n    requiredResources: string[],\n    missingResources: string[],\n    landscapeSupported: boolean,\n    playerSkill: boolean,\n    difficulty: number,\n    locationBonus: number,\n    seasonalModifier: number\n  } | null {\n    const cardStore = useCardStore();\n    const gameStore = useGameStore();\n    const playerStore = usePlayerStore();\n    \n    const item = cardStore.getCraftedItemById(itemId);\n    if (!item) {\n      return null;\n    }\n    \n    const { missingResources, landscapeSupported, playerSkill } = this.canCraftItem(itemId);\n    const difficulty = this.calculateCraftingDifficulty(itemId);\n    const locationBonus = this.getLocationCraftingBonus(itemId, gameStore.currentLandscapeId);\n    const seasonalModifier = this.getSeasonalCraftingModifier(gameStore.currentSeason);\n    \n    return {\n      item,\n      requiredResources: item.requiredResources,\n      missingResources,\n      landscapeSupported,\n      playerSkill,\n      difficulty,\n      locationBonus,\n      seasonalModifier\n    };\n  }\n  \n  /**\n   * Apply effects when an item is crafted\n   * @param itemId The ID of the crafted item\n   */\n  applyItemEffect(itemId: string) {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    \n    const item = cardStore.getCraftedItemById(itemId);\n    if (!item || !item.ability || typeof item.ability !== 'object') {\n      return;\n    }\n    \n    // Apply the item's ability effects based on its type\n    // In a real implementation, this would include specific logic for each item\n    \n    if (item.ability.type === 'healing') {\n      // Example: Healing items restore health\n      playerStore.healHealth(2);\n    } else if (item.ability.type === 'protection') {\n      // Example: Protection items add temporary effects\n      const gameStore = useGameStore();\n      gameStore.addTempEffect(\n        `${itemId}_protection`,\n        `${item.name} Protection`,\n        item.ability.description || '',\n        2,\n        3\n      );\n    }\n    \n    // If the item has a drawback, apply it\n    if (item.drawback) {\n      // Example: Some drawbacks could reduce health or add threat\n      const gameStore = useGameStore();\n      gameStore.addThreatTokens(1);\n    }\n  }\n  \n  /**\n   * Check if crafting this item satisfies any victory conditions\n   */\n  private checkCraftingVictoryConditions(): void {\n    const playerStore = usePlayerStore();\n    \n    // Example: Check if player has crafted a legendary item\n    const cardStore = useCardStore();\n    const hasLegendaryItem = playerStore.craftedItems.some(itemId => {\n      const item = cardStore.getCraftedItemById(itemId);\n      return item && item.isLegendary;\n    });\n    \n    if (hasLegendaryItem) {\n      playerStore.hasCraftedLegendaryItem = true;\n    }\n    \n    // Check for number of unique crafted items\n    const uniqueItemTypes = new Set(\n      playerStore.craftedItems.map(itemId => {\n        const item = cardStore.getCraftedItemById(itemId);\n        return item ? item.type : null;\n      }).filter(Boolean)\n    );\n    \n    playerStore.uniqueCraftedItemsCount = uniqueItemTypes.size;\n  }\n}\n\nexport { CraftingService };\n","import { render } from \"./CraftingStation.vue?vue&type=template&id=ccf6e3aa&scoped=true&ts=true\"\nimport script from \"./CraftingStation.vue?vue&type=script&lang=ts\"\nexport * from \"./CraftingStation.vue?vue&type=script&lang=ts\"\n\nimport \"./CraftingStation.vue?vue&type=style&index=0&id=ccf6e3aa&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ccf6e3aa\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"player-dashboard\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\",\"height\":\"50px\",\"display\":\"flex\",\"align-items\":\"center\"}\n}\nconst _hoisted_2 = { class: \"player-info\" }\nconst _hoisted_3 = {\n  class: \"player-stats\",\n  style: {\"display\":\"flex\",\"gap\":\"20px\"}\n}\nconst _hoisted_4 = { class: \"stat\" }\nconst _hoisted_5 = { class: \"stat-label\" }\nconst _hoisted_6 = { class: \"stat-value\" }\nconst _hoisted_7 = { class: \"stat\" }\nconst _hoisted_8 = { class: \"stat-value\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[1] || (_cache[1] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"PlayerDashboard\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"span\", _hoisted_5, _toDisplayString(_ctx.character ? _ctx.character.name : 'Character') + \":\", 1),\n          _createElementVNode(\"span\", _hoisted_6, _toDisplayString(_ctx.playerStore.health) + \"/\" + _toDisplayString(_ctx.playerStore.maxHealth) + \" HP\", 1)\n        ]),\n        _createElementVNode(\"div\", _hoisted_7, [\n          _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"stat-label\" }, \"XP:\", -1)),\n          _createElementVNode(\"span\", _hoisted_8, _toDisplayString(_ctx.playerStore.experience), 1)\n        ])\n      ])\n    ])\n  ]))\n}","<template>\n  <div class=\"player-dashboard\" style=\"border: 2px solid lightblue; position: relative; height: 50px; display: flex; align-items: center;\">\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">PlayerDashboard</div>\n    <div class=\"player-info\">\n      <div class=\"player-stats\" style=\"display: flex; gap: 20px;\">\n        <div class=\"stat\">\n          <span class=\"stat-label\">{{ character ? character.name : 'Character' }}:</span> \n          <span class=\"stat-value\">{{ playerStore.health }}/{{ playerStore.maxHealth }} HP</span>\n        </div>\n        <div class=\"stat\">\n          <span class=\"stat-label\">XP:</span> \n          <span class=\"stat-value\">{{ playerStore.experience }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\n\nexport default defineComponent({\n  name: 'PlayerDashboard',\n  \n  setup() {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    \n    const character = computed(() => {\n      if (!playerStore.characterId) return null;\n      return cardStore.getCharacterById(playerStore.characterId);\n    });\n    \n    return {\n      playerStore,\n      character\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.player-dashboard {\n  width: 100%;\n  padding: $spacing-xs;\n  background-color: rgba($light-color, 0.8);\n  border-radius: $border-radius-md;\n  box-shadow: 0 2px 4px rgba($dark-color, 0.2);\n  \n  .player-info {\n    margin-bottom: $spacing-xs;\n    \n    .player-stats {\n      display: flex;\n      flex-wrap: wrap;\n      gap: $spacing-xs;\n      margin-bottom: $spacing-xs;\n      \n      .stat {\n        padding: $spacing-xs $spacing-sm;\n        background-color: rgba($dark-color, 0.1);\n        border-radius: $border-radius-md;\n        \n        .stat-label {\n          font-weight: bold;\n          margin-right: $spacing-xs;\n        }\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./PlayerDashboard.vue?vue&type=template&id=7d10ee33&scoped=true&ts=true\"\nimport script from \"./PlayerDashboard.vue?vue&type=script&lang=ts\"\nexport * from \"./PlayerDashboard.vue?vue&type=script&lang=ts\"\n\nimport \"./PlayerDashboard.vue?vue&type=style&index=0&id=7d10ee33&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7d10ee33\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withModifiers as _withModifiers } from \"vue\"\n\nconst _hoisted_1 = { class: \"animal-companion-selection\" }\nconst _hoisted_2 = { class: \"animal-companion-selection__content\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_4 = {\n  key: 1,\n  class: \"companion-grid\"\n}\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = { class: \"companion-card__header\" }\nconst _hoisted_7 = { class: \"season-affinity\" }\nconst _hoisted_8 = { class: \"companion-card__body\" }\nconst _hoisted_9 = { class: \"companion-ability\" }\nconst _hoisted_10 = { class: \"companion-card__footer\" }\nconst _hoisted_11 = [\"onClick\", \"disabled\"]\nconst _hoisted_12 = {\n  key: 0,\n  class: \"bond-dialog-overlay\"\n}\nconst _hoisted_13 = { class: \"bond-dialog\" }\nconst _hoisted_14 = { class: \"bond-dialog__header\" }\nconst _hoisted_15 = { class: \"bond-dialog__content\" }\nconst _hoisted_16 = { class: \"resource-list\" }\nconst _hoisted_17 = [\"onClick\"]\nconst _hoisted_18 = { class: \"resource-description\" }\nconst _hoisted_19 = { class: \"bond-dialog__footer\" }\nconst _hoisted_20 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[5] || (_cache[5] = _createElementVNode(\"h2\", { class: \"animal-companion-selection__title\" }, \"Available Companions\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_ctx.availableCompanions.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[3] || (_cache[3] = [\n            _createElementVNode(\"p\", null, \"No animal companions are available in this area.\", -1),\n            _createElementVNode(\"p\", null, \"Continue your journey to find potential companions.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.availableCompanions, (companion) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: companion.id,\n                class: \"companion-card\",\n                onClick: ($event: any) => (_ctx.selectCompanion(companion.id))\n              }, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _createElementVNode(\"h3\", null, _toDisplayString(companion.name), 1),\n                  _createElementVNode(\"div\", _hoisted_7, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(companion.affinitySeasons, (season) => {\n                      return (_openBlock(), _createElementBlock(\"span\", {\n                        key: season,\n                        class: _normalizeClass([\"season-tag\", season.toLowerCase()])\n                      }, _toDisplayString(_ctx.formatSeasonName(season)), 3))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _createElementVNode(\"p\", null, _toDisplayString(companion.description), 1),\n                  _createElementVNode(\"div\", _hoisted_9, [\n                    _createElementVNode(\"h4\", null, _toDisplayString(companion.ability.name), 1),\n                    _createElementVNode(\"p\", null, _toDisplayString(companion.ability.description), 1)\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _createElementVNode(\"button\", {\n                    class: \"btn btn--primary\",\n                    onClick: _withModifiers(($event: any) => (_ctx.bondWithCompanion(companion.id)), [\"stop\"]),\n                    disabled: !_ctx.hasCompatibleResources(companion.id)\n                  }, \" Bond \", 8, _hoisted_11)\n                ])\n              ], 8, _hoisted_5))\n            }), 128))\n          ]))\n    ]),\n    (_ctx.showBondDialog)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n          _createElementVNode(\"div\", _hoisted_13, [\n            _createElementVNode(\"div\", _hoisted_14, [\n              _createElementVNode(\"h3\", null, \"Bond with \" + _toDisplayString(_ctx.selectedCompanionName), 1),\n              _createElementVNode(\"button\", {\n                class: \"close-btn\",\n                onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.closeBondDialog && _ctx.closeBondDialog(...args)))\n              }, \"×\")\n            ]),\n            _createElementVNode(\"div\", _hoisted_15, [\n              _cache[4] || (_cache[4] = _createElementVNode(\"p\", null, \"Select a resource to form a bond:\", -1)),\n              _createElementVNode(\"div\", _hoisted_16, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.compatibleResources, (resource) => {\n                  return (_openBlock(), _createElementBlock(\"div\", {\n                    key: resource.id,\n                    class: _normalizeClass([\"resource-item\", { 'selected': _ctx.selectedResource === resource.id }]),\n                    onClick: ($event: any) => (_ctx.selectedResource = resource.id)\n                  }, [\n                    _createElementVNode(\"span\", null, _toDisplayString(resource.name), 1),\n                    _createElementVNode(\"p\", _hoisted_18, _toDisplayString(resource.description), 1)\n                  ], 10, _hoisted_17))\n                }), 128))\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_19, [\n              _createElementVNode(\"button\", {\n                class: \"btn btn--primary\",\n                onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.confirmBond && _ctx.confirmBond(...args))),\n                disabled: !_ctx.selectedResource\n              }, \" Bond \", 8, _hoisted_20),\n              _createElementVNode(\"button\", {\n                class: \"btn btn--secondary\",\n                onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.closeBondDialog && _ctx.closeBondDialog(...args)))\n              }, \" Cancel \")\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div class=\"animal-companion-selection\">\n    <h2 class=\"animal-companion-selection__title\">Available Companions</h2>\n    \n    <div class=\"animal-companion-selection__content\">\n      <div v-if=\"availableCompanions.length === 0\" class=\"empty-state\">\n        <p>No animal companions are available in this area.</p>\n        <p>Continue your journey to find potential companions.</p>\n      </div>\n      \n      <div v-else class=\"companion-grid\">\n        <div \n          v-for=\"companion in availableCompanions\" \n          :key=\"companion.id\"\n          class=\"companion-card\"\n          @click=\"selectCompanion(companion.id)\"\n        >\n          <div class=\"companion-card__header\">\n            <h3>{{ companion.name }}</h3>\n            <div class=\"season-affinity\">\n              <span \n                v-for=\"season in companion.affinitySeasons\" \n                :key=\"season\"\n                class=\"season-tag\"\n                :class=\"season.toLowerCase()\"\n              >\n                {{ formatSeasonName(season) }}\n              </span>\n            </div>\n          </div>\n          \n          <div class=\"companion-card__body\">\n            <p>{{ companion.description }}</p>\n            <div class=\"companion-ability\">\n              <h4>{{ companion.ability.name }}</h4>\n              <p>{{ companion.ability.description }}</p>\n            </div>\n          </div>\n          \n          <div class=\"companion-card__footer\">\n            <button \n              class=\"btn btn--primary\"\n              @click.stop=\"bondWithCompanion(companion.id)\"\n              :disabled=\"!hasCompatibleResources(companion.id)\"\n            >\n              Bond\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Bond Dialog -->\n    <div class=\"bond-dialog-overlay\" v-if=\"showBondDialog\">\n      <div class=\"bond-dialog\">\n        <div class=\"bond-dialog__header\">\n          <h3>Bond with {{ selectedCompanionName }}</h3>\n          <button class=\"close-btn\" @click=\"closeBondDialog\">&times;</button>\n        </div>\n        \n        <div class=\"bond-dialog__content\">\n          <p>Select a resource to form a bond:</p>\n          \n          <div class=\"resource-list\">\n            <div \n              v-for=\"resource in compatibleResources\" \n              :key=\"resource.id\"\n              class=\"resource-item\"\n              :class=\"{ 'selected': selectedResource === resource.id }\"\n              @click=\"selectedResource = resource.id\"\n            >\n              <span>{{ resource.name }}</span>\n              <p class=\"resource-description\">{{ resource.description }}</p>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"bond-dialog__footer\">\n          <button \n            class=\"btn btn--primary\" \n            @click=\"confirmBond\"\n            :disabled=\"!selectedResource\"\n          >\n            Bond\n          </button>\n          <button class=\"btn btn--secondary\" @click=\"closeBondDialog\">\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted } from 'vue';\nimport { useCardStore, usePlayerStore, useGameStore } from '@/stores';\nimport { companionService } from '@/services/companionService';\nimport { Season } from '@/models/enums/seasons';\n\nexport default defineComponent({\n  name: 'AnimalCompanionSelection',\n  emits: ['select-companion'],\n  setup(props, { emit }) {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n    \n    // Format season name for display\n    const formatSeasonName = (season: Season): string => {\n      return season.replace('_', ' ').split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ');\n    };\n    \n    // Get available companions for current location\n    const availableCompanions = computed(() => {\n      // Get current location ID and season\n      const locationId = gameStore.currentLandscapeId;\n      \n      if (!locationId) {\n        return [];\n      }\n      \n      // Define which companions are available at which landscapes (based on game rules)\n      const landscapeCompanions: { [key: string]: string[] } = {\n        'sacred_oak_grove': ['wolf', 'deer', 'bear', 'boar'],\n        'faerie_knoll': ['fox', 'hare'],\n        'moonlit_loch': ['salmon', 'owl'],\n        'whispering_heath': ['raven'],\n        'wild_horse_plain': ['horse']\n      };\n      \n      // Check if current landscape has any companions available\n      if (!landscapeCompanions[locationId]) {\n        return []; // No companions available at this landscape\n      }\n      \n      // Get the companion IDs available at this landscape\n      const availableCompanionTypes = landscapeCompanions[locationId];\n      \n      // Get companions that match the location and the player doesn't already have\n      return cardStore.animalCompanions.filter(companion => {\n        // Skip companions the player already has\n        if (playerStore.animalCompanions.includes(companion.id)) {\n          return false;\n        }\n        \n        // Check if companion type is available at this landscape\n        // Assuming companion IDs contain the animal type (e.g., \"wolf_companion\")\n        const companionType = companion.id.split('_')[0].toLowerCase();\n        return availableCompanionTypes.includes(companionType);\n      });\n    });\n    \n    // Bond dialog state\n    const showBondDialog = ref(false);\n    const selectedCompanion = ref('');\n    const selectedResource = ref('');\n    \n    // Select a random companion on component mount\n    onMounted(() => {\n      const randomCompanionId = companionService.selectRandomCompanion();\n      if (randomCompanionId) {\n        selectedCompanion.value = randomCompanionId;\n        // Auto-open bond dialog if we have compatible resources\n        if (hasCompatibleResources(randomCompanionId)) {\n          bondWithCompanion(randomCompanionId);\n        }\n      }\n    });\n    \n    // Get companion name for display\n    const selectedCompanionName = computed(() => {\n      const companion = cardStore.getCompanionById(selectedCompanion.value);\n      return companion ? companion.name : '';\n    });\n    \n    // Get compatible resources for the selected companion\n    const compatibleResources = computed(() => {\n      if (!selectedCompanion.value) return [];\n      \n      return playerStore.resources\n        .filter(resourceId => \n          companionService.isResourceSuitableForBonding(resourceId, selectedCompanion.value)\n        )\n        .map(resourceId => cardStore.getResourceById(resourceId))\n        .filter(resource => resource !== undefined) as any[];\n    });\n    \n    // Check if player has compatible resources for a companion\n    const hasCompatibleResources = (companionId: string): boolean => {\n      return playerStore.resources.some(resourceId => \n        companionService.isResourceSuitableForBonding(resourceId, companionId)\n      );\n    };\n    \n    // Select a companion for detail view\n    const selectCompanion = (companionId: string) => {\n      emit('select-companion', companionId);\n    };\n    \n    // Open bond dialog\n    const bondWithCompanion = (companionId: string) => {\n      selectedCompanion.value = companionId;\n      const resources = playerStore.resources.filter(resourceId => \n        companionService.isResourceSuitableForBonding(resourceId, companionId)\n      );\n      \n      if (resources.length > 0) {\n        selectedResource.value = resources[0];\n        showBondDialog.value = true;\n      } else {\n        gameStore.addToGameLog('No compatible resources available for bonding with this companion.');\n      }\n    };\n    \n    // Close bond dialog\n    const closeBondDialog = () => {\n      showBondDialog.value = false;\n      selectedResource.value = '';\n    };\n    \n    // Confirm bonding with companion\n    const confirmBond = () => {\n      if (!selectedCompanion.value || !selectedResource.value) {\n        closeBondDialog();\n        return;\n      }\n      \n      const success = companionService.bondWithCompanion(\n        selectedCompanion.value,\n        selectedResource.value\n      );\n      \n      if (success) {\n        const companion = cardStore.getCompanionById(selectedCompanion.value);\n        gameStore.addToGameLog(\n          `You've bonded with ${companion?.name}!`,\n          true,\n          'companion'\n        );\n        \n        // After bonding, select this companion\n        selectCompanion(selectedCompanion.value);\n      } else {\n        gameStore.addToGameLog('Failed to bond with the companion.');\n      }\n      \n      closeBondDialog();\n    };\n    \n    return {\n      formatSeasonName,\n      availableCompanions,\n      showBondDialog,\n      selectedCompanion,\n      selectedResource,\n      selectedCompanionName,\n      compatibleResources,\n      hasCompatibleResources,\n      selectCompanion,\n      bondWithCompanion,\n      closeBondDialog,\n      confirmBond\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.animal-companion-selection {\n  &__title {\n    margin-bottom: $spacing-md;\n    color: $primary-color;\n  }\n  \n  &__content {\n    margin-bottom: $spacing-lg;\n  }\n}\n\n.empty-state {\n  font-style: italic;\n  color: rgba($dark-color, 0.6);\n  padding: $spacing-md;\n  background-color: rgba($light-color, 0.5);\n  border-radius: $border-radius-md;\n  text-align: center;\n}\n\n.companion-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: $spacing-md;\n}\n\n.companion-card {\n  background-color: $light-color;\n  border: 2px solid $border-color;\n  border-radius: $border-radius-md;\n  box-shadow: $shadow-sm;\n  padding: $spacing-md;\n  transition: all $transition-normal;\n  position: relative;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  \n  // Card appearance\n  background-image: linear-gradient(to bottom, rgba(255,255,255,0.8) 0%, rgba(240,240,240,0.2) 100%);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 3px;\n    left: 3px;\n    right: 3px;\n    bottom: 3px;\n    border: 1px solid rgba(255,255,255,0.6);\n    border-radius: calc($border-radius-md - 3px);\n    pointer-events: none;\n  }\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: $shadow-md;\n  }\n  \n  &__header {\n    margin-bottom: $spacing-md;\n    \n    h3 {\n      margin: 0 0 $spacing-sm 0;\n      color: $primary-color;\n    }\n  }\n  \n  &__body {\n    flex: 1;\n    \n    p {\n      margin-bottom: $spacing-md;\n    }\n    \n    .companion-ability {\n      margin-top: $spacing-md;\n      padding-top: $spacing-md;\n      border-top: 1px solid rgba($dark-color, 0.1);\n      \n      h4 {\n        margin: 0 0 $spacing-xs 0;\n        font-size: $font-size-md;\n      }\n      \n      p {\n        font-size: $font-size-sm;\n        color: rgba($dark-color, 0.7);\n        margin-bottom: 0;\n      }\n    }\n  }\n  \n  &__footer {\n    margin-top: $spacing-md;\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n\n.season-affinity {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $spacing-xs;\n  margin-top: $spacing-xs;\n}\n\n.season-tag {\n  font-size: $font-size-xs;\n  padding: $spacing-xs $spacing-sm;\n  border-radius: $border-radius-md;\n  color: $light-color;\n  \n  &.spring {\n    background-color: #7cb342;\n  }\n  \n  &.summer {\n    background-color: #f9a825;\n  }\n  \n  &.fall, &.autumn {\n    background-color: #ef6c00;\n  }\n  \n  &.winter {\n    background-color: #42a5f5;\n  }\n}\n\n.bond-dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba($dark-color, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.bond-dialog {\n  background-color: white;\n  padding: $spacing-lg;\n  border-radius: $border-radius-md;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  \n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: $spacing-md;\n    \n    h3 {\n      margin-top: 0;\n    }\n    \n    .close-btn {\n      font-size: 1.5rem;\n      cursor: pointer;\n    }\n  }\n  \n  &__content {\n    margin-bottom: $spacing-md;\n  }\n  \n  &__footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: $spacing-sm;\n  }\n}\n\n.resource-list {\n  display: flex;\n  flex-direction: column;\n  gap: $spacing-sm;\n  margin-top: $spacing-sm;\n}\n\n.resource-item {\n  padding: $spacing-sm;\n  border: 1px solid $border-color;\n  border-radius: $border-radius-md;\n  cursor: pointer;\n  transition: all $transition-normal;\n  \n  span {\n    display: block;\n    font-weight: bold;\n    margin-bottom: $spacing-xs;\n  }\n  \n  .resource-description {\n    font-size: $font-size-xs;\n    color: rgba($dark-color, 0.7);\n    margin: 0;\n  }\n  \n  &:hover {\n    border-color: $accent-color;\n    background-color: rgba($accent-color, 0.1);\n  }\n  \n  &.selected {\n    border-color: $accent-color;\n    background-color: rgba($accent-color, 0.2);\n  }\n}\n</style>\n","/**\n * Companion Service\n * Handles animal companion bonding and management\n */\nimport { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { CompanionState } from '@/models/types/player';\n\nclass CompanionService {\n  /**\n   * Bond with a new companion\n   * @param companionId The ID of the companion to bond with\n   * @param resourceId The ID of the resource used for bonding\n   * @returns True if bonding was successful\n   */\n  bondWithCompanion(companionId: string, resourceId: string): boolean {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    \n    // Check if player already has this companion\n    if (playerStore.animalCompanions.includes(companionId)) {\n      return false;\n    }\n    \n    // Get companion card\n    const companion = cardStore.getCompanionById(companionId);\n    if (!companion) {\n      return false;\n    }\n    \n    // Check if resource is appropriate for bonding\n    if (!this.isResourceSuitableForBonding(resourceId, companionId)) {\n      return false;\n    }\n    \n    // Use the resource\n    if (!playerStore.removeResource(resourceId)) {\n      return false;\n    }\n    \n    // Add companion to player\n    playerStore.addCompanion(companionId);\n    \n    // Apply bonding effects\n    this.applyBondingEffects(companionId);\n    \n    return true;\n  }\n  \n  /**\n   * Check if a resource is suitable for bonding with a companion\n   * @param resourceId The ID of the resource\n   * @param companionId The ID of the companion\n   * @returns True if the resource is suitable\n   */\n  isResourceSuitableForBonding(resourceId: string, companionId: string): boolean {\n    const cardStore = useCardStore();\n    \n    const resource = cardStore.getResourceById(resourceId);\n    const companion = cardStore.getCompanionById(companionId);\n    \n    if (!resource || !companion) {\n      return false;\n    }\n    \n    // Check if resource is in companion's preferred resources\n    return companion.preferredResources && companion.preferredResources.includes(resourceId);\n  }\n  \n  /**\n   * Feed a companion to maintain loyalty\n   * @param companionId The ID of the companion to feed\n   * @param resourceId The ID of the resource to use\n   * @returns True if feeding was successful\n   */\n  feedCompanion(companionId: string, resourceId: string): boolean {\n    const playerStore = usePlayerStore();\n    \n    // Check if player has this companion\n    if (!playerStore.animalCompanions.includes(companionId)) {\n      return false;\n    }\n    \n    // Check if resource is suitable\n    if (!this.isResourceSuitableForBonding(resourceId, companionId)) {\n      return false;\n    }\n    \n    // Use the resource\n    if (!playerStore.removeResource(resourceId)) {\n      return false;\n    }\n    \n    // Increase companion loyalty\n    this.increaseLoyalty(companionId);\n    \n    return true;\n  }\n  \n  /**\n   * Get the current loyalty level of a companion\n   * @param companionId The ID of the companion\n   * @returns The loyalty level (0-5) or -1 if not found\n   */\n  getLoyalty(companionId: string): number {\n    const playerStore = usePlayerStore();\n    \n    // Check if the companion exists\n    if (!playerStore.animalCompanions.includes(companionId)) {\n      return 0;\n    }\n\n    // Get loyalty from player state\n    const status = playerStore.companionLoyalty[companionId];\n    return status && typeof status === 'object' && 'loyalty' in status ? status.loyalty : 0;\n  }\n  \n  /**\n   * Increase companion loyalty\n   * @param companionId Companion identifier\n   * @returns New loyalty level\n   */\n  increaseLoyalty(companionId: string): number {\n    const playerStore = usePlayerStore();\n    \n    // Check if the companion exists\n    if (!playerStore.animalCompanions.includes(companionId)) {\n      return 0;\n    }\n\n    // Get current loyalty\n    const status = playerStore.companionLoyalty[companionId];\n    const currentLoyalty = status && typeof status === 'object' && 'loyalty' in status ? status.loyalty : 0;\n\n    // Max loyalty is 5\n    const newLoyalty = Math.min(currentLoyalty + 1, 5);\n\n    // Update loyalty\n    playerStore.setCompanionLoyalty(companionId, newLoyalty);\n\n    // Apply loyalty effects\n    this.applyLoyaltyEffects(companionId, newLoyalty);\n    \n    return newLoyalty;\n  }\n  \n  /**\n   * Decrease companion loyalty (e.g., when not fed)\n   * @param companionId Companion identifier\n   * @returns New loyalty level\n   */\n  decreaseLoyalty(companionId: string): number {\n    const playerStore = usePlayerStore();\n    \n    // Check if the companion exists\n    if (!playerStore.animalCompanions.includes(companionId)) {\n      return 0;\n    }\n\n    // Get current loyalty\n    const status = playerStore.companionLoyalty[companionId];\n    const currentLoyalty = status && typeof status === 'object' && 'loyalty' in status ? status.loyalty : 0;\n\n    // Min loyalty is 0\n    const newLoyalty = Math.max(currentLoyalty - 1, 0);\n\n    // Update loyalty\n    playerStore.setCompanionLoyalty(companionId, newLoyalty);\n\n    // If loyalty reaches 0, companion leaves\n    if (newLoyalty === 0) {\n      playerStore.removeCompanion(companionId);\n      return -1;\n    }\n    \n    // Apply loyalty effects\n    this.applyLoyaltyEffects(companionId, newLoyalty);\n    \n    return newLoyalty;\n  }\n  \n  /**\n   * Get companions that provide bonuses for a specific challenge type\n   * @param challengeType The type of challenge\n   * @returns Array of companion IDs that provide bonuses\n   */\n  getCompanionsForChallengeType(challengeType: string): string[] {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    \n    return playerStore.animalCompanions.filter(companionId => {\n      const companion = cardStore.getCompanionById(companionId);\n      return companion && \n             companion.challengeBonuses && \n             companion.challengeBonuses[challengeType] > 0;\n    });\n  }\n  \n  /**\n   * Select a random companion from the available ones for the current landscape\n   * @returns A random companion ID or empty string if none available\n   */\n  selectRandomCompanion(): string {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n\n    // Get current location ID and season\n    const locationId = gameStore.currentLandscapeId;\n    const currentSeason = gameStore.currentSeason;\n    \n    if (!locationId || !currentSeason) {\n      return '';\n    }\n    \n    // Define which companions are available at which landscapes\n    const landscapeCompanions: { [key: string]: string[] } = {\n      'sacred_oak_grove': ['wolf', 'deer', 'bear', 'boar'],\n      'faerie_knoll': ['fox', 'hare'],\n      'moonlit_loch': ['salmon', 'owl'],\n      'whispering_heath': ['raven'],\n      'wild_horse_plain': ['horse']\n    };\n    \n    // Check if current landscape has any companions available\n    if (!landscapeCompanions[locationId]) {\n      return ''; // No companions available at this landscape\n    }\n    \n    // Get the companion IDs available at this landscape\n    const availableCompanionTypes = landscapeCompanions[locationId];\n    \n    // Get companions that match the landscape and the player doesn't already have\n    const availableCompanions = cardStore.animalCompanions.filter(companion => {\n      // Skip companions the player already has\n      if (playerStore.animalCompanions.includes(companion.id)) {\n        return false;\n      }\n      \n      // Check if companion type is available at this landscape\n      // Assuming companion IDs contain the animal type (e.g., \"wolf_companion\")\n      const companionType = companion.id.split('_')[0].toLowerCase();\n      return availableCompanionTypes.includes(companionType);\n    });\n    \n    // Return a random companion ID or empty string if none available\n    return availableCompanions.length > 0 \n      ? availableCompanions[Math.floor(Math.random() * availableCompanions.length)].id \n      : '';\n  }\n\n  /**\n   * Check if a companion is in a wary state\n   * @param companionId The ID of the companion\n   * @returns True if the companion is wary\n   */\n  isCompanionWary(companionId: string): boolean {\n    const playerStore = usePlayerStore();\n    \n    // Check if the companion exists\n    if (!playerStore.animalCompanions.includes(companionId)) {\n      return false;\n    }\n\n    // Get companion state\n    const status = playerStore.companionLoyalty[companionId];\n    return status && \n           typeof status === 'object' && \n           'state' in status && \n           status.state === CompanionState.WARY;\n  }\n  \n  /**\n   * Apply effects when bonding with a companion\n   * @param companionId The ID of the companion\n   */\n  private applyBondingEffects(companionId: string): void {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    \n    const companion = cardStore.getCompanionById(companionId);\n    if (!companion || !companion.bondingEffect) {\n      return;\n    }\n    \n    // Apply bonding effect\n    companion.bondingEffect(playerStore);\n  }\n  \n  /**\n   * Apply effects based on companion loyalty level\n   * @param companionId The ID of the companion\n   * @param loyaltyLevel The loyalty level\n   */\n  private applyLoyaltyEffects(companionId: string, loyaltyLevel: number): void {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    \n    const companion = cardStore.getCompanionById(companionId);\n    if (!companion || !companion.loyaltyEffects) {\n      return;\n    }\n    \n    // Apply loyalty effect for this level\n    const effect = companion.loyaltyEffects[loyaltyLevel];\n    if (effect) {\n      effect(playerStore);\n    }\n  }\n}\n\nexport const companionService = new CompanionService();\n","import { render } from \"./AnimalCompanionSelection.vue?vue&type=template&id=26ff0409&scoped=true&ts=true\"\nimport script from \"./AnimalCompanionSelection.vue?vue&type=script&lang=ts\"\nexport * from \"./AnimalCompanionSelection.vue?vue&type=script&lang=ts\"\n\nimport \"./AnimalCompanionSelection.vue?vue&type=style&index=0&id=26ff0409&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-26ff0409\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withModifiers as _withModifiers } from \"vue\"\n\nconst _hoisted_1 = { class: \"companion-management\" }\nconst _hoisted_2 = { class: \"companion-management__content\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_4 = {\n  key: 1,\n  class: \"companion-cards\"\n}\nconst _hoisted_5 = { class: \"available-companions\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_7 = {\n  key: 1,\n  class: \"companion-cards\"\n}\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = { class: \"available-companion-card__header\" }\nconst _hoisted_10 = { class: \"available-companion-card__content\" }\nconst _hoisted_11 = { class: \"companion-ability mt-2\" }\nconst _hoisted_12 = { class: \"ability-description\" }\nconst _hoisted_13 = { class: \"companion-seasons mt-2\" }\nconst _hoisted_14 = { class: \"season-tags\" }\nconst _hoisted_15 = { class: \"available-companion-card__footer\" }\nconst _hoisted_16 = [\"onClick\", \"disabled\"]\nconst _hoisted_17 = {\n  key: 0,\n  class: \"feed-dialog-overlay\"\n}\nconst _hoisted_18 = { class: \"feed-dialog\" }\nconst _hoisted_19 = { class: \"feed-dialog__header\" }\nconst _hoisted_20 = { class: \"feed-dialog__content\" }\nconst _hoisted_21 = { class: \"resource-list\" }\nconst _hoisted_22 = [\"onClick\"]\nconst _hoisted_23 = { class: \"feed-dialog__footer\" }\nconst _hoisted_24 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_CompanionCard = _resolveComponent(\"CompanionCard\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[7] || (_cache[7] = _createElementVNode(\"div\", { class: \"companion-management__header\" }, [\n      _createElementVNode(\"h2\", { class: \"companion-management__title\" }, \"Animal Companions\")\n    ], -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_ctx.playerCompanions.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[3] || (_cache[3] = [\n            _createElementVNode(\"p\", null, \"You haven't bonded with any animal companions yet.\", -1),\n            _createElementVNode(\"p\", null, \"Find a suitable companion and use a resource to form a bond.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.playerCompanions, (companionId) => {\n              return (_openBlock(), _createBlock(_component_CompanionCard, {\n                key: companionId,\n                companionId: companionId,\n                abilityUsed: _ctx.usedCompanionAbilities.includes(companionId),\n                canFeed: _ctx.hasCompatibleResources(companionId),\n                onSelect: _ctx.selectCompanion,\n                onFeed: _ctx.openFeedDialog,\n                onUseAbility: _ctx.useCompanionAbility\n              }, null, 8, [\"companionId\", \"abilityUsed\", \"canFeed\", \"onSelect\", \"onFeed\", \"onUseAbility\"]))\n            }), 128))\n          ]))\n    ]),\n    _cache[8] || (_cache[8] = _createElementVNode(\"h3\", { class: \"mt-4\" }, \"Available Companions\", -1)),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_ctx.availableCompanions.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[4] || (_cache[4] = [\n            _createElementVNode(\"p\", null, \"No companions are available in this area.\", -1),\n            _createElementVNode(\"p\", null, \"Continue exploring to find potential companions.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.availableCompanions, (companion) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: companion.id,\n                class: \"available-companion-card\",\n                onClick: ($event: any) => (_ctx.selectAvailableCompanion(companion.id))\n              }, [\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createElementVNode(\"h4\", null, _toDisplayString(companion.name), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _createElementVNode(\"p\", null, _toDisplayString(companion.description), 1),\n                  _createElementVNode(\"div\", _hoisted_11, [\n                    _createElementVNode(\"h5\", null, _toDisplayString(companion.ability.name), 1),\n                    _createElementVNode(\"p\", _hoisted_12, _toDisplayString(companion.ability.description), 1)\n                  ]),\n                  _createElementVNode(\"div\", _hoisted_13, [\n                    _cache[5] || (_cache[5] = _createElementVNode(\"h5\", null, \"Seasonal Affinity\", -1)),\n                    _createElementVNode(\"div\", _hoisted_14, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(companion.affinitySeasons, (season) => {\n                        return (_openBlock(), _createElementBlock(\"span\", {\n                          key: season,\n                          class: _normalizeClass([\"season-tag\", season.toLowerCase()])\n                        }, _toDisplayString(_ctx.formatSeasonName(season)), 3))\n                      }), 128))\n                    ])\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_15, [\n                  _createElementVNode(\"button\", {\n                    class: \"btn btn--primary\",\n                    onClick: _withModifiers(($event: any) => (_ctx.openBondDialog(companion.id)), [\"stop\"]),\n                    disabled: !_ctx.hasResourcesForBonding(companion.id)\n                  }, \" Bond \", 8, _hoisted_16)\n                ])\n              ], 8, _hoisted_8))\n            }), 128))\n          ]))\n    ]),\n    (_ctx.showBondDialog)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n          _createElementVNode(\"div\", _hoisted_18, [\n            _createElementVNode(\"div\", _hoisted_19, [\n              _createElementVNode(\"h3\", null, \"Bond with \" + _toDisplayString(_ctx.selectedCompanionName), 1),\n              _createElementVNode(\"button\", {\n                class: \"close-btn\",\n                onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.closeBondDialog && _ctx.closeBondDialog(...args)))\n              }, \"×\")\n            ]),\n            _createElementVNode(\"div\", _hoisted_20, [\n              _cache[6] || (_cache[6] = _createElementVNode(\"p\", null, \"Select a resource to form a bond:\", -1)),\n              _createElementVNode(\"div\", _hoisted_21, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.compatibleResources, (resource) => {\n                  return (_openBlock(), _createElementBlock(\"div\", {\n                    key: resource.id,\n                    class: _normalizeClass([\"resource-item\", { 'selected': _ctx.selectedResource === resource.id }]),\n                    onClick: ($event: any) => (_ctx.selectedResource = resource.id)\n                  }, [\n                    _createElementVNode(\"span\", null, _toDisplayString(resource.name), 1)\n                  ], 10, _hoisted_22))\n                }), 128))\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_23, [\n              _createElementVNode(\"button\", {\n                class: \"btn btn--primary\",\n                onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.bondWithCompanion && _ctx.bondWithCompanion(...args))),\n                disabled: !_ctx.selectedResource\n              }, \" Bond \", 8, _hoisted_24),\n              _createElementVNode(\"button\", {\n                class: \"btn btn--secondary\",\n                onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.closeBondDialog && _ctx.closeBondDialog(...args)))\n              }, \" Cancel \")\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div class=\"companion-management\">\n    <div class=\"companion-management__header\">\n      <h2 class=\"companion-management__title\">Animal Companions</h2>\n    </div>\n    \n    <div class=\"companion-management__content\">\n      <div v-if=\"playerCompanions.length === 0\" class=\"empty-state\">\n        <p>You haven't bonded with any animal companions yet.</p>\n        <p>Find a suitable companion and use a resource to form a bond.</p>\n      </div>\n      \n      <div v-else class=\"companion-cards\">\n        <CompanionCard\n          v-for=\"companionId in playerCompanions\"\n          :key=\"companionId\"\n          :companionId=\"companionId\"\n          :abilityUsed=\"usedCompanionAbilities.includes(companionId)\"\n          :canFeed=\"hasCompatibleResources(companionId)\"\n          @select=\"selectCompanion\"\n          @feed=\"openFeedDialog\"\n          @use-ability=\"useCompanionAbility\"\n        />\n      </div>\n    </div>\n    \n    <h3 class=\"mt-4\">Available Companions</h3>\n    <div class=\"available-companions\">\n      <div v-if=\"availableCompanions.length === 0\" class=\"empty-state\">\n        <p>No companions are available in this area.</p>\n        <p>Continue exploring to find potential companions.</p>\n      </div>\n      \n      <div v-else class=\"companion-cards\">\n        <div\n          v-for=\"companion in availableCompanions\"\n          :key=\"companion.id\"\n          class=\"available-companion-card\"\n          @click=\"selectAvailableCompanion(companion.id)\"\n        >\n          <div class=\"available-companion-card__header\">\n            <h4>{{ companion.name }}</h4>\n          </div>\n          <div class=\"available-companion-card__content\">\n            <p>{{ companion.description }}</p>\n            <div class=\"companion-ability mt-2\">\n              <h5>{{ companion.ability.name }}</h5>\n              <p class=\"ability-description\">{{ companion.ability.description }}</p>\n            </div>\n            <div class=\"companion-seasons mt-2\">\n              <h5>Seasonal Affinity</h5>\n              <div class=\"season-tags\">\n                <span\n                  v-for=\"season in companion.affinitySeasons\"\n                  :key=\"season\"\n                  class=\"season-tag\"\n                  :class=\"season.toLowerCase()\"\n                >\n                  {{ formatSeasonName(season) }}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"available-companion-card__footer\">\n            <button \n              class=\"btn btn--primary\"\n              @click.stop=\"openBondDialog(companion.id)\"\n              :disabled=\"!hasResourcesForBonding(companion.id)\"\n            >\n              Bond\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Bond Dialog -->\n    <div class=\"feed-dialog-overlay\" v-if=\"showBondDialog\">\n      <div class=\"feed-dialog\">\n        <div class=\"feed-dialog__header\">\n          <h3>Bond with {{ selectedCompanionName }}</h3>\n          <button class=\"close-btn\" @click=\"closeBondDialog\">&times;</button>\n        </div>\n        \n        <div class=\"feed-dialog__content\">\n          <p>Select a resource to form a bond:</p>\n          \n          <div class=\"resource-list\">\n            <div \n              v-for=\"resource in compatibleResources\" \n              :key=\"resource.id\"\n              class=\"resource-item\"\n              :class=\"{ 'selected': selectedResource === resource.id }\"\n              @click=\"selectedResource = resource.id\"\n            >\n              <span>{{ resource.name }}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"feed-dialog__footer\">\n          <button \n            class=\"btn btn--primary\" \n            @click=\"bondWithCompanion\"\n            :disabled=\"!selectedResource\"\n          >\n            Bond\n          </button>\n          <button class=\"btn btn--secondary\" @click=\"closeBondDialog\">\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue';\nimport { useCardStore, usePlayerStore, useGameStore } from '@/stores';\nimport { companionService } from '@/services/companionService';\nimport CompanionCard from './CompanionCard.vue';\nimport { Season } from '@/models/enums/seasons';\n\nexport default defineComponent({\n  name: 'CompanionManagement',\n  components: {\n    CompanionCard\n  },\n  emits: ['close'],\n  setup(props, { emit }) {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n    \n    // Player companions\n    const playerCompanions = computed(() => playerStore.animalCompanions);\n    \n    // Available companions for bonding\n    const availableCompanions = computed(() => {\n      const allCompanions = cardStore.animalCompanions;\n      return allCompanions.filter(companion => \n        !playerCompanions.value.includes(companion.id) &&\n        isCompanionAvailableInSeason(companion)\n      );\n    });\n    \n    // Check if companion is available in current season\n    const isCompanionAvailableInSeason = (companion: any) => {\n      const currentSeason = gameStore.currentSeason;\n      return companion.affinitySeasons && companion.affinitySeasons.includes(currentSeason);\n    };\n    \n    // Format season name for display\n    const formatSeasonName = (season: Season) => {\n      return season.replace('_', ' ').split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ');\n    };\n    \n    // Tracking used abilities\n    const usedCompanionAbilities = ref<string[]>([]);\n    \n    // Selection state\n    const selectedCompanion = ref('');\n    const selectedAvailableCompanion = ref('');\n    \n    // Bond dialog state\n    const showBondDialog = ref(false);\n    const selectedResource = ref('');\n    \n    // Get resources compatible with a companion\n    const getCompatibleResources = (companionId: string) => {\n      return playerStore.resources.filter(resourceId => \n        companionService.isResourceSuitableForBonding(resourceId, companionId)\n      );\n    };\n    \n    // Check if player has compatible resources for a companion\n    const hasCompatibleResources = (companionId: string) => {\n      return getCompatibleResources(companionId).length > 0;\n    };\n    \n    // Check if player has resources for bonding with a companion\n    const hasResourcesForBonding = (companionId: string) => {\n      return playerStore.resources.some(resourceId => \n        companionService.isResourceSuitableForBonding(resourceId, companionId)\n      );\n    };\n    \n    // Get companion name\n    const selectedCompanionName = computed(() => {\n      const companion = cardStore.getCompanionById(selectedAvailableCompanion.value);\n      return companion ? companion.name : '';\n    });\n    \n    // Get compatible resources for the selected companion\n    const compatibleResources = computed(() => {\n      if (!selectedAvailableCompanion.value) return [];\n      \n      return playerStore.resources\n        .filter(resourceId => \n          companionService.isResourceSuitableForBonding(resourceId, selectedAvailableCompanion.value)\n        )\n        .map(resourceId => cardStore.getResourceById(resourceId))\n        .filter(resource => resource !== undefined) as any[];\n    });\n    \n    // Select a companion\n    const selectCompanion = (companionId: string) => {\n      selectedCompanion.value = companionId;\n    };\n    \n    // Select an available companion\n    const selectAvailableCompanion = (companionId: string) => {\n      selectedAvailableCompanion.value = companionId;\n    };\n    \n    // Open bond dialog\n    const openBondDialog = (companionId: string) => {\n      selectedAvailableCompanion.value = companionId;\n      const resources = getCompatibleResources(companionId);\n      \n      if (resources.length > 0) {\n        selectedResource.value = resources[0];\n        showBondDialog.value = true;\n      } else {\n        gameStore.addToGameLog('No compatible resources for bonding with this companion.');\n      }\n    };\n    \n    // Close bond dialog\n    const closeBondDialog = () => {\n      showBondDialog.value = false;\n      selectedResource.value = '';\n    };\n    \n    // Bond with a companion\n    const bondWithCompanion = () => {\n      if (!selectedAvailableCompanion.value || !selectedResource.value) {\n        closeBondDialog();\n        return;\n      }\n      \n      const success = companionService.bondWithCompanion(\n        selectedAvailableCompanion.value,\n        selectedResource.value\n      );\n      \n      if (success) {\n        const companion = cardStore.getCompanionById(selectedAvailableCompanion.value);\n        gameStore.addToGameLog(\n          `You've formed a bond with ${companion?.name}!`,\n          true,\n          'companion'\n        );\n      } else {\n        gameStore.addToGameLog('Failed to bond with the companion.');\n      }\n      \n      closeBondDialog();\n    };\n    \n    // Use companion ability\n    const useCompanionAbility = (companionId: string) => {\n      if (usedCompanionAbilities.value.includes(companionId)) {\n        return;\n      }\n      \n      const success = playerStore.useCompanionAbility(companionId);\n      \n      if (success) {\n        usedCompanionAbilities.value.push(companionId);\n        \n        const companion = cardStore.getCompanionById(companionId);\n        gameStore.addToGameLog(\n          `You used ${companion?.name}'s ability: ${companion?.ability.name}`,\n          true,\n          'companion'\n        );\n      } else {\n        gameStore.addToGameLog('You cannot use this companion\\'s ability right now.');\n      }\n    };\n    \n    // Reset used abilities when turn changes\n    gameStore.$subscribe((_, state) => {\n      if (state.currentTurn > 0) {\n        usedCompanionAbilities.value = [];\n      }\n    });\n    \n    // Open feed dialog - passes to CompanionCard\n    const openFeedDialog = (companionId: string) => {\n      console.log(`Open feed dialog for companion ${companionId}`);\n      // Handled by CompanionCard component\n    };\n    \n    // Emit close event to parent\n    const emitClose = () => {\n      emit('close');\n    };\n    \n    return {\n      playerCompanions,\n      availableCompanions,\n      usedCompanionAbilities,\n      selectedCompanion,\n      showBondDialog,\n      selectedResource,\n      selectedCompanionName,\n      compatibleResources,\n      selectCompanion,\n      selectAvailableCompanion,\n      openBondDialog,\n      closeBondDialog,\n      bondWithCompanion,\n      useCompanionAbility,\n      hasCompatibleResources,\n      hasResourcesForBonding,\n      formatSeasonName,\n      openFeedDialog,\n      emitClose\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.companion-management {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: $spacing-md;\n  }\n  \n  &__title {\n    margin: 0;\n    color: $primary-color;\n  }\n  \n  &__content {\n    margin-bottom: $spacing-lg;\n  }\n}\n\n.empty-state {\n  font-style: italic;\n  color: rgba($dark-color, 0.6);\n  padding: $spacing-md;\n  background-color: rgba($light-color, 0.5);\n  border-radius: $border-radius-md;\n  text-align: center;\n}\n\n.companion-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: $spacing-md;\n  margin-top: $spacing-sm;\n}\n\n.available-companion-card {\n  background-color: $light-color;\n  border: 2px solid $border-color;\n  border-radius: $border-radius-md;\n  box-shadow: $shadow-sm;\n  padding: $spacing-sm;\n  cursor: pointer;\n  transition: all $transition-normal;\n  position: relative;\n  min-height: 180px;\n  \n  // Card appearance\n  background-image: linear-gradient(to bottom, rgba(255,255,255,0.8) 0%, rgba(240,240,240,0.2) 100%);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 3px;\n    left: 3px;\n    right: 3px;\n    bottom: 3px;\n    border: 1px solid rgba(255,255,255,0.6);\n    border-radius: calc($border-radius-md - 3px);\n    pointer-events: none;\n  }\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: $shadow-md;\n  }\n  \n  &__header {\n    margin-bottom: $spacing-sm;\n    \n    h4 {\n      font-weight: bold;\n      margin: 0;\n      color: $primary-color;\n    }\n  }\n  \n  &__content {\n    font-size: $font-size-sm;\n    margin-bottom: $spacing-md;\n    \n    p {\n      margin-bottom: $spacing-sm;\n    }\n    \n    .companion-ability {\n      margin-top: $spacing-sm;\n      \n      h5 {\n        margin: 0 0 $spacing-xs 0;\n        font-size: $font-size-sm;\n      }\n      \n      .ability-description {\n        font-size: $font-size-xs;\n        color: rgba($dark-color, 0.7);\n      }\n    }\n    \n    .companion-seasons {\n      margin-top: $spacing-sm;\n      \n      h5 {\n        margin: 0 0 $spacing-xs 0;\n        font-size: $font-size-sm;\n      }\n    }\n  }\n  \n  &__footer {\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n\n.season-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $spacing-xs;\n  margin-top: $spacing-xs;\n}\n\n.season-tag {\n  font-size: $font-size-xs;\n  padding: $spacing-xs $spacing-sm;\n  border-radius: $border-radius-md;\n  color: $light-color;\n  \n  &.spring {\n    background-color: #7cb342;\n  }\n  \n  &.summer {\n    background-color: #f9a825;\n  }\n  \n  &.fall, &.autumn {\n    background-color: #ef6c00;\n  }\n  \n  &.winter {\n    background-color: #42a5f5;\n  }\n}\n\n// Feed/Bond Dialog styling from CompanionCard to maintain consistency\n.feed-dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba($dark-color, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.feed-dialog {\n  background-color: white;\n  padding: $spacing-lg;\n  border-radius: $border-radius-md;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  \n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: $spacing-md;\n    \n    h3 {\n      margin-top: 0;\n    }\n    \n    .close-btn {\n      font-size: 1.5rem;\n      cursor: pointer;\n    }\n  }\n  \n  &__content {\n    margin-bottom: $spacing-md;\n  }\n  \n  &__footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: $spacing-sm;\n  }\n}\n\n.resource-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $spacing-sm;\n  margin-top: $spacing-sm;\n}\n\n.resource-item {\n  padding: $spacing-sm;\n  border: 1px solid $border-color;\n  border-radius: $border-radius-md;\n  cursor: pointer;\n  transition: all $transition-normal;\n  \n  &:hover {\n    border-color: $accent-color;\n    background-color: rgba($accent-color, 0.1);\n  }\n  \n  &.selected {\n    border-color: $accent-color;\n    background-color: rgba($accent-color, 0.2);\n  }\n}\n</style>\n","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"companion-card__content\" }\nconst _hoisted_2 = { class: \"companion-loyalty mt-3\" }\nconst _hoisted_3 = { class: \"loyalty-meter\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"companion-ability mt-3\"\n}\nconst _hoisted_5 = {\n  key: 1,\n  class: \"companion-seasons mt-3\"\n}\nconst _hoisted_6 = { class: \"season-tags\" }\nconst _hoisted_7 = { class: \"companion-card__actions\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = {\n  key: 0,\n  class: \"feed-dialog-overlay\"\n}\nconst _hoisted_10 = { class: \"feed-dialog\" }\nconst _hoisted_11 = { class: \"feed-dialog__header\" }\nconst _hoisted_12 = { class: \"feed-dialog__content\" }\nconst _hoisted_13 = { class: \"resource-list\" }\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_16 = { class: \"feed-dialog__footer\" }\nconst _hoisted_17 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_GameCard = _resolveComponent(\"GameCard\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_GameCard, {\n      title: _ctx.companion?.name || 'Unknown Companion',\n      subtitle: 'Animal Companion',\n      cardType: _ctx.CardType.ANIMAL_COMPANION,\n      class: _normalizeClass([\"companion-card\", { 'wary': _ctx.isCompanionWary }]),\n      onClick: _ctx.selectCompanion,\n      style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n    }, {\n      footer: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_7, [\n          (_ctx.canFeed)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                class: \"btn btn--primary\",\n                onClick: _cache[0] || (_cache[0] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.openFeedDialog && _ctx.openFeedDialog(...args)), [\"stop\"]))\n              }, \" Feed Companion \"))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"button\", {\n            class: \"btn btn--secondary\",\n            onClick: _cache[1] || (_cache[1] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.useAbility && _ctx.useAbility(...args)), [\"stop\"])),\n            disabled: _ctx.abilityUsed || _ctx.isCompanionWary\n          }, _toDisplayString(_ctx.isCompanionWary ? 'Wary' : (_ctx.abilityUsed ? 'Ability Used' : 'Use Ability')), 9, _hoisted_8)\n        ])\n      ]),\n      default: _withCtx(() => [\n        _cache[6] || (_cache[6] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"CompanionCard\", -1)),\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createElementVNode(\"p\", null, _toDisplayString(_ctx.companion?.description || 'No description available'), 1),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"h5\", null, \"Loyalty Level: \" + _toDisplayString(_ctx.loyalty), 1),\n            _createElementVNode(\"div\", _hoisted_3, [\n              _createElementVNode(\"div\", {\n                class: \"loyalty-bar\",\n                style: _normalizeStyle(_ctx.loyaltyBarStyle)\n              }, null, 4)\n            ])\n          ]),\n          (_ctx.companion?.ability)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                _createElementVNode(\"h5\", null, _toDisplayString(_ctx.companion.ability.name), 1),\n                _createElementVNode(\"p\", null, _toDisplayString(_ctx.companion.ability.description), 1)\n              ]))\n            : _createCommentVNode(\"\", true),\n          (_ctx.companion?.affinitySeasons)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                _cache[5] || (_cache[5] = _createElementVNode(\"h5\", null, \"Seasonal Affinity\", -1)),\n                _createElementVNode(\"div\", _hoisted_6, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.companion.affinitySeasons, (season) => {\n                    return (_openBlock(), _createElementBlock(\"span\", {\n                      key: season,\n                      class: _normalizeClass([\"season-tag\", season.toLowerCase()])\n                    }, _toDisplayString(_ctx.formatSeasonName(season)), 3))\n                  }), 128))\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"title\", \"cardType\", \"class\", \"onClick\"]),\n    (_ctx.showFeedDialog)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n          _createElementVNode(\"div\", _hoisted_10, [\n            _createElementVNode(\"div\", _hoisted_11, [\n              _createElementVNode(\"h3\", null, \"Feed \" + _toDisplayString(_ctx.companion?.name), 1),\n              _createElementVNode(\"button\", {\n                class: \"close-btn\",\n                onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.closeFeedDialog && _ctx.closeFeedDialog(...args)))\n              }, \"×\")\n            ]),\n            _createElementVNode(\"div\", _hoisted_12, [\n              _cache[7] || (_cache[7] = _createElementVNode(\"p\", null, \"Select a resource to feed your companion:\", -1)),\n              _createElementVNode(\"div\", _hoisted_13, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.compatibleResources, (resource) => {\n                  return (_openBlock(), _createElementBlock(\"div\", {\n                    key: resource.id,\n                    class: _normalizeClass([\"resource-item\", { 'selected': _ctx.selectedResource === resource.id }]),\n                    onClick: ($event: any) => (_ctx.selectedResource = resource.id)\n                  }, [\n                    _createElementVNode(\"span\", null, _toDisplayString(resource.name), 1)\n                  ], 10, _hoisted_14))\n                }), 128)),\n                (_ctx.compatibleResources.length === 0)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, \" No compatible resources available. \"))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_16, [\n              _createElementVNode(\"button\", {\n                class: \"btn btn--primary\",\n                onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.feedCompanion && _ctx.feedCompanion(...args))),\n                disabled: !_ctx.selectedResource || _ctx.compatibleResources.length === 0\n              }, \" Feed \", 8, _hoisted_17),\n              _createElementVNode(\"button\", {\n                class: \"btn btn--secondary\",\n                onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.closeFeedDialog && _ctx.closeFeedDialog(...args)))\n              }, \" Cancel \")\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","<template>\n  <GameCard \n    :title=\"companion?.name || 'Unknown Companion'\" \n    :subtitle=\"'Animal Companion'\" \n    :cardType=\"CardType.ANIMAL_COMPANION\"\n    class=\"companion-card\"\n    :class=\"{ 'wary': isCompanionWary }\"\n    @click=\"selectCompanion\"\n    style=\"border: 2px solid lightblue; position: relative;\"\n  >\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">CompanionCard</div>\n    <div class=\"companion-card__content\">\n      <p>{{ companion?.description || 'No description available' }}</p>\n      \n      <div class=\"companion-loyalty mt-3\">\n        <h5>Loyalty Level: {{ loyalty }}</h5>\n        <div class=\"loyalty-meter\">\n          <div class=\"loyalty-bar\" :style=\"loyaltyBarStyle\"></div>\n        </div>\n      </div>\n      \n      <div class=\"companion-ability mt-3\" v-if=\"companion?.ability\">\n        <h5>{{ companion.ability.name }}</h5>\n        <p>{{ companion.ability.description }}</p>\n      </div>\n      \n      <div class=\"companion-seasons mt-3\" v-if=\"companion?.affinitySeasons\">\n        <h5>Seasonal Affinity</h5>\n        <div class=\"season-tags\">\n          <span \n            v-for=\"season in companion.affinitySeasons\" \n            :key=\"season\"\n            class=\"season-tag\"\n            :class=\"season.toLowerCase()\"\n          >\n            {{ formatSeasonName(season) }}\n          </span>\n        </div>\n      </div>\n    </div>\n    \n    <template #footer>\n      <div class=\"companion-card__actions\">\n        <button \n          v-if=\"canFeed\"\n          class=\"btn btn--primary\"\n          @click.stop=\"openFeedDialog\"\n        >\n          Feed Companion\n        </button>\n        <button \n          class=\"btn btn--secondary\"\n          @click.stop=\"useAbility\"\n          :disabled=\"abilityUsed || isCompanionWary\"\n        >\n          {{ isCompanionWary ? 'Wary' : (abilityUsed ? 'Ability Used' : 'Use Ability') }}\n        </button>\n      </div>\n    </template>\n  </GameCard>\n\n  <!-- Feed Dialog -->\n  <div class=\"feed-dialog-overlay\" v-if=\"showFeedDialog\">\n    <div class=\"feed-dialog\">\n      <div class=\"feed-dialog__header\">\n        <h3>Feed {{ companion?.name }}</h3>\n        <button class=\"close-btn\" @click=\"closeFeedDialog\">&times;</button>\n      </div>\n      \n      <div class=\"feed-dialog__content\">\n        <p>Select a resource to feed your companion:</p>\n        \n        <div class=\"resource-list\">\n          <div \n            v-for=\"resource in compatibleResources\" \n            :key=\"resource.id\"\n            class=\"resource-item\"\n            :class=\"{ 'selected': selectedResource === resource.id }\"\n            @click=\"selectedResource = resource.id\"\n          >\n            <span>{{ resource.name }}</span>\n          </div>\n          <div v-if=\"compatibleResources.length === 0\" class=\"empty-state\">\n            No compatible resources available.\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"feed-dialog__footer\">\n        <button \n          class=\"btn btn--primary\" \n          @click=\"feedCompanion\"\n          :disabled=\"!selectedResource || compatibleResources.length === 0\"\n        >\n          Feed\n        </button>\n        <button class=\"btn btn--secondary\" @click=\"closeFeedDialog\">\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, PropType } from 'vue';\nimport { CardType } from '@/models/enums/cardTypes';\nimport { Season } from '@/models/enums/seasons';\nimport GameCard from '@/components/core/GameCard.vue';\nimport { useCardStore, usePlayerStore, useGameStore } from '@/stores';\nimport { companionService } from '@/services/companionService';\nimport { AnimalCompanionCard, ResourceCard } from '@/models/types/cards';\n\nexport default defineComponent({\n  name: 'CompanionCard',\n  components: {\n    GameCard\n  },\n  props: {\n    companionId: {\n      type: String,\n      required: true\n    },\n    selected: {\n      type: Boolean,\n      default: false\n    },\n    abilityUsed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['select', 'use-ability', 'feed'],\n  setup(props, { emit }) {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n    \n    const showFeedDialog = ref(false);\n    const selectedResource = ref('');\n    \n    // Get companion data\n    const companion = computed(() => {\n      return cardStore.getCompanionById(props.companionId);\n    });\n    \n    // Get companion loyalty\n    const loyalty = computed(() => {\n      return companionService.getLoyalty(props.companionId);\n    });\n    \n    // Loyalty bar style\n    const loyaltyBarStyle = computed(() => {\n      const percentage = (loyalty.value / 5) * 100;\n      return {\n        width: `${percentage}%`,\n        backgroundColor: getLoyaltyColor(loyalty.value)\n      };\n    });\n    \n    // Compatible resources for feeding\n    const compatibleResources = computed(() => {\n      // Get all player resources\n      const playerResourceIds = playerStore.resources;\n      \n      // Filter resources that are suitable for the companion\n      return playerResourceIds\n        .map(id => cardStore.getResourceById(id))\n        .filter(resource => resource && companionService.isResourceSuitableForBonding(resource.id, props.companionId)) as ResourceCard[];\n    });\n    \n    // Check if player has resources to feed companion\n    const canFeed = computed(() => {\n      return compatibleResources.value.length > 0;\n    });\n    \n    // Check if companion is wary\n    const isCompanionWary = computed(() => {\n      return companionService.isCompanionWary(props.companionId);\n    });\n    \n    // Format season name for display\n    const formatSeasonName = (season: Season) => {\n      return season.replace('_', ' ').split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ');\n    };\n    \n    // Get color based on loyalty level\n    const getLoyaltyColor = (loyalty: number) => {\n      if (loyalty <= 1) return '#FF5252'; // Danger - Red\n      if (loyalty <= 3) return '#FFC107'; // Warning - Yellow\n      return '#4CAF50'; // Success - Green\n    };\n    \n    // Select this companion\n    const selectCompanion = () => {\n      emit('select', props.companionId);\n    };\n    \n    // Open feed dialog\n    const openFeedDialog = () => {\n      showFeedDialog.value = true;\n      selectedResource.value = compatibleResources.value.length > 0 ? \n        compatibleResources.value[0].id : '';\n    };\n    \n    // Close feed dialog\n    const closeFeedDialog = () => {\n      showFeedDialog.value = false;\n      selectedResource.value = '';\n    };\n    \n    // Feed companion with selected resource\n    const feedCompanion = () => {\n      if (!selectedResource.value) return;\n      \n      const success = companionService.feedCompanion(\n        props.companionId,\n        selectedResource.value\n      );\n      \n      if (success) {\n        const resource = cardStore.getResourceById(selectedResource.value);\n        gameStore.addToGameLog(\n          `You fed your ${companion.value?.name} with ${resource?.name}.`, \n          true, \n          'companion'\n        );\n        emit('feed', props.companionId);\n      } else {\n        gameStore.addToGameLog('Failed to feed your companion.');\n      }\n      \n      closeFeedDialog();\n    };\n    \n    // Use companion ability\n    const useAbility = () => {\n      if (props.abilityUsed || isCompanionWary.value) return;\n      emit('use-ability', props.companionId);\n    };\n    \n    return {\n      companion,\n      loyalty,\n      loyaltyBarStyle,\n      compatibleResources,\n      canFeed,\n      showFeedDialog,\n      selectedResource,\n      selectCompanion,\n      openFeedDialog,\n      closeFeedDialog,\n      feedCompanion,\n      useAbility,\n      formatSeasonName,\n      CardType,\n      isCompanionWary\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.companion-card {\n  transition: transform 0.2s, box-shadow 0.2s;\n  cursor: pointer;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  }\n  \n  &__content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n  \n  &__actions {\n    display: flex;\n    justify-content: space-between;\n    \n    button {\n      flex: 1;\n      margin: 0 $spacing-xs;\n      \n      &:first-child {\n        margin-left: 0;\n      }\n      \n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n  \n  &.wary {\n    background-color: rgba($warning-color, 0.1);\n    border: 1px solid $warning-color;\n  }\n}\n\n.companion-loyalty {\n  margin-bottom: $spacing-md;\n  \n  h5 {\n    margin-bottom: $spacing-sm;\n  }\n}\n\n.loyalty-meter {\n  height: 10px;\n  background-color: #eee;\n  border-radius: 5px;\n  overflow: hidden;\n}\n\n.loyalty-bar {\n  height: 100%;\n  transition: width 0.3s, background-color 0.3s;\n}\n\n.companion-ability {\n  margin-bottom: $spacing-md;\n  \n  h5 {\n    margin-bottom: $spacing-xs;\n  }\n}\n\n.season-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $spacing-xs;\n  \n  .season-tag {\n    display: inline-block;\n    padding: 2px 8px;\n    border-radius: 12px;\n    font-size: 0.8rem;\n    color: white;\n    \n    &.samhain {\n      background-color: $samhain-color;\n    }\n    \n    &.winters_depth {\n      background-color: $winter-color;\n    }\n    \n    &.imbolc {\n      background-color: $imbolc-color;\n    }\n    \n    &.beltane {\n      background-color: $beltane-color;\n    }\n    \n    &.lughnasadh {\n      background-color: $lughnasadh-color;\n    }\n  }\n}\n\n// Feed Dialog\n.feed-dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.feed-dialog {\n  background-color: white;\n  padding: $spacing-lg;\n  border-radius: $border-radius-md;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  \n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: $spacing-md;\n    \n    h3 {\n      margin-top: 0;\n    }\n    \n    .close-btn {\n      font-size: 1.5rem;\n      cursor: pointer;\n    }\n  }\n  \n  &__content {\n    margin-bottom: $spacing-md;\n  }\n  \n  &__footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: $spacing-sm;\n  }\n}\n\n.resource-list {\n  margin: $spacing-md 0;\n  max-height: 200px;\n  overflow-y: auto;\n  border: 1px solid #eee;\n  border-radius: $border-radius-sm;\n}\n\n.resource-item {\n  padding: $spacing-sm;\n  border-bottom: 1px solid #eee;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  &:hover {\n    background-color: rgba($primary-color, 0.1);\n  }\n  \n  &.selected {\n    background-color: rgba($primary-color, 0.2);\n  }\n}\n\n.empty-state {\n  padding: $spacing-md;\n  text-align: center;\n  color: rgba($dark-color, 0.6);\n  font-style: italic;\n}\n</style>\n","import { render } from \"./CompanionCard.vue?vue&type=template&id=67224ba0&scoped=true&ts=true\"\nimport script from \"./CompanionCard.vue?vue&type=script&lang=ts\"\nexport * from \"./CompanionCard.vue?vue&type=script&lang=ts\"\n\nimport \"./CompanionCard.vue?vue&type=style&index=0&id=67224ba0&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-67224ba0\"]])\n\nexport default __exports__","import { render } from \"./CompanionManagement.vue?vue&type=template&id=3f0758c0&scoped=true&ts=true\"\nimport script from \"./CompanionManagement.vue?vue&type=script&lang=ts\"\nexport * from \"./CompanionManagement.vue?vue&type=script&lang=ts\"\n\nimport \"./CompanionManagement.vue?vue&type=style&index=0&id=3f0758c0&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3f0758c0\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"game-log\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = {\n  class: \"game-log__entries\",\n  ref: \"logContainer\"\n}\nconst _hoisted_3 = {\n  key: 0,\n  class: \"game-log__empty\"\n}\nconst _hoisted_4 = {\n  key: 1,\n  class: \"game-log__paragraph\"\n}\nconst _hoisted_5 = { class: \"first-letter\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"log-sentence__separator\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"GameLog\", -1)),\n    _cache[1] || (_cache[1] = _createElementVNode(\"h3\", { class: \"game-log__title\" }, \"Journey Log\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_ctx.gameLog.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" Your journey has just begun. Events will be recorded here. \"))\n        : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.gameLog, (entry, index) => {\n              return (_openBlock(), _createElementBlock(\"span\", {\n                key: index,\n                class: _normalizeClass([\"log-sentence\", { 'log-sentence--highlight': entry.highlight }])\n              }, [\n                _createElementVNode(\"span\", _hoisted_5, _toDisplayString(entry.message.charAt(0)), 1),\n                _createTextVNode(_toDisplayString(entry.message.substring(1)) + \" \", 1),\n                (index < _ctx.gameLog.length - 1)\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \". \"))\n                  : _createCommentVNode(\"\", true)\n              ], 2))\n            }), 128))\n          ]))\n    ], 512)\n  ]))\n}","<template>\n  <div class=\"game-log\" style=\"border: 2px solid lightblue; position: relative;\">\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">GameLog</div>\n    <h3 class=\"game-log__title\">Journey Log</h3>\n    <div class=\"game-log__entries\" ref=\"logContainer\">\n      <div v-if=\"gameLog.length === 0\" class=\"game-log__empty\">\n        Your journey has just begun. Events will be recorded here.\n      </div>\n      <p v-else class=\"game-log__paragraph\">\n        <template v-for=\"(entry, index) in gameLog\" :key=\"index\">\n          <span \n            class=\"log-sentence\" \n            :class=\"{ 'log-sentence--highlight': entry.highlight }\"\n          >\n            <span class=\"first-letter\">{{ entry.message.charAt(0) }}</span>{{ entry.message.substring(1) }}\n            <span class=\"log-sentence__separator\" v-if=\"index < gameLog.length - 1\">. </span>\n          </span>\n        </template>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, watch, nextTick } from 'vue';\nimport { useGameStore } from '@/stores';\n\nexport default defineComponent({\n  name: 'GameLog',\n  setup() {\n    const gameStore = useGameStore();\n    const logContainer = ref<HTMLElement | null>(null);\n    \n    const gameLog = computed(() => {\n      return gameStore.gameLog;\n    });\n    \n    const formatTimestamp = (timestamp: number) => {\n      const date = new Date(timestamp);\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      const seconds = date.getSeconds().toString().padStart(2, '0');\n      \n      return `${hours}:${minutes}:${seconds}`;\n    };\n    \n    // Auto-scroll to the bottom when new log entries are added\n    watch(() => gameLog.value.length, () => {\n      nextTick(() => {\n        if (logContainer.value) {\n          logContainer.value.scrollTop = logContainer.value.scrollHeight;\n        }\n      });\n    });\n    \n    return {\n      gameLog,\n      logContainer,\n      formatTimestamp\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.game-log {\n  background-color: rgba(240, 230, 210, 0.2);\n  border-radius: 8px;\n  margin-bottom: 20px;\n  width: 100%;\n  max-height: 300px;\n  overflow-y: auto;\n  \n  &__title {\n    background: linear-gradient(to right, #8c7851, #5a3e2b);\n    color: #fff;\n    margin: 0;\n    padding: 10px;\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n    font-family: 'Cinzel', serif;\n    text-align: center;\n    font-size: 26px;\n  }\n  \n  &__entries {\n    padding: 10px;\n    overflow-y: auto;\n    max-height: 250px;\n  }\n  \n  &__paragraph {\n    margin: 10px;\n    padding: 15px;\n    background-color: rgba(255, 255, 255, 0.7);\n    border-radius: 4px;\n    font-size: 28px;\n    line-height: 2.2;\n    color: #333;\n    text-align: justify;\n    font-family: 'Tangerine', cursive;\n    letter-spacing: 0.5px;\n    word-spacing: 2px;\n  }\n  \n  &__empty {\n    padding: 15px;\n    text-align: center;\n    font-style: italic;\n    color: #777;\n    font-size: 22px;\n  }\n}\n\n.log-sentence {\n  display: inline;\n  position: relative;\n  margin-bottom: 8px;\n  \n  .first-letter {\n    font-size: 250%;\n    font-weight: bold;\n    color: #5a3e2b;\n    line-height: 0.7;\n    vertical-align: bottom;\n    font-family: 'Tangerine', cursive;\n    display: inline-block;\n    margin-right: 2px;\n    position: relative;\n    top: 5px;\n  }\n  \n  &--highlight {\n    font-weight: bold;\n    \n    .first-letter {\n      color: #8c7851;\n    }\n  }\n  \n  &__separator {\n    margin: 0 5px;\n    display: inline-block;\n    position: relative;\n  }\n}\n\n@media (max-width: 768px) {\n  .game-log {\n    max-height: 200px;\n    \n    &__entries {\n      max-height: 150px;\n    }\n  }\n}\n</style>\n","import { render } from \"./GameLog.vue?vue&type=template&id=a40774de&scoped=true&ts=true\"\nimport script from \"./GameLog.vue?vue&type=script&lang=ts\"\nexport * from \"./GameLog.vue?vue&type=script&lang=ts\"\n\nimport \"./GameLog.vue?vue&type=style&index=0&id=a40774de&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a40774de\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createElementVNode as _createElementVNode, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"game-board\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = { class: \"game-content\" }\nconst _hoisted_3 = { class: \"cards-row-section\" }\nconst _hoisted_4 = { class: \"cards-row\" }\nconst _hoisted_5 = { class: \"card-item\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"card-item\"\n}\nconst _hoisted_7 = {\n  key: 1,\n  class: \"card-item\"\n}\nconst _hoisted_8 = {\n  key: 0,\n  class: \"character-section\"\n}\nconst _hoisted_9 = { class: \"character-card-container\" }\nconst _hoisted_10 = { key: 0 }\nconst _hoisted_11 = { key: 0 }\nconst _hoisted_12 = {\n  key: 1,\n  class: \"landscape-section\"\n}\nconst _hoisted_13 = { class: \"landscape-card-container\" }\nconst _hoisted_14 = { key: 0 }\nconst _hoisted_15 = {\n  class: \"phase-content\",\n  style: {\"border\":\"1px solid #8c7851\",\"position\":\"relative\",\"margin-top\":\"0\",\"padding\":\"5px\",\"background-color\":\"rgba(240, 230, 210, 0.3)\",\"border-radius\":\"8px\"}\n}\nconst _hoisted_16 = {\n  key: 0,\n  style: {\"display\":\"flex\",\"flex-direction\":\"column\",\"align-items\":\"center\",\"width\":\"100%\",\"position\":\"relative\",\"border\":\"2px solid lightblue\",\"padding\":\"5px\"}\n}\nconst _hoisted_17 = { key: 1 }\nconst _hoisted_18 = { class: \"phase-description\" }\nconst _hoisted_19 = { key: 2 }\nconst _hoisted_20 = { class: \"challenge-card-container\" }\nconst _hoisted_21 = { key: 0 }\nconst _hoisted_22 = { key: 0 }\nconst _hoisted_23 = { key: 1 }\nconst _hoisted_24 = { key: 2 }\nconst _hoisted_25 = { class: \"challenge-details mt-4\" }\nconst _hoisted_26 = { key: 3 }\nconst _hoisted_27 = {\n  key: 4,\n  style: {\"position\":\"relative\",\"border\":\"2px solid lightblue\",\"padding\":\"10px\"}\n}\nconst _hoisted_28 = { class: \"phase-description\" }\nconst _hoisted_29 = {\n  key: 5,\n  style: {\"position\":\"relative\",\"border\":\"2px solid lightblue\",\"padding\":\"10px\"}\n}\nconst _hoisted_30 = { class: \"resource-actions mt-4\" }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"resource-warning mt-2\"\n}\nconst _hoisted_32 = {\n  key: 6,\n  style: {\"position\":\"relative\",\"border\":\"2px solid lightblue\",\"padding\":\"10px\"}\n}\nconst _hoisted_33 = { key: 0 }\nconst _hoisted_34 = { class: \"action-buttons mt-4\" }\nconst _hoisted_35 = { key: 1 }\nconst _hoisted_36 = {\n  key: 7,\n  style: {\"position\":\"relative\",\"border\":\"2px solid lightblue\",\"padding\":\"10px\"}\n}\nconst _hoisted_37 = { key: 8 }\nconst _hoisted_38 = { class: \"journey-actions mt-4\" }\nconst _hoisted_39 = {\n  key: 9,\n  style: {\"position\":\"relative\",\"border\":\"2px solid lightblue\",\"padding\":\"10px\"}\n}\nconst _hoisted_40 = { class: \"phase-description\" }\nconst _hoisted_41 = {\n  key: 0,\n  class: \"next-landscape mt-4\"\n}\nconst _hoisted_42 = {\n  key: 1,\n  class: \"mt-4\"\n}\nconst _hoisted_43 = {\n  key: 10,\n  style: {\"position\":\"relative\",\"border\":\"2px solid lightblue\",\"padding\":\"10px\"}\n}\nconst _hoisted_44 = { class: \"phase-description\" }\nconst _hoisted_45 = { class: \"landscape-challenges\" }\nconst _hoisted_46 = { style: {\"display\":\"flex\",\"margin-top\":\"5px\",\"font-size\":\"0.85rem\",\"color\":\"#666\"} }\nconst _hoisted_47 = { style: {\"flex\":\"1\",\"margin-right\":\"5px\"} }\nconst _hoisted_48 = { style: {\"margin\":\"4px 0\"} }\nconst _hoisted_49 = { style: {\"margin\":\"4px 0\"} }\nconst _hoisted_50 = { style: {\"margin\":\"4px 0\"} }\nconst _hoisted_51 = { style: {\"margin\":\"4px 0\"} }\nconst _hoisted_52 = { style: {\"flex\":\"1\",\"margin-left\":\"5px\"} }\nconst _hoisted_53 = { style: {\"margin\":\"4px 0\"} }\nconst _hoisted_54 = { style: {\"margin\":\"4px 0\"} }\nconst _hoisted_55 = { style: {\"margin\":\"4px 0\"} }\nconst _hoisted_56 = { style: {\"margin\":\"4px 0\"} }\nconst _hoisted_57 = {\n  class: \"challenge-actions\",\n  style: {\"margin-top\":\"20px\",\"display\":\"flex\",\"gap\":\"10px\"}\n}\nconst _hoisted_58 = {\n  key: 11,\n  style: {\"position\":\"relative\",\"border\":\"2px solid lightblue\",\"padding\":\"10px\"}\n}\nconst _hoisted_59 = { key: 12 }\nconst _hoisted_60 = { class: \"game-log\" }\n\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport GameMap from '@/components/game/GameMap.vue';\nimport ResourceManagement from '@/components/game/ResourceManagement.vue';\nimport CraftingStation from '@/components/game/CraftingStation.vue';\nimport PlayerDashboard from '@/components/game/PlayerDashboard.vue';\nimport AnimalCompanionSelection from '@/components/game/AnimalCompanionSelection.vue';\nimport CompanionManagement from '@/components/game/CompanionManagement.vue';\nimport GameLog from '@/components/game/GameLog.vue';\nimport GameCard from '@/components/core/GameCard.vue';\nimport { GamePhase } from '@/models/enums/phases';\nimport { CardType } from '@/models/enums/cardTypes';\nimport { CraftingService } from '@/services/craftingService';\nimport type { ResourceCard } from '@/models/types/cards';\nimport type { LandscapeCard } from '@/models/types/cards';\nimport { Season } from '@/models/enums/seasons';\nimport { ChallengeType } from '@/models/enums/cardTypes';\n\n// Interface for challenge result\ninterface ChallengeResult {\n  success: boolean;\n  partialSuccess?: boolean;\n  partialSuccessExperience?: number;\n  partialSuccessSetback?: string;\n  message: string;\n  damage?: number;\n  rewards?: any;\n}\n\n// Initialize router and stores\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'GameBoardView',\n  setup(__props) {\n\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\n\n// Reactive references\nconst lastChallengeResult = ref<ChallengeResult | null>(null);\nconst selectedCompanion = ref<string | null>(null);\nconst craftingService = ref<CraftingService | null>(null);\n\n// Track seasonal quests\nconst seasonalQuests = ref([\n  { id: 'SAMHAIN', completed: false },\n  { id: 'WINTERS_DEPTH', completed: false },\n  { id: 'IMBOLC', completed: false },\n  { id: 'BELTANE', completed: false },\n  { id: 'LUGHNASADH', completed: false }\n]);\n\n// Initialize services after component is mounted\nonMounted(() => {\n  // Make sure the CraftingService is initialized correctly\n  try {\n    craftingService.value = new CraftingService();\n    console.log('CraftingService initialized successfully');\n  } catch (error) {\n    console.error('Error initializing CraftingService:', error);\n  }\n});\n\n// Game state\nconst currentLandscape = computed<LandscapeCard | null>(() => {\n  return gameStore.currentLandscape;\n});\n\nconst currentCharacter = computed(() => {\n  if (!playerStore.characterId) return null;\n  return cardStore.characters.find(char => char.id === playerStore.characterId);\n});\n\n// Computed properties\nconst currentChallenge = computed(() => {\n  if (!gameStore.currentChallenge) return null;\n  return cardStore.getChallengeById(gameStore.currentChallenge);\n});\n\nconst nextLandscape = computed(() => {\n  const cardStore = useCardStore();\n  // Get the next landscape index\n  const nextIndex = gameStore.journeyProgress + 1;\n  if (nextIndex < gameStore.journeyPath.length) {\n    const nextLandscapeId = gameStore.journeyPath[nextIndex];\n    return cardStore.getLandscapeById(nextLandscapeId);\n  }\n  return null;\n});\n\n// State for challenge resolution\n\n// Companion selection for ANIMAL_COMPANION phase\n\nconst selectCompanion = (companionId: string) => {\n  selectedCompanion.value = companionId;\n};\n\nconst clearSelectedCompanion = () => {\n  selectedCompanion.value = null;\n};\n\n// Check if current location is a healing location\nconst isHealingLocation = computed(() => {\n  if (!currentLandscape.value) return false;\n  return ['Sacred Oak Grove', 'Druid\\'s Sanctuary', 'Moonlit Loch'].includes(currentLandscape.value.name);\n});\n\n// Crafting computed properties\nconst craftableItems = computed(() => {\n  if (!playerStore.resources.length) return [];\n  \n  // Get list of craftable items based on player's resources\n  const craftableItemIds = playerStore.getCraftableItems();\n  \n  // Get full item objects for display\n  return craftableItemIds\n    .map(id => cardStore.getCraftedItemById(id))\n    .filter(item => item !== undefined);\n});\n\nconst currentLandscapeCraftingBonus = computed(() => {\n  if (!currentLandscape.value) return null;\n  \n  // Check if landscape has crafting bonuses\n  const landscape = currentLandscape.value;\n  \n  // Special crafting locations from game rules\n  if (landscape.name === 'Iron Forge Dell') return 1;\n  if (landscape.name === 'Sacred Oak Grove') return 1;\n  if (landscape.name === 'Druid\\'s Sanctuary') return 1;\n  if (landscape.name === 'Moonlit Loch') return 1;\n  \n  return null;\n});\n\n// Game actions\nconst resolveChallenge = () => {\n  if (!currentChallenge.value || !gameStore.currentChallenge) {\n    gameStore.addToGameLog(\"No active challenge to resolve.\", true);\n    return;\n  }\n  \n  console.log('Resolving challenge:', currentChallenge.value.name);\n  \n  // Calculate challenge difficulty including threat level\n  const baseDifficulty = currentChallenge.value.difficulty || 5;\n  const threatModifier = gameStore.threatLevel;\n  const seasonModifier = 0; // TODO: Add seasonal modifiers\n  const totalDifficulty = baseDifficulty + threatModifier + seasonModifier;\n  \n  // Calculate player's bonus\n  let playerBonus = 0;\n  \n  // Add bonuses from character\n  if (currentCharacter.value?.specialAbility) {\n    // Apply specific character bonuses if applicable\n    playerBonus += 1;\n  }\n  \n  // Add bonuses from animal companions\n  const animalBonus = playerStore.animalCompanions.length > 0 ? 1 : 0;\n  playerBonus += animalBonus;\n  \n  // Add bonuses from crafted items\n  const itemBonus = playerStore.craftedItems.length > 0 ? 1 : 0;\n  playerBonus += itemBonus;\n\n  // Helper function to format season names\n  const formatSeason = (season: Season): string => {\n    if (!season) return 'Unknown';\n    \n    // Convert enum value to readable format (e.g., SPRING to Spring)\n    const seasonName = season.toString();\n    return seasonName.charAt(0) + seasonName.slice(1).toLowerCase();\n  };\n\n  // Simulate rolling the 8-sided die\n  const dieRoll = Math.floor(Math.random() * 8) + 1;\n  const totalRoll = dieRoll + playerBonus;\n  \n  let success = false;\n  let partialSuccess = false;\n  let damage = 0;\n  \n  // Natural 8 always succeeds\n  if (dieRoll === 8) {\n    success = true;\n    gameStore.addToGameLog(\"Natural 8! Automatic success regardless of modifiers.\", true);\n  } else {\n    // Check for full success\n    success = totalRoll >= totalDifficulty;\n    \n    // Check for partial success (exactly one point below difficulty)\n    partialSuccess = !success && totalRoll === totalDifficulty - 1;\n  }\n  \n  if (success) {\n    // Handle success\n    lastChallengeResult.value = {\n      success: true,\n      message: `You successfully resolved the challenge! Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`\n    };\n    \n    gameStore.addToGameLog(`Success! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}.`, true);\n    \n    // Award experience\n    playerStore.gainExperience(1);\n    gameStore.addToGameLog(\"You gained 1 experience point!\", true);\n    \n    // Award resources (2 for full success)\n    if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n      let resourcesAwarded = 0;\n      while (resourcesAwarded < 2 && !playerStore.isResourceCapacityReached) {\n        const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n        const resourceId = currentLandscape.value.availableResources[randomIndex];\n        \n        // Verify that the resource exists in cardStore before adding it\n        const resourceExists = cardStore.getResourceById(resourceId);\n        if (!resourceExists) {\n          console.error(`Resource with ID ${resourceId} not found in cardStore`);\n          gameStore.addToGameLog(`You attempted to gather a resource, but it was unidentifiable.`, true);\n        } else {\n          const addResult = playerStore.addResource(resourceId);\n          if (addResult) {\n            const resource = cardStore.getResourceById(resourceId);\n            if (resource) {\n              gameStore.addToGameLog(`You gathered ${resource.name}.`, true);\n              resourcesAwarded++;\n            }\n          }\n        }\n      }\n    }\n    \n    // Clear the current challenge\n    gameStore.setCurrentChallenge(null);\n  } else if (partialSuccess) {\n    // Handle partial success\n    lastChallengeResult.value = {\n      success: false,\n      partialSuccess: true,\n      message: `You partially resolved the challenge. Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`\n    };\n    \n    gameStore.addToGameLog(`Partial success! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll}, just one point below difficulty ${totalDifficulty}.`, true);\n    \n    // Award experience (half for partial success)\n    if (Math.random() < 0.5) {\n      playerStore.gainExperience(1);\n      gameStore.addToGameLog(\"You gained 1 experience point for your effort!\", true);\n    }\n    \n    // Award 1 resource for partial success\n    if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n      const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n      const resourceId = currentLandscape.value.availableResources[randomIndex];\n      \n      // Verify that the resource exists in cardStore before adding it\n      const resourceExists = cardStore.getResourceById(resourceId);\n      if (!resourceExists) {\n        console.error(`Resource with ID ${resourceId} not found in cardStore`);\n        gameStore.addToGameLog(`You attempted to gather a resource, but it was unidentifiable.`, true);\n      } else {\n        const addResult = playerStore.addResource(resourceId);\n        if (addResult) {\n          const resource = cardStore.getResourceById(resourceId);\n          if (resource) {\n            gameStore.addToGameLog(`You gathered ${resource.name}.`, true);\n          }\n        }\n      }\n    }\n    \n    // Apply a minor setback based on challenge type\n    if (currentChallenge.value) {\n      const challengeType = currentChallenge.value.type;\n      let setbackMessage = \"\";\n      \n      switch (challengeType) {\n        case ChallengeType.STRENGTH:\n        case ChallengeType.AGILITY:\n          // Physical challenges\n          damage = 1;\n          playerStore.loseHealth(damage);\n          setbackMessage = `You suffer a minor injury. You lost ${damage} health point.`;\n          break;\n        case ChallengeType.WISDOM:\n          // Mental challenges\n          gameStore.addThreatTokens(1);\n          setbackMessage = \"Your confidence wavers. You gained 1 Threat token.\";\n          break;\n        case ChallengeType.DIPLOMACY:\n          // Social challenges\n          // Temporarily lose access to one random resource type\n          if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n            const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n            const resourceId = currentLandscape.value.availableResources[randomIndex];\n            const resource = cardStore.getResourceById(resourceId);\n            if (resource) {\n              gameStore.addTempEffect(`resource_block_${resourceId}`, \"Resource Unavailable\", `Cannot gather ${resource.name}`, 1, 1);\n              setbackMessage = `The local community withholds ${resource.name} from you for now.`;\n            }\n          }\n          break;\n        case ChallengeType.SURVIVAL:\n          // Survival/spiritual challenges\n          // Animal companions become wary\n          if (playerStore.animalCompanions.length > 0) {\n            const companionId = playerStore.animalCompanions[0];\n            // Mark companion as wary (will be implemented in Phase 4)\n            setbackMessage = \"Your animal companion becomes wary of this place.\";\n          } else {\n            gameStore.addThreatTokens(1);\n            setbackMessage = \"The spiritual imbalance increases. You gained 1 Threat token.\";\n          }\n          break;\n        default:\n          damage = 1;\n          playerStore.loseHealth(damage);\n          setbackMessage = `You encounter an unexpected setback. You lost ${damage} health point.`;\n      }\n      \n      gameStore.addToGameLog(`Setback: ${setbackMessage}`, true);\n    }\n    \n    // Clear the current challenge\n    gameStore.setCurrentChallenge(null);\n  } else {\n    // Handle failure\n    damage = 1; // Basic damage from failing challenge\n    \n    lastChallengeResult.value = {\n      success: false,\n      message: `You failed to resolve the challenge. Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`,\n      damage\n    };\n    \n    gameStore.addToGameLog(`Failure! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}.`, true);\n    \n    // Apply consequences - lose health\n    playerStore.loseHealth(damage);\n    gameStore.addToGameLog(`You lost ${damage} health point${damage > 1 ? 's' : ''}.`, true);\n    \n    // Check if player is still alive\n    if (playerStore.health <= 0) {\n      gameStore.addToGameLog(\"Your journey has come to an end...\", true);\n      endJourney();\n      return;\n    }\n  }\n  \n  // Move to the Challenge Resolution phase\n  gameStore.setPhase(GamePhase.CHALLENGE_RESOLUTION);\n};\n\nconst avoidChallenge = () => {\n  // It costs 1 health to avoid a challenge\n  playerStore.loseHealth(1);\n  gameStore.addToGameLog(\"You chose to avoid the challenge, losing 1 health in the process.\", true);\n  \n  // Skip directly to Resource Management\n  gameStore.setPhase(GamePhase.RESOURCE_MANAGEMENT);\n};\n\nconst getChallengeDifficulty = () => {\n  if (!currentLandscape.value) return 5;\n  \n  const baseDifficulty = currentLandscape.value.challenges?.[0]?.difficulty || 5;\n  const threatModifier = Math.floor(gameStore.threatTokens / 3);\n  \n  // Calculate season modifier based on current season\n  const seasonModifiers = {\n    [Season.SAMHAIN]: 0,\n    [Season.WINTERS_DEPTH]: -2,\n    [Season.IMBOLC]: -1,\n    [Season.BELTANE]: 1,\n    [Season.LUGHNASADH]: 2\n  };\n  const seasonModifier = seasonModifiers[gameStore.currentSeason] || 0;\n  \n  return baseDifficulty + threatModifier + seasonModifier;\n};\n\nconst getItemBonuses = () => {\n  // Safely calculate item bonuses\n  return playerStore.equippedItems?.reduce((total, item) => {\n    return total + (item?.challengeBonus || 0);\n  }, 0) || 0;\n};\n\nconst getTotalBonus = () => {\n  // Character ability modifier\n  const characterBonus = playerStore.selectedCharacter?.abilityModifier || 0;\n  \n  // Item bonuses from equipped items\n  const itemBonus = getItemBonuses();\n  \n  // Blessing tokens\n  const blessingBonus = gameStore.blessingTokens;\n  \n  return characterBonus + itemBonus + blessingBonus;\n};\n\nconst getSeasonModifier = () => {\n  const seasonModifiers = {\n    [Season.SAMHAIN]: 0,\n    [Season.WINTERS_DEPTH]: -2,\n    [Season.IMBOLC]: -1,\n    [Season.BELTANE]: 1,\n    [Season.LUGHNASADH]: 2\n  };\n  \n  return seasonModifiers[gameStore.currentSeason] || 0;\n};\n\nconst resolveChallengeLandscape = () => {\n  try {\n    // Roll the eight-sided die\n    const diceRoll = Math.floor(Math.random() * 8) + 1;\n    gameStore.addToGameLog(`You rolled a ${diceRoll} on a D8.`, true);\n    \n    const playerBonus = getTotalBonus();\n    const totalRoll = diceRoll + playerBonus;\n    const difficulty = getChallengeDifficulty();\n    \n    gameStore.addToGameLog(`You rolled a ${diceRoll} + ${playerBonus} bonus = ${totalRoll} total against difficulty ${difficulty}.`, true);\n    \n    // Natural 8 always succeeds\n    const isNaturalSuccess = diceRoll === 8;\n    const isSuccess = isNaturalSuccess || totalRoll >= difficulty;\n    \n    if (isNaturalSuccess) {\n      gameStore.addToGameLog(\"A natural 8! Automatic success regardless of difficulty!\", true);\n    }\n    \n    // Create and store the challenge result\n    lastChallengeResult.value = {\n      success: isSuccess,\n      message: isSuccess ? \n        \"You successfully overcome the landscape challenge!\" : \n        \"You failed to overcome the landscape challenge...\",\n      damage: isSuccess ? 0 : Math.max(1, Math.floor((difficulty - totalRoll) / 2))\n    };\n    \n    // Apply damage if failed\n    if (!isSuccess) {\n      playerStore.loseHealth(lastChallengeResult.value.damage);\n      gameStore.addToGameLog(`You lost ${lastChallengeResult.value.damage} health from failing the challenge.`, true);\n    }\n    \n    // Move to challenge resolution phase\n    gameStore.setPhase(GamePhase.CHALLENGE_RESOLUTION);\n  } catch (error) {\n    console.error(\"Error in resolveChallengeLandscape:\", error);\n    gameStore.addToGameLog(\"An error occurred while resolving the challenge.\", true, 'error');\n  }\n};\n\nconst avoidChallengeLandscape = () => {\n  // Check if player has at least 2 resources\n  const totalResources = playerStore.resources.length;\n  if (totalResources < 2) {\n    gameStore.addToGameLog(\"You need at least 2 resources to avoid this challenge!\", true);\n    return;\n  }\n  \n  // Spend 2 random resources\n  const spentResources = [];\n  for (let i = 0; i < 2; i++) {\n    if (playerStore.resources.length > 0) {\n      const index = Math.floor(Math.random() * playerStore.resources.length);\n      const resource = playerStore.resources.splice(index, 1)[0];\n      spentResources.push(resource);\n    }\n  }\n  \n  // Log the avoidance\n  const resourceNames = spentResources.map(r => r.name || r.id).join(\" and \");\n  gameStore.addToGameLog(`You spent ${resourceNames} to avoid the challenge.`, true);\n  \n  // Advance to resource management\n  gameStore.setPhase(GamePhase.RESOURCE_MANAGEMENT);\n};\n\nconst handleThreatCheck = () => {\n  // Log the threat level evaluation\n  gameStore.addToGameLog(`Threat level assessed at ${gameStore.threatTokens} tokens.`, true);\n\n  // Calculate challenge difficulty modifier\n  const threatModifier = Math.floor(gameStore.threatTokens / 3);\n  if (threatModifier > 0) {\n    gameStore.addToGameLog(`Challenge difficulty increased by +${threatModifier} due to threat level.`, false);\n  }\n\n  // Check for random event trigger\n  if (gameStore.threatTokens >= 5) {\n    gameStore.addToGameLog(`The elevated threat level brings uncertainty. Be prepared for a random event.`, false);\n  }\n\n  // Check for otherworldly manifestation\n  if (gameStore.threatTokens >= 10) {\n    gameStore.addToGameLog(`The veil between worlds grows thin! An Otherworldly Manifestation is imminent!`, true);\n  }\n\n  // Advance to the next phase\n  gameStore.advancePhase();\n};\n\nconst gatherResources = () => {\n  if (!currentLandscape.value || playerStore.isResourceCapacityReached) {\n    return;\n  }\n  \n  // Determine the number of resources the player can gather\n  let resourcesToGather = 1;\n  \n  // Add seasonal bonuses\n  if (gameStore.currentSeason === Season.LUGHNASADH) {\n    resourcesToGather += 1; // Lughnasadh gives +1 resource\n    gameStore.addToGameLog(\"The harvest season of Lughnasadh allows you to gather an extra resource.\");\n  }\n  \n  // Gather random resources available from the landscape\n  if (currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n    let successfulGathers = 0;\n    while (successfulGathers < resourcesToGather && !playerStore.isResourceCapacityReached) {\n      const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n      const resourceId = currentLandscape.value.availableResources[randomIndex];\n      \n      // Verify that the resource exists in cardStore before adding it\n      const resourceExists = cardStore.getResourceById(resourceId);\n      if (!resourceExists) {\n        console.error(`Resource with ID ${resourceId} not found in cardStore`);\n        gameStore.addToGameLog(`You attempted to gather a resource, but it was unidentifiable.`, true);\n      } else {\n        const addResult = playerStore.addResource(resourceId);\n        if (addResult) {\n          const resource = cardStore.getResourceById(resourceId);\n          if (resource) {\n            gameStore.addToGameLog(`You gathered ${resource.name}.`, true);\n            successfulGathers++;\n          }\n        }\n      }\n    }\n  } else {\n    gameStore.addToGameLog(\"There are no resources to gather at this location.\", true);\n  }\n  \n  // Advance to the next phase\n  gameStore.advancePhase();\n};\n\nconst getRequiredResourcesText = (resources: string[]): string => {\n  if (!resources || !resources.length) return 'None';\n  return resources.map(id => cardStore.getResourceById(id)?.name || id).join(', ');\n};\n\nconst canCraftItem = (itemId: string) => {\n  if (!craftingService.value) return false;\n  return craftingService.value.canCraftItem(itemId);\n};\n\nconst craftItem = (itemId: string) => {\n  if (!craftingService.value) return;\n  const result = craftingService.value.craftItem(itemId);\n  if (result) {\n    gameStore.addToGameLog(`Successfully crafted an item!`, true);\n    // If we want to add a virtual die roll for crafting difficulty:\n    const dieRoll = Math.floor(Math.random() * 8) + 1;\n    gameStore.addToGameLog(`Rolled a ${dieRoll} for crafting check`, true);\n    \n    // Get crafted item details\n    const item = cardStore.getCraftedItemById(itemId);\n    if (item) {\n      gameStore.addToGameLog(`You now have a ${item.name} (${item.ability})`, true);\n      gameStore.addToGameLog(`Beware: ${item.drawback}`, true);\n    }\n  }\n};\n\n// Function to advance from Animal Companion phase\nconst advancePhase = () => {\n  // For the Animal Companion phase, we need to handle the progression\n  if (gameStore.currentPhase === GamePhase.ANIMAL_COMPANION) {\n    // If we have a selected companion, clear it first\n    if (selectedCompanion.value) {\n      clearSelectedCompanion();\n    }\n    \n    // Generate a new landscape if needed and advance the game phase\n    const cardStore = useCardStore();\n    const availableLandscapes = cardStore.landscapes.filter(l => \n      !gameStore.visitedLandscapes.includes(l.id)\n    );\n    \n    if (availableLandscapes.length > 0) {\n      // Pick a random landscape from the available ones\n      const randomIndex = Math.floor(Math.random() * availableLandscapes.length);\n      const newLandscape = availableLandscapes[randomIndex];\n      \n      // Update the current landscape\n      gameStore.setCurrentLandscape(newLandscape.id);\n      // Add to visited landscapes\n      gameStore.addVisitedLandscape(newLandscape.id);\n    } else {\n      // If no more landscapes, we've completed the journey\n      gameStore.addToGameLog('You have reached the end of your journey path.', true);\n      gameStore.completeJourney(true);\n    }\n  }\n  \n  // Advance to the next phase\n  gameStore.advancePhase();\n};\n\n// Function to start a new turn by setting the current landscape to the next one\n// and resetting the phase to SEASONAL_ASSESSMENT\nconst startNewTurn = () => {\n  if (nextLandscape.value) {\n    // Update current landscape to the next one\n    gameStore.currentLandscapeId = gameStore.journeyPath[gameStore.journeyProgress + 1];\n    // Advance journey progress\n    gameStore.journeyProgress++;\n    // Add to game log\n    gameStore.addToGameLog(`Arrived at ${nextLandscape.value.name}.`);\n    // Reset phase to start the turn cycle - use direct assignment instead of setPhase\n    gameStore.currentPhase = GamePhase.SEASONAL_ASSESSMENT;\n  } else {\n    // No more landscapes, handle journey completion\n    gameStore.addToGameLog(\"You've reached the end of your journey!\");\n    gameStore.journeyComplete = true;\n    gameStore.advancePhase();\n  }\n};\n\n// End the journey and return to home screen\nconst endJourney = () => {\n  console.log('Ending journey...');\n  playerStore.resetPlayer();\n  gameStore.resetGame();\n  router.push('/menu');\n};\n\n// Helper functions\nconst formatPhase = (phase: GamePhase): string => {\n  if (!phase) return 'Unknown';\n  \n  const phaseName = phase.toString().replace(/_/g, ' ').toLowerCase();\n  return phaseName.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n};\n\nconst formatSeason = (season: Season): string => {\n  if (!season) return 'Unknown';\n  \n  // Convert enum value to readable format (e.g., SPRING to Spring)\n  const seasonName = season.toString();\n  return seasonName.charAt(0) + seasonName.slice(1).toLowerCase();\n};\n\nconst getCardResourceName = (resourceId: string): string => {\n  const resource = cardStore.getResourceById(resourceId);\n  return resource ? resource.name : 'Unknown Resource';\n};\n\nconst getResourceDescription = (resourceId: string): string => {\n  const resource = cardStore.getResourceById(resourceId);\n  return resource ? resource.description : 'A valuable resource that can be used for crafting and survival.';\n};\n\nconst getCraftedItemName = (itemId: string): string => {\n  const item = cardStore.getCraftedItemById(itemId);\n  return item ? item.name : 'Unknown Item';\n};\n\nconst getCraftedItemDescription = (itemId: string): string => {\n  const item = cardStore.getCraftedItemById(itemId);\n  return item ? item.description : 'A crafted item.';\n};\n\nconst triggerRandomEvent = () => {\n  // Use the gameStore's random event trigger\n  gameStore.triggerRandomEvent();\n  gameStore.addToGameLog(\"A random event has been drawn due to the high threat level.\", true);\n};\n\nconst triggerOtherworldlyManifestation = () => {\n  // Use the gameStore's otherworldly manifestation trigger\n  gameStore.triggerOtherworldlyManifestation();\n  gameStore.addToGameLog(\"The veil thins as otherworldly forces manifest!\", true);\n};\n\nconst advanceToChallenge = () => {\n  gameStore.advancePhase();\n};\n\nconst advanceToNextPhase = () => {\n  gameStore.advancePhase();\n};\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"main\", _hoisted_2, [\n      _createElementVNode(\"section\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _createVNode(GameCard, {\n              title: formatSeason(_unref(gameStore).currentSeason),\n              subtitle: \"Current Season\",\n              cardType: _unref(CardType).SEASON\n            }, {\n              default: _withCtx(() => _cache[11] || (_cache[11] = [\n                _createElementVNode(\"p\", null, \"The seasons affect which resources are available and the effectiveness of your animal companions.\", -1)\n              ])),\n              _: 1\n            }, 8, [\"title\", \"cardType\"])\n          ]),\n          (currentLandscape.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                _createVNode(GameCard, {\n                  title: currentLandscape.value.name,\n                  subtitle: \"Current Landscape\",\n                  cardType: _unref(CardType).LANDSCAPE\n                }, {\n                  default: _withCtx(() => [\n                    _createElementVNode(\"p\", null, _toDisplayString(currentLandscape.value.description), 1)\n                  ]),\n                  _: 1\n                }, 8, [\"title\", \"cardType\"])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (currentCharacter.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                _createVNode(GameCard, {\n                  title: currentCharacter.value.name,\n                  subtitle: \"Your Character\",\n                  cardType: _unref(CardType).CHARACTER\n                }, {\n                  default: _withCtx(() => [\n                    _createElementVNode(\"p\", null, _toDisplayString(currentCharacter.value.specialAbility.name) + \": \" + _toDisplayString(currentCharacter.value.specialAbility.description), 1)\n                  ]),\n                  _: 1\n                }, 8, [\"title\", \"cardType\"])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(playerStore).resources, (resourceId) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: resourceId,\n              class: \"card-item\"\n            }, [\n              _createVNode(GameCard, {\n                title: getCardResourceName(resourceId),\n                subtitle: \"Resource\",\n                cardType: _unref(CardType).RESOURCE\n              }, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"p\", null, _toDisplayString(getResourceDescription(resourceId)), 1)\n                ]),\n                _: 2\n              }, 1032, [\"title\", \"cardType\"])\n            ]))\n          }), 128)),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(playerStore).craftedItems, (itemId) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: itemId,\n              class: \"card-item\"\n            }, [\n              _createVNode(GameCard, {\n                title: getCraftedItemName(itemId),\n                subtitle: \"Crafted Item\",\n                cardType: _unref(CardType).CRAFTED_ITEM\n              }, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"p\", null, _toDisplayString(getCraftedItemDescription(itemId)), 1)\n                ]),\n                _: 2\n              }, 1032, [\"title\", \"cardType\"])\n            ]))\n          }), 128))\n        ])\n      ]),\n      false\n        ? (_openBlock(), _createElementBlock(\"section\", _hoisted_8, [\n            _createElementVNode(\"div\", _hoisted_9, [\n              _createVNode(GameCard, {\n                title: currentCharacter.value ? currentCharacter.value.name : 'No Character Selected',\n                subtitle: currentCharacter.value ? currentCharacter.value.archetype : '',\n                cardType: _unref(CardType).CHARACTER\n              }, {\n                default: _withCtx(() => [\n                  (currentCharacter.value)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                        _createElementVNode(\"p\", null, _toDisplayString(currentCharacter.value.description), 1),\n                        (currentCharacter.value.specialAbility)\n                          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n                              _cache[12] || (_cache[12] = _createElementVNode(\"h4\", null, \"Special Ability:\", -1)),\n                              _createElementVNode(\"p\", null, _toDisplayString(currentCharacter.value.specialAbility.name) + \": \" + _toDisplayString(currentCharacter.value.specialAbility.description), 1)\n                            ]))\n                          : _createCommentVNode(\"\", true)\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              }, 8, [\"title\", \"subtitle\", \"cardType\"])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true),\n      false\n        ? (_openBlock(), _createElementBlock(\"section\", _hoisted_12, [\n            _createElementVNode(\"div\", _hoisted_13, [\n              _createVNode(GameCard, {\n                title: currentLandscape.value.name,\n                subtitle: currentLandscape.value.description,\n                cardType: _unref(CardType).LANDSCAPE\n              }, {\n                default: _withCtx(() => [\n                  (currentLandscape.value.availableResources && currentLandscape.value.availableResources.length)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                        _cache[13] || (_cache[13] = _createElementVNode(\"h4\", null, \"Available Resources:\", -1)),\n                        _createElementVNode(\"ul\", null, [\n                          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(currentLandscape.value.availableResources, (resourceId) => {\n                            return (_openBlock(), _createElementBlock(\"li\", { key: resourceId }, _toDisplayString(getCardResourceName(resourceId)), 1))\n                          }), 128))\n                        ])\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              }, 8, [\"title\", \"subtitle\", \"cardType\"])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"section\", _hoisted_15, [\n        _cache[67] || (_cache[67] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"GameBoardView\", -1)),\n        _cache[68] || (_cache[68] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"115px\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"PhaseContent\", -1)),\n        _createVNode(PlayerDashboard),\n        (_unref(gameStore).currentPhase === _unref(GamePhase).SEASONAL_ASSESSMENT)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n              _cache[15] || (_cache[15] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"SeasonalAssessmentPhase\", -1)),\n              _createVNode(GameCard, {\n                title: \"Continue Journey\",\n                cardType: \"ACTION\",\n                onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(gameStore).advancePhase()))\n              }, {\n                default: _withCtx(() => _cache[14] || (_cache[14] = [\n                  _createElementVNode(\"div\", { style: {\"font-size\":\"1.1rem\",\"padding\":\"10px\"} }, \" Proceed to the next phase of your adventure \", -1)\n                ])),\n                _: 1\n              })\n            ]))\n          : (_unref(gameStore).currentPhase === _unref(GamePhase).EXPLORATION)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n                _cache[16] || (_cache[16] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"EXPLORATION\", -1)),\n                _createElementVNode(\"div\", _hoisted_18, [\n                  _createElementVNode(\"p\", null, \"You are exploring \" + _toDisplayString(currentLandscape.value?.name) + \". What will you discover?\", 1)\n                ]),\n                _createElementVNode(\"button\", {\n                  onClick: _cache[1] || (_cache[1] = ($event: any) => (_unref(gameStore).advancePhase())),\n                  style: {\"margin-top\":\"5px\",\"font-weight\":\"bold\",\"padding\":\"5px 10px\",\"font-size\":\"0.9rem\",\"border-radius\":\"6px\",\"cursor\":\"pointer\",\"background\":\"linear-gradient(to bottom, #8c7851, #5a3e2b)\",\"border\":\"2px solid #f0c8a0\",\"color\":\"#fff\",\"transition\":\"all 0.3s ease\"}\n                }, \" Continue to Next Phase \")\n              ]))\n            : (_unref(gameStore).currentPhase === _unref(GamePhase).CHALLENGE && currentChallenge.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                  _cache[19] || (_cache[19] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"CHALLENGE\", -1)),\n                  _createElementVNode(\"div\", _hoisted_20, [\n                    _createVNode(GameCard, {\n                      title: currentChallenge.value.name,\n                      subtitle: currentChallenge.value.description,\n                      cardType: _unref(CardType).CHARACTER\n                    }, {\n                      default: _withCtx(() => [\n                        _createElementVNode(\"div\", null, [\n                          _createElementVNode(\"p\", null, [\n                            _cache[17] || (_cache[17] = _createElementVNode(\"strong\", null, \"Difficulty:\", -1)),\n                            _createTextVNode(\" \" + _toDisplayString(currentChallenge.value.difficulty), 1)\n                          ]),\n                          (currentChallenge.value.rewards)\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [\n                                _cache[18] || (_cache[18] = _createElementVNode(\"h4\", null, \"Rewards:\", -1)),\n                                _createElementVNode(\"ul\", null, [\n                                  (currentChallenge.value.rewards.resources)\n                                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_22, \"Resources: \" + _toDisplayString(currentChallenge.value.rewards.resources.join(', ')), 1))\n                                    : _createCommentVNode(\"\", true),\n                                  (currentChallenge.value.rewards.experience)\n                                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_23, \"Experience: \" + _toDisplayString(currentChallenge.value.rewards.experience), 1))\n                                    : _createCommentVNode(\"\", true),\n                                  (currentChallenge.value.rewards.knowledge)\n                                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_24, \"Knowledge: \" + _toDisplayString(currentChallenge.value.rewards.knowledge), 1))\n                                    : _createCommentVNode(\"\", true)\n                                ])\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ])\n                      ]),\n                      _: 1\n                    }, 8, [\"title\", \"subtitle\", \"cardType\"])\n                  ]),\n                  _createElementVNode(\"div\", _hoisted_25, [\n                    _createElementVNode(\"p\", null, \"Difficulty: \" + _toDisplayString(getChallengeDifficulty()), 1)\n                  ]),\n                  _createElementVNode(\"div\", { class: \"challenge-actions mt-4\" }, [\n                    _createElementVNode(\"button\", {\n                      onClick: resolveChallenge,\n                      class: \"btn btn--primary\"\n                    }, \" Face Challenge \"),\n                    _createElementVNode(\"button\", {\n                      onClick: avoidChallenge,\n                      class: \"btn btn--secondary ml-2\"\n                    }, \" Avoid (Lose 1 Health) \")\n                  ])\n                ]))\n              : (_unref(gameStore).currentPhase === _unref(GamePhase).CHALLENGE_RESOLUTION && lastChallengeResult.value)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [\n                    _cache[21] || (_cache[21] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"CHALLENGE OUTCOME\", -1)),\n                    _createElementVNode(\"div\", {\n                      class: _normalizeClass([\"challenge-result\", { \n            'success': lastChallengeResult.value.success, \n            'partial-success': lastChallengeResult.value.partialSuccess,\n            'failure': !lastChallengeResult.value.success && !lastChallengeResult.value.partialSuccess\n          }])\n                    }, [\n                      _createElementVNode(\"h3\", null, _toDisplayString(lastChallengeResult.value.success ? 'Success!' : lastChallengeResult.value.partialSuccess ? 'Partial Success' : 'Failure'), 1),\n                      _createElementVNode(\"p\", null, _toDisplayString(lastChallengeResult.value.message), 1)\n                    ], 2),\n                    _createVNode(GameCard, {\n                      title: \"Continue to Next Phase\",\n                      cardType: \"ACTION\",\n                      onClick: _cache[2] || (_cache[2] = ($event: any) => (_unref(gameStore).advancePhase()))\n                    }, {\n                      default: _withCtx(() => _cache[20] || (_cache[20] = [\n                        _createElementVNode(\"div\", { style: {\"font-size\":\"1rem\",\"padding\":\"5px\"} }, \" Proceed with your journey \", -1)\n                      ])),\n                      _: 1\n                    })\n                  ]))\n                : (_unref(gameStore).currentPhase === _unref(GamePhase).THREAT_LEVEL_CHECK)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [\n                      _cache[25] || (_cache[25] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"ThreatLevelCheckPhase\", -1)),\n                      _cache[26] || (_cache[26] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"THREAT LEVEL CHECK\", -1)),\n                      _createElementVNode(\"div\", _hoisted_28, [\n                        _createElementVNode(\"p\", null, [\n                          _cache[22] || (_cache[22] = _createTextVNode(\"The threat level in the Celtic Realm is currently: \")),\n                          _createElementVNode(\"strong\", null, _toDisplayString(_unref(gameStore).threatTokens), 1)\n                        ]),\n                        _cache[23] || (_cache[23] = _createElementVNode(\"div\", null, null, -1))\n                      ]),\n                      _createVNode(GameCard, {\n                        title: \"Remain Vigilant\",\n                        cardType: \"ACTION\",\n                        onClick: _cache[3] || (_cache[3] = ($event: any) => (_unref(gameStore).advancePhase()))\n                      }, {\n                        default: _withCtx(() => _cache[24] || (_cache[24] = [\n                          _createElementVNode(\"div\", { style: {\"font-size\":\"1.1rem\",\"padding\":\"10px\"} }, \" Stay alert and advance to the next phase \", -1)\n                        ])),\n                        _: 1\n                      })\n                    ]))\n                  : (_unref(gameStore).currentPhase === _unref(GamePhase).RESOURCE_MANAGEMENT)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [\n                        _cache[30] || (_cache[30] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"ResourceManagementPhase\", -1)),\n                        _cache[31] || (_cache[31] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"RESOURCE MANAGEMENT\", -1)),\n                        _createVNode(ResourceManagement),\n                        _createElementVNode(\"div\", _hoisted_30, [\n                          _createVNode(GameCard, {\n                            title: \"Gather Resources\",\n                            cardType: \"ACTION\",\n                            onClick: gatherResources,\n                            class: _normalizeClass({'disabled-card': _unref(playerStore).isResourceCapacityReached}),\n                            disabled: _unref(playerStore).isResourceCapacityReached\n                          }, {\n                            default: _withCtx(() => _cache[27] || (_cache[27] = [\n                              _createElementVNode(\"div\", { style: {\"font-size\":\"1rem\",\"padding\":\"5px\"} }, \" Collect resources from the environment \", -1)\n                            ])),\n                            _: 1\n                          }, 8, [\"class\", \"disabled\"]),\n                          _createVNode(GameCard, {\n                            title: \"Continue Journey\",\n                            cardType: \"ACTION\",\n                            onClick: _unref(gameStore).advancePhase,\n                            style: {\"margin-left\":\"8px\"}\n                          }, {\n                            default: _withCtx(() => _cache[28] || (_cache[28] = [\n                              _createElementVNode(\"div\", { style: {\"font-size\":\"1rem\",\"padding\":\"5px\"} }, \" Move to the next phase \", -1)\n                            ])),\n                            _: 1\n                          }, 8, [\"onClick\"])\n                        ]),\n                        (_unref(playerStore).isResourceCapacityReached)\n                          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, _cache[29] || (_cache[29] = [\n                              _createElementVNode(\"p\", null, \"You've reached your resource capacity!\", -1)\n                            ])))\n                          : _createCommentVNode(\"\", true)\n                      ]))\n                    : (_unref(gameStore).currentPhase === _unref(GamePhase).ANIMAL_COMPANION)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n                          _cache[33] || (_cache[33] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"AnimalCompanionPhase\", -1)),\n                          _cache[34] || (_cache[34] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"ANIMAL COMPANION\", -1)),\n                          (_unref(playerStore).animalCompanions.length === 0)\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [\n                                _createVNode(AnimalCompanionSelection, { onSelectCompanion: selectCompanion }),\n                                _createElementVNode(\"div\", _hoisted_34, [\n                                  _createVNode(GameCard, {\n                                    title: \"Skip Animal Companion\",\n                                    cardType: \"ACTION\",\n                                    onClick: advancePhase\n                                  }, {\n                                    default: _withCtx(() => _cache[32] || (_cache[32] = [\n                                      _createElementVNode(\"div\", { style: {\"font-size\":\"1rem\",\"padding\":\"5px\"} }, \" Continue without a companion \", -1)\n                                    ])),\n                                    _: 1\n                                  })\n                                ])\n                              ]))\n                            : (_openBlock(), _createElementBlock(\"div\", _hoisted_35, [\n                                _createVNode(CompanionManagement),\n                                _createElementVNode(\"div\", { class: \"action-buttons mt-4\" }, [\n                                  _createElementVNode(\"button\", {\n                                    class: \"btn btn--primary\",\n                                    onClick: advancePhase\n                                  }, \" Continue Journey \")\n                                ])\n                              ]))\n                        ]))\n                      : (_unref(gameStore).currentPhase === _unref(GamePhase).CRAFTING)\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_36, [\n                            _cache[35] || (_cache[35] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"CraftingPhase\", -1)),\n                            _cache[36] || (_cache[36] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"CRAFTING\", -1)),\n                            _createVNode(CraftingStation)\n                          ]))\n                        : (_unref(gameStore).currentPhase === _unref(GamePhase).JOURNEY)\n                          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, [\n                              _cache[38] || (_cache[38] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"JOURNEY\", -1)),\n                              _createVNode(GameMap),\n                              _createElementVNode(\"div\", _hoisted_38, [\n                                _createVNode(GameCard, {\n                                  title: \"Journey Onwards\",\n                                  cardType: \"ACTION\",\n                                  onClick: _cache[4] || (_cache[4] = ($event: any) => (_unref(gameStore).advanceJourney(1)))\n                                }, {\n                                  default: _withCtx(() => _cache[37] || (_cache[37] = [\n                                    _createElementVNode(\"div\", { style: {\"font-size\":\"1rem\",\"padding\":\"5px\"} }, \" Continue your travels \", -1)\n                                  ])),\n                                  _: 1\n                                })\n                              ])\n                            ]))\n                          : (_unref(gameStore).currentPhase === _unref(GamePhase).JOURNEY_PROGRESSION)\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, [\n                                _cache[42] || (_cache[42] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"JourneyProgressionPhase\", -1)),\n                                _cache[43] || (_cache[43] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"JOURNEY PROGRESSION\", -1)),\n                                _createElementVNode(\"div\", _hoisted_40, [\n                                  _cache[41] || (_cache[41] = _createElementVNode(\"p\", null, \"You are ready to journey to the next landscape.\", -1)),\n                                  (nextLandscape.value)\n                                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_41, [\n                                        _createVNode(GameCard, {\n                                          title: nextLandscape.value.name,\n                                          subtitle: \"Next Landscape\",\n                                          cardType: _unref(CardType).LANDSCAPE,\n                                          onClick: _cache[5] || (_cache[5] = ($event: any) => (startNewTurn()))\n                                        }, {\n                                          default: _withCtx(() => [\n                                            _createElementVNode(\"p\", null, _toDisplayString(nextLandscape.value.description), 1),\n                                            _cache[39] || (_cache[39] = _createElementVNode(\"div\", {\n                                              class: \"action-text\",\n                                              style: {\"font-weight\":\"bold\",\"margin-top\":\"10px\",\"text-align\":\"center\",\"color\":\"#5a3e2b\"}\n                                            }, \" Click to journey to this location \", -1))\n                                          ]),\n                                          _: 1\n                                        }, 8, [\"title\", \"cardType\"])\n                                      ]))\n                                    : (_openBlock(), _createElementBlock(\"div\", _hoisted_42, [\n                                        _createVNode(GameCard, {\n                                          title: \"Continue Journey\",\n                                          cardType: \"ACTION\",\n                                          onClick: _cache[6] || (_cache[6] = ($event: any) => (_unref(gameStore).advancePhase()))\n                                        }, {\n                                          default: _withCtx(() => _cache[40] || (_cache[40] = [\n                                            _createElementVNode(\"div\", { style: {\"font-size\":\"1.1rem\",\"padding\":\"10px\"} }, \" Begin the next turn of your adventure \", -1)\n                                          ])),\n                                          _: 1\n                                        })\n                                      ]))\n                                ])\n                              ]))\n                            : (_unref(gameStore).currentPhase === _unref(GamePhase).LANDSCAPE_CHALLENGE)\n                              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_43, [\n                                  _cache[60] || (_cache[60] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"LandscapeChallengePhase\", -1)),\n                                  _cache[61] || (_cache[61] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"LANDSCAPE CHALLENGE\", -1)),\n                                  _createElementVNode(\"div\", _hoisted_44, [\n                                    _cache[59] || (_cache[59] = _createElementVNode(\"p\", null, \"The landscape presents challenges and opportunities. Overcome them to continue your journey.\", -1)),\n                                    _createElementVNode(\"div\", _hoisted_45, [\n                                      _createElementVNode(\"p\", null, [\n                                        _cache[44] || (_cache[44] = _createTextVNode(\"Current Landscape: \")),\n                                        _createElementVNode(\"strong\", null, _toDisplayString(currentLandscape.value?.name || 'Unknown'), 1)\n                                      ]),\n                                      _createElementVNode(\"p\", null, [\n                                        _cache[45] || (_cache[45] = _createTextVNode(\"Challenge Type: \")),\n                                        _createElementVNode(\"strong\", null, _toDisplayString(currentLandscape.value?.challenges?.[0]?.type || 'Unknown'), 1)\n                                      ]),\n                                      _createElementVNode(\"div\", _hoisted_46, [\n                                        _createElementVNode(\"div\", _hoisted_47, [\n                                          _createElementVNode(\"p\", _hoisted_48, [\n                                            _cache[46] || (_cache[46] = _createTextVNode(\"Base Difficulty: \")),\n                                            _createElementVNode(\"strong\", null, _toDisplayString(currentLandscape.value?.challenges?.[0]?.difficulty || 4), 1)\n                                          ]),\n                                          _createElementVNode(\"p\", _hoisted_49, [\n                                            _cache[47] || (_cache[47] = _createTextVNode(\"Season Modifier: \")),\n                                            _createElementVNode(\"strong\", null, _toDisplayString(getSeasonModifier()), 1)\n                                          ]),\n                                          _createElementVNode(\"p\", _hoisted_50, [\n                                            _cache[48] || (_cache[48] = _createTextVNode(\"Threat Modifier: \")),\n                                            _createElementVNode(\"strong\", null, \"+\" + _toDisplayString(Math.floor(_unref(gameStore).threatTokens / 3)), 1)\n                                          ]),\n                                          _createElementVNode(\"p\", _hoisted_51, [\n                                            _cache[49] || (_cache[49] = _createElementVNode(\"u\", null, \"Total Difficulty:\", -1)),\n                                            _cache[50] || (_cache[50] = _createTextVNode()),\n                                            _createElementVNode(\"strong\", null, _toDisplayString(getChallengeDifficulty()), 1)\n                                          ])\n                                        ]),\n                                        _createElementVNode(\"div\", _hoisted_52, [\n                                          _cache[56] || (_cache[56] = _createElementVNode(\"p\", { style: {\"margin\":\"4px 0\"} }, [\n                                            _createElementVNode(\"u\", null, \"Your Bonus:\")\n                                          ], -1)),\n                                          _createElementVNode(\"p\", _hoisted_53, [\n                                            _cache[51] || (_cache[51] = _createTextVNode(\"Character Ability: \")),\n                                            _createElementVNode(\"strong\", null, _toDisplayString(_unref(playerStore).selectedCharacter?.abilityModifier || 0), 1)\n                                          ]),\n                                          _createElementVNode(\"p\", _hoisted_54, [\n                                            _cache[52] || (_cache[52] = _createTextVNode(\"Item Bonuses: \")),\n                                            _createElementVNode(\"strong\", null, _toDisplayString(getItemBonuses()), 1)\n                                          ]),\n                                          _createElementVNode(\"p\", _hoisted_55, [\n                                            _cache[53] || (_cache[53] = _createTextVNode(\"Blessing Tokens: \")),\n                                            _createElementVNode(\"strong\", null, \"+\" + _toDisplayString(_unref(gameStore).blessingTokens), 1)\n                                          ]),\n                                          _createElementVNode(\"p\", _hoisted_56, [\n                                            _cache[54] || (_cache[54] = _createElementVNode(\"u\", null, \"Total Bonus:\", -1)),\n                                            _cache[55] || (_cache[55] = _createTextVNode()),\n                                            _createElementVNode(\"strong\", null, _toDisplayString(getTotalBonus()), 1)\n                                          ])\n                                        ])\n                                      ])\n                                    ]),\n                                    _createElementVNode(\"div\", _hoisted_57, [\n                                      _createVNode(GameCard, {\n                                        title: \"Roll D8 and Resolve Challenge\",\n                                        cardType: \"ACTION\",\n                                        onClick: _cache[7] || (_cache[7] = ($event: any) => (resolveChallengeLandscape()))\n                                      }, {\n                                        default: _withCtx(() => _cache[57] || (_cache[57] = [\n                                          _createElementVNode(\"div\", { style: {\"font-size\":\"1rem\",\"padding\":\"5px\"} }, \" Test your skills against the challenge \", -1)\n                                        ])),\n                                        _: 1\n                                      }),\n                                      _createVNode(GameCard, {\n                                        title: \"Avoid Challenge\",\n                                        cardType: \"ACTION\",\n                                        onClick: _cache[8] || (_cache[8] = ($event: any) => (avoidChallengeLandscape()))\n                                      }, {\n                                        default: _withCtx(() => _cache[58] || (_cache[58] = [\n                                          _createElementVNode(\"div\", { style: {\"font-size\":\"1rem\",\"padding\":\"5px\"} }, \" Cost: 2 Resources \", -1)\n                                        ])),\n                                        _: 1\n                                      })\n                                    ])\n                                  ])\n                                ]))\n                              : (_unref(gameStore).currentPhase === _unref(GamePhase).CHALLENGE_RESOLUTION)\n                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_58, [\n                                    _cache[63] || (_cache[63] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"ChallengeResolutionPhase\", -1)),\n                                    _cache[64] || (_cache[64] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"CHALLENGE RESOLUTION\", -1)),\n                                    _cache[65] || (_cache[65] = _createElementVNode(\"div\", { class: \"phase-description\" }, [\n                                      _createElementVNode(\"p\", null, \"Resolve the current challenge with your skills and resources.\")\n                                    ], -1)),\n                                    _createVNode(GameCard, {\n                                      title: \"Continue to Next Phase\",\n                                      cardType: \"ACTION\",\n                                      onClick: _cache[9] || (_cache[9] = ($event: any) => (_unref(gameStore).advancePhase()))\n                                    }, {\n                                      default: _withCtx(() => _cache[62] || (_cache[62] = [\n                                        _createElementVNode(\"div\", { style: {\"font-size\":\"1rem\",\"padding\":\"5px\"} }, \" Proceed with your journey \", -1)\n                                      ])),\n                                      _: 1\n                                    })\n                                  ]))\n                                : (_unref(gameStore).currentPhase === _unref(GamePhase).SEASONAL_ASSESSMENT)\n                                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_59, [\n                                      _createVNode(GameCard, {\n                                        title: \"Continue Journey\",\n                                        cardType: \"ACTION\",\n                                        onClick: _cache[10] || (_cache[10] = ($event: any) => (_unref(gameStore).advancePhase()))\n                                      }, {\n                                        default: _withCtx(() => _cache[66] || (_cache[66] = [\n                                          _createElementVNode(\"div\", { style: {\"font-size\":\"1.1rem\",\"padding\":\"10px\"} }, \" Proceed to the next phase of your adventure \", -1)\n                                        ])),\n                                        _: 1\n                                      })\n                                    ]))\n                                  : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _createElementVNode(\"aside\", _hoisted_60, [\n      _createVNode(GameLog)\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"game-board\" style=\"border: 2px solid lightblue; position: relative;\">\n    <main class=\"game-content\">\n      <!-- Cards Row Section -->\n      <section class=\"cards-row-section\">\n        <div class=\"cards-row\">\n          <div class=\"card-item\">\n            <GameCard\n              :title=\"formatSeason(gameStore.currentSeason)\"\n              subtitle=\"Current Season\"\n              :cardType=\"CardType.SEASON\"\n            >\n              <p>The seasons affect which resources are available and the effectiveness of your animal companions.</p>\n            </GameCard>\n          </div>\n          \n          <div v-if=\"currentLandscape\" class=\"card-item\">\n            <GameCard\n              :title=\"currentLandscape.name\"\n              subtitle=\"Current Landscape\"\n              :cardType=\"CardType.LANDSCAPE\"\n            >\n              <p>{{ currentLandscape.description }}</p>\n            </GameCard>\n          </div>\n          \n          <div v-if=\"currentCharacter\" class=\"card-item\">\n            <GameCard\n              :title=\"currentCharacter.name\"\n              subtitle=\"Your Character\"\n              :cardType=\"CardType.CHARACTER\"\n            >\n              <p>{{ currentCharacter.specialAbility.name }}: {{ currentCharacter.specialAbility.description }}</p>\n            </GameCard>\n          </div>\n          \n          <!-- Resource Cards -->\n          <div v-for=\"resourceId in playerStore.resources\" :key=\"resourceId\" class=\"card-item\">\n            <GameCard\n              :title=\"getCardResourceName(resourceId)\"\n              subtitle=\"Resource\"\n              :cardType=\"CardType.RESOURCE\"\n            >\n              <p>{{ getResourceDescription(resourceId) }}</p>\n            </GameCard>\n          </div>\n          \n          <!-- Crafted Item Cards -->\n          <div v-for=\"itemId in playerStore.craftedItems\" :key=\"itemId\" class=\"card-item\">\n            <GameCard\n              :title=\"getCraftedItemName(itemId)\"\n              subtitle=\"Crafted Item\"\n              :cardType=\"CardType.CRAFTED_ITEM\"\n            >\n              <p>{{ getCraftedItemDescription(itemId) }}</p>\n            </GameCard>\n          </div>\n        </div>\n      </section>\n\n      <!-- Character Section -->\n      <section class=\"character-section\" v-if=\"false\">\n        <div class=\"character-card-container\">\n          <GameCard\n            :title=\"currentCharacter ? currentCharacter.name : 'No Character Selected'\"\n            :subtitle=\"currentCharacter ? currentCharacter.archetype : ''\"\n            :cardType=\"CardType.CHARACTER\"\n          >\n            <div v-if=\"currentCharacter\">\n              <p>{{ currentCharacter.description }}</p>\n              <div v-if=\"currentCharacter.specialAbility\">\n                <h4>Special Ability:</h4>\n                <p>{{ currentCharacter.specialAbility.name }}: {{ currentCharacter.specialAbility.description }}</p>\n              </div>\n            </div>\n          </GameCard>\n        </div>\n      </section>\n      \n      <!-- Landscape Section -->\n      <section class=\"landscape-section\" v-if=\"false\">\n        <div class=\"landscape-card-container\">\n          <GameCard \n            :title=\"currentLandscape.name\" \n            :subtitle=\"currentLandscape.description\" \n            :cardType=\"CardType.LANDSCAPE\"\n          >\n            <div v-if=\"currentLandscape.availableResources && currentLandscape.availableResources.length\">\n              <h4>Available Resources:</h4>\n              <ul>\n                <li v-for=\"resourceId in currentLandscape.availableResources\" :key=\"resourceId\">\n                  {{ getCardResourceName(resourceId) }}\n                </li>\n              </ul>\n            </div>\n          </GameCard>\n        </div>\n      </section>\n      \n      <!-- Phase-specific content -->\n      <section class=\"phase-content\" style=\"border: 2px solid lightblue; position: relative; margin-top: 0; padding: 5px; background-color: rgba(240, 230, 210, 0.3); border-radius: 8px; border: 1px solid #8c7851;\">\n        <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">GameBoardView</div>\n        <div style=\"position: absolute; top: -20px; left: 115px; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">PhaseContent</div>\n        <!-- Player Dashboard -->\n        <PlayerDashboard />\n        \n        <!-- Seasonal Assessment Phase -->\n        <div v-if=\"gameStore.currentPhase === GamePhase.SEASONAL_ASSESSMENT\" style=\"display: flex; flex-direction: column; align-items: center; width: 100%; position: relative; border: 2px solid lightblue; padding: 5px;\">\n          <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">SeasonalAssessmentPhase</div>\n          <GameCard \n            title=\"Continue Journey\" \n            cardType=\"ACTION\"\n            @click=\"gameStore.advancePhase()\"\n          >\n            <div style=\"font-size: 1.1rem; padding: 10px;\">\n              Proceed to the next phase of your adventure\n            </div>\n          </GameCard>\n        </div>\n        \n        <!-- Exploration Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.EXPLORATION\">\n          <h2 class=\"phase-title\">EXPLORATION</h2>\n          <div class=\"phase-description\">\n            <p>You are exploring {{ currentLandscape?.name }}. What will you discover?</p>\n          </div>\n          <button @click=\"gameStore.advancePhase()\" style=\"margin-top: 5px; font-weight: bold; padding: 5px 10px; font-size: 0.9rem; border-radius: 6px; cursor: pointer; background: linear-gradient(to bottom, #8c7851, #5a3e2b); border: 2px solid #f0c8a0; color: #fff; transition: all 0.3s ease;\">\n            Continue to Next Phase\n          </button>\n        </div>\n        \n        <!-- Challenge Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.CHALLENGE && currentChallenge\">\n          <h2 class=\"phase-title\">CHALLENGE</h2>\n          <div class=\"challenge-card-container\">\n            <GameCard \n              :title=\"currentChallenge.name\" \n              :subtitle=\"currentChallenge.description\" \n              :cardType=\"CardType.CHARACTER\"\n            >\n              <div>\n                <p><strong>Difficulty:</strong> {{ currentChallenge.difficulty }}</p>\n                <div v-if=\"currentChallenge.rewards\">\n                  <h4>Rewards:</h4>\n                  <ul>\n                    <li v-if=\"currentChallenge.rewards.resources\">Resources: {{ currentChallenge.rewards.resources.join(', ') }}</li>\n                    <li v-if=\"currentChallenge.rewards.experience\">Experience: {{ currentChallenge.rewards.experience }}</li>\n                    <li v-if=\"currentChallenge.rewards.knowledge\">Knowledge: {{ currentChallenge.rewards.knowledge }}</li>\n                  </ul>\n                </div>\n              </div>\n            </GameCard>\n          </div>\n          \n          <div class=\"challenge-details mt-4\">\n            <p>Difficulty: {{ getChallengeDifficulty() }}</p>\n          </div>\n          \n          <div class=\"challenge-actions mt-4\">\n            <button \n              @click=\"resolveChallenge\" \n              class=\"btn btn--primary\"\n            >\n              Face Challenge\n            </button>\n            <button \n              @click=\"avoidChallenge\" \n              class=\"btn btn--secondary ml-2\"\n            >\n              Avoid (Lose 1 Health)\n            </button>\n          </div>\n        </div>\n        \n        <!-- Challenge Resolution Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.CHALLENGE_RESOLUTION && lastChallengeResult\">\n          <h2 class=\"phase-title\">CHALLENGE OUTCOME</h2>\n          \n          <div class=\"challenge-result\" :class=\"{ \n            'success': lastChallengeResult.success, \n            'partial-success': lastChallengeResult.partialSuccess,\n            'failure': !lastChallengeResult.success && !lastChallengeResult.partialSuccess\n          }\">\n            <h3>{{ lastChallengeResult.success ? 'Success!' : lastChallengeResult.partialSuccess ? 'Partial Success' : 'Failure' }}</h3>\n            <p>{{ lastChallengeResult.message }}</p>\n          </div>\n          \n          <GameCard \n            title=\"Continue to Next Phase\" \n            cardType=\"ACTION\"\n            @click=\"gameStore.advancePhase()\"\n          >\n            <div style=\"font-size: 1rem; padding: 5px;\">\n              Proceed with your journey\n            </div>\n          </GameCard>\n        </div>\n        \n        <!-- Threat Level Check Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.THREAT_LEVEL_CHECK\" style=\"position: relative; border: 2px solid lightblue; padding: 10px;\">\n          <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">ThreatLevelCheckPhase</div>\n          <h2 class=\"phase-title\">THREAT LEVEL CHECK</h2>\n          <div class=\"phase-description\">\n            <p>The threat level in the Celtic Realm is currently: <strong>{{ gameStore.threatTokens }}</strong></p>\n            <div>\n              <!-- Threat meter removed -->\n            </div>\n          </div>\n          <GameCard \n            title=\"Remain Vigilant\" \n            cardType=\"ACTION\"\n            @click=\"gameStore.advancePhase()\"\n          >\n            <div style=\"font-size: 1.1rem; padding: 10px;\">\n              Stay alert and advance to the next phase\n            </div>\n          </GameCard>\n        </div>\n        \n        <!-- Resource Management Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.RESOURCE_MANAGEMENT\" style=\"position: relative; border: 2px solid lightblue; padding: 10px;\">\n          <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">ResourceManagementPhase</div>\n          <h2 class=\"phase-title\">RESOURCE MANAGEMENT</h2>\n          <ResourceManagement />\n          <div class=\"resource-actions mt-4\">\n            <GameCard \n              title=\"Gather Resources\" \n              cardType=\"ACTION\"\n              @click=\"gatherResources\"\n              :class=\"{'disabled-card': playerStore.isResourceCapacityReached}\"\n              :disabled=\"playerStore.isResourceCapacityReached\"\n            >\n              <div style=\"font-size: 1rem; padding: 5px;\">\n                Collect resources from the environment\n              </div>\n            </GameCard>\n            \n            <GameCard \n              title=\"Continue Journey\" \n              cardType=\"ACTION\"\n              @click=\"gameStore.advancePhase\"\n              style=\"margin-left: 8px;\"\n            >\n              <div style=\"font-size: 1rem; padding: 5px;\">\n                Move to the next phase\n              </div>\n            </GameCard>\n          </div>\n          \n          <div v-if=\"playerStore.isResourceCapacityReached\" class=\"resource-warning mt-2\">\n            <p>You've reached your resource capacity!</p>\n          </div>\n        </div>\n        \n        <!-- Animal Companion Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.ANIMAL_COMPANION\" style=\"position: relative; border: 2px solid lightblue; padding: 10px;\">\n          <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">AnimalCompanionPhase</div>\n          <h2 class=\"phase-title\">ANIMAL COMPANION</h2>\n          <div v-if=\"playerStore.animalCompanions.length === 0\">\n            <AnimalCompanionSelection\n              @select-companion=\"selectCompanion\"\n            />\n            \n            <div class=\"action-buttons mt-4\">\n              <GameCard \n                title=\"Skip Animal Companion\" \n                cardType=\"ACTION\"\n                @click=\"advancePhase\"\n              >\n                <div style=\"font-size: 1rem; padding: 5px;\">\n                  Continue without a companion\n                </div>\n              </GameCard>\n            </div>\n          </div>\n          \n          <div v-else>\n            <CompanionManagement />\n            \n            <div class=\"action-buttons mt-4\">\n              <button \n                class=\"btn btn--primary\"\n                @click=\"advancePhase\"\n              >\n                Continue Journey\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Crafting Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.CRAFTING\" style=\"position: relative; border: 2px solid lightblue; padding: 10px;\">\n          <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">CraftingPhase</div>\n          <h2 class=\"phase-title\">CRAFTING</h2>\n          <CraftingStation />\n        </div>\n        \n        <!-- Journey Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.JOURNEY\">\n          <h2 class=\"phase-title\">JOURNEY</h2>\n          <GameMap />\n          <div class=\"journey-actions mt-4\">\n            <GameCard \n              title=\"Journey Onwards\" \n              cardType=\"ACTION\"\n              @click=\"gameStore.advanceJourney(1)\"\n            >\n              <div style=\"font-size: 1rem; padding: 5px;\">\n                Continue your travels\n              </div>\n            </GameCard>\n          </div>\n        </div>\n        \n        <!-- Journey Progression Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.JOURNEY_PROGRESSION\" style=\"position: relative; border: 2px solid lightblue; padding: 10px;\">\n          <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">JourneyProgressionPhase</div>\n          <h2 class=\"phase-title\">JOURNEY PROGRESSION</h2>\n          <div class=\"phase-description\">\n            <p>You are ready to journey to the next landscape.</p>\n            <div v-if=\"nextLandscape\" class=\"next-landscape mt-4\">\n              <GameCard \n                :title=\"nextLandscape.name\" \n                subtitle=\"Next Landscape\"\n                :cardType=\"CardType.LANDSCAPE\"\n                @click=\"startNewTurn()\"\n              >\n                <p>{{ nextLandscape.description }}</p>\n                <div class=\"action-text\" style=\"font-weight: bold; margin-top: 10px; text-align: center; color: #5a3e2b;\">\n                  Click to journey to this location\n                </div>\n              </GameCard>\n            </div>\n            <div v-else class=\"mt-4\">\n              <GameCard \n                title=\"Continue Journey\" \n                cardType=\"ACTION\"\n                @click=\"gameStore.advancePhase()\"\n              >\n                <div style=\"font-size: 1.1rem; padding: 10px;\">\n                  Begin the next turn of your adventure\n                </div>\n              </GameCard>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Landscape Challenge Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.LANDSCAPE_CHALLENGE\" style=\"position: relative; border: 2px solid lightblue; padding: 10px;\">\n          <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">LandscapeChallengePhase</div>\n          <h2 class=\"phase-title\">LANDSCAPE CHALLENGE</h2>\n          <div class=\"phase-description\">\n            <p>The landscape presents challenges and opportunities. Overcome them to continue your journey.</p>\n            <div class=\"landscape-challenges\">\n              <p>Current Landscape: <strong>{{ currentLandscape?.name || 'Unknown' }}</strong></p>\n              <p>Challenge Type: <strong>{{ currentLandscape?.challenges?.[0]?.type || 'Unknown' }}</strong></p>\n              <div style=\"display: flex; margin-top: 5px; font-size: 0.85rem; color: #666;\">\n                <div style=\"flex: 1; margin-right: 5px;\">\n                  <p style=\"margin: 4px 0;\">Base Difficulty: <strong>{{ currentLandscape?.challenges?.[0]?.difficulty || 4 }}</strong></p>\n                  <p style=\"margin: 4px 0;\">Season Modifier: <strong>{{ getSeasonModifier() }}</strong></p>\n                  <p style=\"margin: 4px 0;\">Threat Modifier: <strong>+{{ Math.floor(gameStore.threatTokens / 3) }}</strong></p>\n                  <p style=\"margin: 4px 0;\"><u>Total Difficulty:</u> <strong>{{ getChallengeDifficulty() }}</strong></p>\n                </div>\n                \n                <div style=\"flex: 1; margin-left: 5px;\">\n                  <p style=\"margin: 4px 0;\"><u>Your Bonus:</u></p>\n                  <p style=\"margin: 4px 0;\">Character Ability: <strong>{{ playerStore.selectedCharacter?.abilityModifier || 0 }}</strong></p>\n                  <p style=\"margin: 4px 0;\">Item Bonuses: <strong>{{ getItemBonuses() }}</strong></p>\n                  <p style=\"margin: 4px 0;\">Blessing Tokens: <strong>+{{ gameStore.blessingTokens }}</strong></p>\n                  <p style=\"margin: 4px 0;\"><u>Total Bonus:</u> <strong>{{ getTotalBonus() }}</strong></p>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"challenge-actions\" style=\"margin-top: 20px; display: flex; gap: 10px;\">\n              <GameCard \n                title=\"Roll D8 and Resolve Challenge\" \n                cardType=\"ACTION\"\n                @click=\"resolveChallengeLandscape()\"\n              >\n                <div style=\"font-size: 1rem; padding: 5px;\">\n                  Test your skills against the challenge\n                </div>\n              </GameCard>\n              \n              <GameCard \n                title=\"Avoid Challenge\" \n                cardType=\"ACTION\"\n                @click=\"avoidChallengeLandscape()\"\n              >\n                <div style=\"font-size: 1rem; padding: 5px;\">\n                  Cost: 2 Resources\n                </div>\n              </GameCard>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Challenge Resolution Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.CHALLENGE_RESOLUTION\" style=\"position: relative; border: 2px solid lightblue; padding: 10px;\">\n          <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">ChallengeResolutionPhase</div>\n          <h2 class=\"phase-title\">CHALLENGE RESOLUTION</h2>\n          <div class=\"phase-description\">\n            <p>Resolve the current challenge with your skills and resources.</p>\n          </div>\n          <GameCard \n            title=\"Continue to Next Phase\" \n            cardType=\"ACTION\"\n            @click=\"gameStore.advancePhase()\"\n          >\n            <div style=\"font-size: 1rem; padding: 5px;\">\n              Proceed with your journey\n            </div>\n          </GameCard>\n        </div>\n        \n        <!-- Seasonal Assessment Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.SEASONAL_ASSESSMENT\">\n          <GameCard \n            title=\"Continue Journey\" \n            cardType=\"ACTION\"\n            @click=\"gameStore.advancePhase()\"\n          >\n            <div style=\"font-size: 1.1rem; padding: 10px;\">\n              Proceed to the next phase of your adventure\n            </div>\n          </GameCard>\n        </div>\n      </section>\n    </main>\n    \n    <aside class=\"game-log\">\n      <GameLog />\n    </aside>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport GameMap from '@/components/game/GameMap.vue';\nimport ResourceManagement from '@/components/game/ResourceManagement.vue';\nimport CraftingStation from '@/components/game/CraftingStation.vue';\nimport PlayerDashboard from '@/components/game/PlayerDashboard.vue';\nimport AnimalCompanionSelection from '@/components/game/AnimalCompanionSelection.vue';\nimport CompanionManagement from '@/components/game/CompanionManagement.vue';\nimport GameLog from '@/components/game/GameLog.vue';\nimport GameCard from '@/components/core/GameCard.vue';\nimport { GamePhase } from '@/models/enums/phases';\nimport { CardType } from '@/models/enums/cardTypes';\nimport { CraftingService } from '@/services/craftingService';\nimport type { ResourceCard } from '@/models/types/cards';\nimport type { LandscapeCard } from '@/models/types/cards';\nimport { Season } from '@/models/enums/seasons';\nimport { ChallengeType } from '@/models/enums/cardTypes';\n\n// Interface for challenge result\ninterface ChallengeResult {\n  success: boolean;\n  partialSuccess?: boolean;\n  partialSuccessExperience?: number;\n  partialSuccessSetback?: string;\n  message: string;\n  damage?: number;\n  rewards?: any;\n}\n\n// Initialize router and stores\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\n\n// Reactive references\nconst lastChallengeResult = ref<ChallengeResult | null>(null);\nconst selectedCompanion = ref<string | null>(null);\nconst craftingService = ref<CraftingService | null>(null);\n\n// Track seasonal quests\nconst seasonalQuests = ref([\n  { id: 'SAMHAIN', completed: false },\n  { id: 'WINTERS_DEPTH', completed: false },\n  { id: 'IMBOLC', completed: false },\n  { id: 'BELTANE', completed: false },\n  { id: 'LUGHNASADH', completed: false }\n]);\n\n// Initialize services after component is mounted\nonMounted(() => {\n  // Make sure the CraftingService is initialized correctly\n  try {\n    craftingService.value = new CraftingService();\n    console.log('CraftingService initialized successfully');\n  } catch (error) {\n    console.error('Error initializing CraftingService:', error);\n  }\n});\n\n// Game state\nconst currentLandscape = computed<LandscapeCard | null>(() => {\n  return gameStore.currentLandscape;\n});\n\nconst currentCharacter = computed(() => {\n  if (!playerStore.characterId) return null;\n  return cardStore.characters.find(char => char.id === playerStore.characterId);\n});\n\n// Computed properties\nconst currentChallenge = computed(() => {\n  if (!gameStore.currentChallenge) return null;\n  return cardStore.getChallengeById(gameStore.currentChallenge);\n});\n\nconst nextLandscape = computed(() => {\n  const cardStore = useCardStore();\n  // Get the next landscape index\n  const nextIndex = gameStore.journeyProgress + 1;\n  if (nextIndex < gameStore.journeyPath.length) {\n    const nextLandscapeId = gameStore.journeyPath[nextIndex];\n    return cardStore.getLandscapeById(nextLandscapeId);\n  }\n  return null;\n});\n\n// State for challenge resolution\n\n// Companion selection for ANIMAL_COMPANION phase\n\nconst selectCompanion = (companionId: string) => {\n  selectedCompanion.value = companionId;\n};\n\nconst clearSelectedCompanion = () => {\n  selectedCompanion.value = null;\n};\n\n// Check if current location is a healing location\nconst isHealingLocation = computed(() => {\n  if (!currentLandscape.value) return false;\n  return ['Sacred Oak Grove', 'Druid\\'s Sanctuary', 'Moonlit Loch'].includes(currentLandscape.value.name);\n});\n\n// Crafting computed properties\nconst craftableItems = computed(() => {\n  if (!playerStore.resources.length) return [];\n  \n  // Get list of craftable items based on player's resources\n  const craftableItemIds = playerStore.getCraftableItems();\n  \n  // Get full item objects for display\n  return craftableItemIds\n    .map(id => cardStore.getCraftedItemById(id))\n    .filter(item => item !== undefined);\n});\n\nconst currentLandscapeCraftingBonus = computed(() => {\n  if (!currentLandscape.value) return null;\n  \n  // Check if landscape has crafting bonuses\n  const landscape = currentLandscape.value;\n  \n  // Special crafting locations from game rules\n  if (landscape.name === 'Iron Forge Dell') return 1;\n  if (landscape.name === 'Sacred Oak Grove') return 1;\n  if (landscape.name === 'Druid\\'s Sanctuary') return 1;\n  if (landscape.name === 'Moonlit Loch') return 1;\n  \n  return null;\n});\n\n// Game actions\nconst resolveChallenge = () => {\n  if (!currentChallenge.value || !gameStore.currentChallenge) {\n    gameStore.addToGameLog(\"No active challenge to resolve.\", true);\n    return;\n  }\n  \n  console.log('Resolving challenge:', currentChallenge.value.name);\n  \n  // Calculate challenge difficulty including threat level\n  const baseDifficulty = currentChallenge.value.difficulty || 5;\n  const threatModifier = gameStore.threatLevel;\n  const seasonModifier = 0; // TODO: Add seasonal modifiers\n  const totalDifficulty = baseDifficulty + threatModifier + seasonModifier;\n  \n  // Calculate player's bonus\n  let playerBonus = 0;\n  \n  // Add bonuses from character\n  if (currentCharacter.value?.specialAbility) {\n    // Apply specific character bonuses if applicable\n    playerBonus += 1;\n  }\n  \n  // Add bonuses from animal companions\n  const animalBonus = playerStore.animalCompanions.length > 0 ? 1 : 0;\n  playerBonus += animalBonus;\n  \n  // Add bonuses from crafted items\n  const itemBonus = playerStore.craftedItems.length > 0 ? 1 : 0;\n  playerBonus += itemBonus;\n\n  // Helper function to format season names\n  const formatSeason = (season: Season): string => {\n    if (!season) return 'Unknown';\n    \n    // Convert enum value to readable format (e.g., SPRING to Spring)\n    const seasonName = season.toString();\n    return seasonName.charAt(0) + seasonName.slice(1).toLowerCase();\n  };\n\n  // Simulate rolling the 8-sided die\n  const dieRoll = Math.floor(Math.random() * 8) + 1;\n  const totalRoll = dieRoll + playerBonus;\n  \n  let success = false;\n  let partialSuccess = false;\n  let damage = 0;\n  \n  // Natural 8 always succeeds\n  if (dieRoll === 8) {\n    success = true;\n    gameStore.addToGameLog(\"Natural 8! Automatic success regardless of modifiers.\", true);\n  } else {\n    // Check for full success\n    success = totalRoll >= totalDifficulty;\n    \n    // Check for partial success (exactly one point below difficulty)\n    partialSuccess = !success && totalRoll === totalDifficulty - 1;\n  }\n  \n  if (success) {\n    // Handle success\n    lastChallengeResult.value = {\n      success: true,\n      message: `You successfully resolved the challenge! Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`\n    };\n    \n    gameStore.addToGameLog(`Success! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}.`, true);\n    \n    // Award experience\n    playerStore.gainExperience(1);\n    gameStore.addToGameLog(\"You gained 1 experience point!\", true);\n    \n    // Award resources (2 for full success)\n    if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n      let resourcesAwarded = 0;\n      while (resourcesAwarded < 2 && !playerStore.isResourceCapacityReached) {\n        const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n        const resourceId = currentLandscape.value.availableResources[randomIndex];\n        \n        // Verify that the resource exists in cardStore before adding it\n        const resourceExists = cardStore.getResourceById(resourceId);\n        if (!resourceExists) {\n          console.error(`Resource with ID ${resourceId} not found in cardStore`);\n          gameStore.addToGameLog(`You attempted to gather a resource, but it was unidentifiable.`, true);\n        } else {\n          const addResult = playerStore.addResource(resourceId);\n          if (addResult) {\n            const resource = cardStore.getResourceById(resourceId);\n            if (resource) {\n              gameStore.addToGameLog(`You gathered ${resource.name}.`, true);\n              resourcesAwarded++;\n            }\n          }\n        }\n      }\n    }\n    \n    // Clear the current challenge\n    gameStore.setCurrentChallenge(null);\n  } else if (partialSuccess) {\n    // Handle partial success\n    lastChallengeResult.value = {\n      success: false,\n      partialSuccess: true,\n      message: `You partially resolved the challenge. Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`\n    };\n    \n    gameStore.addToGameLog(`Partial success! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll}, just one point below difficulty ${totalDifficulty}.`, true);\n    \n    // Award experience (half for partial success)\n    if (Math.random() < 0.5) {\n      playerStore.gainExperience(1);\n      gameStore.addToGameLog(\"You gained 1 experience point for your effort!\", true);\n    }\n    \n    // Award 1 resource for partial success\n    if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n      const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n      const resourceId = currentLandscape.value.availableResources[randomIndex];\n      \n      // Verify that the resource exists in cardStore before adding it\n      const resourceExists = cardStore.getResourceById(resourceId);\n      if (!resourceExists) {\n        console.error(`Resource with ID ${resourceId} not found in cardStore`);\n        gameStore.addToGameLog(`You attempted to gather a resource, but it was unidentifiable.`, true);\n      } else {\n        const addResult = playerStore.addResource(resourceId);\n        if (addResult) {\n          const resource = cardStore.getResourceById(resourceId);\n          if (resource) {\n            gameStore.addToGameLog(`You gathered ${resource.name}.`, true);\n          }\n        }\n      }\n    }\n    \n    // Apply a minor setback based on challenge type\n    if (currentChallenge.value) {\n      const challengeType = currentChallenge.value.type;\n      let setbackMessage = \"\";\n      \n      switch (challengeType) {\n        case ChallengeType.STRENGTH:\n        case ChallengeType.AGILITY:\n          // Physical challenges\n          damage = 1;\n          playerStore.loseHealth(damage);\n          setbackMessage = `You suffer a minor injury. You lost ${damage} health point.`;\n          break;\n        case ChallengeType.WISDOM:\n          // Mental challenges\n          gameStore.addThreatTokens(1);\n          setbackMessage = \"Your confidence wavers. You gained 1 Threat token.\";\n          break;\n        case ChallengeType.DIPLOMACY:\n          // Social challenges\n          // Temporarily lose access to one random resource type\n          if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n            const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n            const resourceId = currentLandscape.value.availableResources[randomIndex];\n            const resource = cardStore.getResourceById(resourceId);\n            if (resource) {\n              gameStore.addTempEffect(`resource_block_${resourceId}`, \"Resource Unavailable\", `Cannot gather ${resource.name}`, 1, 1);\n              setbackMessage = `The local community withholds ${resource.name} from you for now.`;\n            }\n          }\n          break;\n        case ChallengeType.SURVIVAL:\n          // Survival/spiritual challenges\n          // Animal companions become wary\n          if (playerStore.animalCompanions.length > 0) {\n            const companionId = playerStore.animalCompanions[0];\n            // Mark companion as wary (will be implemented in Phase 4)\n            setbackMessage = \"Your animal companion becomes wary of this place.\";\n          } else {\n            gameStore.addThreatTokens(1);\n            setbackMessage = \"The spiritual imbalance increases. You gained 1 Threat token.\";\n          }\n          break;\n        default:\n          damage = 1;\n          playerStore.loseHealth(damage);\n          setbackMessage = `You encounter an unexpected setback. You lost ${damage} health point.`;\n      }\n      \n      gameStore.addToGameLog(`Setback: ${setbackMessage}`, true);\n    }\n    \n    // Clear the current challenge\n    gameStore.setCurrentChallenge(null);\n  } else {\n    // Handle failure\n    damage = 1; // Basic damage from failing challenge\n    \n    lastChallengeResult.value = {\n      success: false,\n      message: `You failed to resolve the challenge. Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`,\n      damage\n    };\n    \n    gameStore.addToGameLog(`Failure! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}.`, true);\n    \n    // Apply consequences - lose health\n    playerStore.loseHealth(damage);\n    gameStore.addToGameLog(`You lost ${damage} health point${damage > 1 ? 's' : ''}.`, true);\n    \n    // Check if player is still alive\n    if (playerStore.health <= 0) {\n      gameStore.addToGameLog(\"Your journey has come to an end...\", true);\n      endJourney();\n      return;\n    }\n  }\n  \n  // Move to the Challenge Resolution phase\n  gameStore.setPhase(GamePhase.CHALLENGE_RESOLUTION);\n};\n\nconst avoidChallenge = () => {\n  // It costs 1 health to avoid a challenge\n  playerStore.loseHealth(1);\n  gameStore.addToGameLog(\"You chose to avoid the challenge, losing 1 health in the process.\", true);\n  \n  // Skip directly to Resource Management\n  gameStore.setPhase(GamePhase.RESOURCE_MANAGEMENT);\n};\n\nconst getChallengeDifficulty = () => {\n  if (!currentLandscape.value) return 5;\n  \n  const baseDifficulty = currentLandscape.value.challenges?.[0]?.difficulty || 5;\n  const threatModifier = Math.floor(gameStore.threatTokens / 3);\n  \n  // Calculate season modifier based on current season\n  const seasonModifiers = {\n    [Season.SAMHAIN]: 0,\n    [Season.WINTERS_DEPTH]: -2,\n    [Season.IMBOLC]: -1,\n    [Season.BELTANE]: 1,\n    [Season.LUGHNASADH]: 2\n  };\n  const seasonModifier = seasonModifiers[gameStore.currentSeason] || 0;\n  \n  return baseDifficulty + threatModifier + seasonModifier;\n};\n\nconst getItemBonuses = () => {\n  // Safely calculate item bonuses\n  return playerStore.equippedItems?.reduce((total, item) => {\n    return total + (item?.challengeBonus || 0);\n  }, 0) || 0;\n};\n\nconst getTotalBonus = () => {\n  // Character ability modifier\n  const characterBonus = playerStore.selectedCharacter?.abilityModifier || 0;\n  \n  // Item bonuses from equipped items\n  const itemBonus = getItemBonuses();\n  \n  // Blessing tokens\n  const blessingBonus = gameStore.blessingTokens;\n  \n  return characterBonus + itemBonus + blessingBonus;\n};\n\nconst getSeasonModifier = () => {\n  const seasonModifiers = {\n    [Season.SAMHAIN]: 0,\n    [Season.WINTERS_DEPTH]: -2,\n    [Season.IMBOLC]: -1,\n    [Season.BELTANE]: 1,\n    [Season.LUGHNASADH]: 2\n  };\n  \n  return seasonModifiers[gameStore.currentSeason] || 0;\n};\n\nconst resolveChallengeLandscape = () => {\n  try {\n    // Roll the eight-sided die\n    const diceRoll = Math.floor(Math.random() * 8) + 1;\n    gameStore.addToGameLog(`You rolled a ${diceRoll} on a D8.`, true);\n    \n    const playerBonus = getTotalBonus();\n    const totalRoll = diceRoll + playerBonus;\n    const difficulty = getChallengeDifficulty();\n    \n    gameStore.addToGameLog(`You rolled a ${diceRoll} + ${playerBonus} bonus = ${totalRoll} total against difficulty ${difficulty}.`, true);\n    \n    // Natural 8 always succeeds\n    const isNaturalSuccess = diceRoll === 8;\n    const isSuccess = isNaturalSuccess || totalRoll >= difficulty;\n    \n    if (isNaturalSuccess) {\n      gameStore.addToGameLog(\"A natural 8! Automatic success regardless of difficulty!\", true);\n    }\n    \n    // Create and store the challenge result\n    lastChallengeResult.value = {\n      success: isSuccess,\n      message: isSuccess ? \n        \"You successfully overcome the landscape challenge!\" : \n        \"You failed to overcome the landscape challenge...\",\n      damage: isSuccess ? 0 : Math.max(1, Math.floor((difficulty - totalRoll) / 2))\n    };\n    \n    // Apply damage if failed\n    if (!isSuccess) {\n      playerStore.loseHealth(lastChallengeResult.value.damage);\n      gameStore.addToGameLog(`You lost ${lastChallengeResult.value.damage} health from failing the challenge.`, true);\n    }\n    \n    // Move to challenge resolution phase\n    gameStore.setPhase(GamePhase.CHALLENGE_RESOLUTION);\n  } catch (error) {\n    console.error(\"Error in resolveChallengeLandscape:\", error);\n    gameStore.addToGameLog(\"An error occurred while resolving the challenge.\", true, 'error');\n  }\n};\n\nconst avoidChallengeLandscape = () => {\n  // Check if player has at least 2 resources\n  const totalResources = playerStore.resources.length;\n  if (totalResources < 2) {\n    gameStore.addToGameLog(\"You need at least 2 resources to avoid this challenge!\", true);\n    return;\n  }\n  \n  // Spend 2 random resources\n  const spentResources = [];\n  for (let i = 0; i < 2; i++) {\n    if (playerStore.resources.length > 0) {\n      const index = Math.floor(Math.random() * playerStore.resources.length);\n      const resource = playerStore.resources.splice(index, 1)[0];\n      spentResources.push(resource);\n    }\n  }\n  \n  // Log the avoidance\n  const resourceNames = spentResources.map(r => r.name || r.id).join(\" and \");\n  gameStore.addToGameLog(`You spent ${resourceNames} to avoid the challenge.`, true);\n  \n  // Advance to resource management\n  gameStore.setPhase(GamePhase.RESOURCE_MANAGEMENT);\n};\n\nconst handleThreatCheck = () => {\n  // Log the threat level evaluation\n  gameStore.addToGameLog(`Threat level assessed at ${gameStore.threatTokens} tokens.`, true);\n\n  // Calculate challenge difficulty modifier\n  const threatModifier = Math.floor(gameStore.threatTokens / 3);\n  if (threatModifier > 0) {\n    gameStore.addToGameLog(`Challenge difficulty increased by +${threatModifier} due to threat level.`, false);\n  }\n\n  // Check for random event trigger\n  if (gameStore.threatTokens >= 5) {\n    gameStore.addToGameLog(`The elevated threat level brings uncertainty. Be prepared for a random event.`, false);\n  }\n\n  // Check for otherworldly manifestation\n  if (gameStore.threatTokens >= 10) {\n    gameStore.addToGameLog(`The veil between worlds grows thin! An Otherworldly Manifestation is imminent!`, true);\n  }\n\n  // Advance to the next phase\n  gameStore.advancePhase();\n};\n\nconst gatherResources = () => {\n  if (!currentLandscape.value || playerStore.isResourceCapacityReached) {\n    return;\n  }\n  \n  // Determine the number of resources the player can gather\n  let resourcesToGather = 1;\n  \n  // Add seasonal bonuses\n  if (gameStore.currentSeason === Season.LUGHNASADH) {\n    resourcesToGather += 1; // Lughnasadh gives +1 resource\n    gameStore.addToGameLog(\"The harvest season of Lughnasadh allows you to gather an extra resource.\");\n  }\n  \n  // Gather random resources available from the landscape\n  if (currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n    let successfulGathers = 0;\n    while (successfulGathers < resourcesToGather && !playerStore.isResourceCapacityReached) {\n      const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n      const resourceId = currentLandscape.value.availableResources[randomIndex];\n      \n      // Verify that the resource exists in cardStore before adding it\n      const resourceExists = cardStore.getResourceById(resourceId);\n      if (!resourceExists) {\n        console.error(`Resource with ID ${resourceId} not found in cardStore`);\n        gameStore.addToGameLog(`You attempted to gather a resource, but it was unidentifiable.`, true);\n      } else {\n        const addResult = playerStore.addResource(resourceId);\n        if (addResult) {\n          const resource = cardStore.getResourceById(resourceId);\n          if (resource) {\n            gameStore.addToGameLog(`You gathered ${resource.name}.`, true);\n            successfulGathers++;\n          }\n        }\n      }\n    }\n  } else {\n    gameStore.addToGameLog(\"There are no resources to gather at this location.\", true);\n  }\n  \n  // Advance to the next phase\n  gameStore.advancePhase();\n};\n\nconst getRequiredResourcesText = (resources: string[]): string => {\n  if (!resources || !resources.length) return 'None';\n  return resources.map(id => cardStore.getResourceById(id)?.name || id).join(', ');\n};\n\nconst canCraftItem = (itemId: string) => {\n  if (!craftingService.value) return false;\n  return craftingService.value.canCraftItem(itemId);\n};\n\nconst craftItem = (itemId: string) => {\n  if (!craftingService.value) return;\n  const result = craftingService.value.craftItem(itemId);\n  if (result) {\n    gameStore.addToGameLog(`Successfully crafted an item!`, true);\n    // If we want to add a virtual die roll for crafting difficulty:\n    const dieRoll = Math.floor(Math.random() * 8) + 1;\n    gameStore.addToGameLog(`Rolled a ${dieRoll} for crafting check`, true);\n    \n    // Get crafted item details\n    const item = cardStore.getCraftedItemById(itemId);\n    if (item) {\n      gameStore.addToGameLog(`You now have a ${item.name} (${item.ability})`, true);\n      gameStore.addToGameLog(`Beware: ${item.drawback}`, true);\n    }\n  }\n};\n\n// Function to advance from Animal Companion phase\nconst advancePhase = () => {\n  // For the Animal Companion phase, we need to handle the progression\n  if (gameStore.currentPhase === GamePhase.ANIMAL_COMPANION) {\n    // If we have a selected companion, clear it first\n    if (selectedCompanion.value) {\n      clearSelectedCompanion();\n    }\n    \n    // Generate a new landscape if needed and advance the game phase\n    const cardStore = useCardStore();\n    const availableLandscapes = cardStore.landscapes.filter(l => \n      !gameStore.visitedLandscapes.includes(l.id)\n    );\n    \n    if (availableLandscapes.length > 0) {\n      // Pick a random landscape from the available ones\n      const randomIndex = Math.floor(Math.random() * availableLandscapes.length);\n      const newLandscape = availableLandscapes[randomIndex];\n      \n      // Update the current landscape\n      gameStore.setCurrentLandscape(newLandscape.id);\n      // Add to visited landscapes\n      gameStore.addVisitedLandscape(newLandscape.id);\n    } else {\n      // If no more landscapes, we've completed the journey\n      gameStore.addToGameLog('You have reached the end of your journey path.', true);\n      gameStore.completeJourney(true);\n    }\n  }\n  \n  // Advance to the next phase\n  gameStore.advancePhase();\n};\n\n// Function to start a new turn by setting the current landscape to the next one\n// and resetting the phase to SEASONAL_ASSESSMENT\nconst startNewTurn = () => {\n  if (nextLandscape.value) {\n    // Update current landscape to the next one\n    gameStore.currentLandscapeId = gameStore.journeyPath[gameStore.journeyProgress + 1];\n    // Advance journey progress\n    gameStore.journeyProgress++;\n    // Add to game log\n    gameStore.addToGameLog(`Arrived at ${nextLandscape.value.name}.`);\n    // Reset phase to start the turn cycle - use direct assignment instead of setPhase\n    gameStore.currentPhase = GamePhase.SEASONAL_ASSESSMENT;\n  } else {\n    // No more landscapes, handle journey completion\n    gameStore.addToGameLog(\"You've reached the end of your journey!\");\n    gameStore.journeyComplete = true;\n    gameStore.advancePhase();\n  }\n};\n\n// End the journey and return to home screen\nconst endJourney = () => {\n  console.log('Ending journey...');\n  playerStore.resetPlayer();\n  gameStore.resetGame();\n  router.push('/menu');\n};\n\n// Helper functions\nconst formatPhase = (phase: GamePhase): string => {\n  if (!phase) return 'Unknown';\n  \n  const phaseName = phase.toString().replace(/_/g, ' ').toLowerCase();\n  return phaseName.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n};\n\nconst formatSeason = (season: Season): string => {\n  if (!season) return 'Unknown';\n  \n  // Convert enum value to readable format (e.g., SPRING to Spring)\n  const seasonName = season.toString();\n  return seasonName.charAt(0) + seasonName.slice(1).toLowerCase();\n};\n\nconst getCardResourceName = (resourceId: string): string => {\n  const resource = cardStore.getResourceById(resourceId);\n  return resource ? resource.name : 'Unknown Resource';\n};\n\nconst getResourceDescription = (resourceId: string): string => {\n  const resource = cardStore.getResourceById(resourceId);\n  return resource ? resource.description : 'A valuable resource that can be used for crafting and survival.';\n};\n\nconst getCraftedItemName = (itemId: string): string => {\n  const item = cardStore.getCraftedItemById(itemId);\n  return item ? item.name : 'Unknown Item';\n};\n\nconst getCraftedItemDescription = (itemId: string): string => {\n  const item = cardStore.getCraftedItemById(itemId);\n  return item ? item.description : 'A crafted item.';\n};\n\nconst triggerRandomEvent = () => {\n  // Use the gameStore's random event trigger\n  gameStore.triggerRandomEvent();\n  gameStore.addToGameLog(\"A random event has been drawn due to the high threat level.\", true);\n};\n\nconst triggerOtherworldlyManifestation = () => {\n  // Use the gameStore's otherworldly manifestation trigger\n  gameStore.triggerOtherworldlyManifestation();\n  gameStore.addToGameLog(\"The veil thins as otherworldly forces manifest!\", true);\n};\n\nconst advanceToChallenge = () => {\n  gameStore.advancePhase();\n};\n\nconst advanceToNextPhase = () => {\n  gameStore.advancePhase();\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.game-board {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: #f8f4e9;\n}\n\n.game-header {\n  padding: 0.5rem;\n  background-color: rgba(92, 61, 46, 0.1);\n}\n\n.game-content {\n  flex-grow: 1;\n  overflow-y: auto;\n  padding: 0.25rem;\n  display: flex;\n  flex-direction: column;\n}\n\n.season-section, \n.cards-row-section {\n  margin-bottom: 0.25rem;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  h2, h3 {\n    font-size: 28px; \n  }\n  \n  p {\n    font-size: 18px;\n    line-height: 1.6;\n  }\n}\n\n.cards-row {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 0.8rem;\n  padding: 0.25rem;\n  width: 100%;\n  \n  .card-item {\n    flex: 0 0 auto;\n    max-width: calc(31% - 0.8rem); \n    min-width: 200px; \n    margin-bottom: 0.8rem;\n  }\n}\n\n.seasonal-wheel-container {\n  margin-bottom: 0;\n}\n</style>\n","import script from \"./GameBoardView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameBoardView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameBoardView.vue?vue&type=style&index=0&id=774148a1&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-774148a1\"]])\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\n// Import views\nimport GameSetupView from '@/views/GameSetupView.vue';\nimport GameBoardView from '@/views/GameBoardView.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'setup',\n    component: GameSetupView\n  },\n  {\n    path: '/game',\n    name: 'game',\n    component: GameBoardView\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\nexport default router;\n","import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\nimport router from './router/index'\n\n// Create the app instance\nconst app = createApp(App)\n\n// Use Pinia for state management\napp.use(createPinia())\n\n// Use Vue Router\napp.use(router)\n\n// Set up global error handler\napp.config.errorHandler = (err, instance, info) => {\n  console.error('Global error:', err)\n  console.error('Error info:', info)\n}\n\n// Mount the app\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpathfinders_journey\"] = self[\"webpackChunkpathfinders_journey\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(4835); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","class","style","_hoisted_2","_defineComponent","__name","setup","__props","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","_renderSlot","$slots","__exports__","_component_router_view","_resolveComponent","_createBlock","GameLayout","default","_withCtx","_createVNode","_","CompanionState","CardType","ChallengeType","Season","useCardStore","defineStore","state","characters","landscapes","animalCompanions","resources","craftedItems","seasons","initialized","getters","getCharacterById","id","find","character","getLandscapeById","landscape","getAnimalCompanionById","companion","getCompanionById","getResourceById","resource","getCraftedItemById","item","getSeasonById","season","getChallengeById","allChallenges","reduce","challenges","landscapeChallenges","map","challenge","type","toLowerCase","name","description","difficulty","rewards","experience","knowledge","getResourcesBySeason","filter","seasonalAbundance","includes","getCompanionsBySeason","affinitySeasons","getAllCraftedItems","getCraftableItems","actions","initializeCards","this","initializeCharacters","initializeLandscapes","initializeAnimalCompanions","initializeResources","initializeCraftedItems","initializeSeasons","CHARACTER","healthPoints","strength","wisdom","agility","diplomacy","survival","resourceCapacity","image","specialAbility","startingResources","startingCompanion","challengeBonuses","LANDSCAPE","WISDOM","DIPLOMACY","availableResources","specialFeature","effect","ANIMAL_COMPANION","ability","SAMHAIN","WINTERS_DEPTH","IMBOLC","BELTANE","LUGHNASADH","RESOURCE","rarity","specialEffect","CRAFTED_ITEM","requiredResources","complexity","drawback","SEASON","abundantResources","scarceResources","animalAffinities","effects","GamePhase","useGameStore","currentPhase","SEASONAL_ASSESSMENT","currentTurn","currentSeason","currentLandscapeId","currentChallenge","visitedLandscapes","journeyProgress","journeyPath","gameLog","victoryConditions","journeyCompleted","balanceMaintained","knowledgeAcquired","bondsFormed","questFulfilled","landscapesTraversed","seasonsExperienced","challengesOvercome","gameStarted","gameOver","isVictory","threatTokens","blessingTokens","challengeHistory","tempEffects","journeyComplete","ceremonyCompleted","currentLandscape","cardStore","currentSeasonCard","seasonCard","journeyPercentage","Math","min","round","isGameOver","hasWon","formattedGameLog","reverse","threatLevel","floor","hasTempEffect","effectId","some","duration","getTempEffectStrength","startGame","addToGameLog","resetGame","endGame","GAME_OVER","setPhase","phase","formatPhase","advancePhase","phaseOrder","THREAT_LEVEL_CHECK","LANDSCAPE_CHALLENGE","CHALLENGE_RESOLUTION","RESOURCE_MANAGEMENT","CRAFTING","JOURNEY_PROGRESSION","currentIndex","indexOf","length","previousPhase","newPhase","advanceTurn","newTurn","formatSeason","processTempEffects","advanceSeason","checkVictoryConditions","seasonOrder","nextIndex","previousSeason","newSeason","turn","processSeasonalResourceChanges","seasonEffects","forEach","effectDetails","setCurrentLandscape","landscapeId","previousLandscapeId","addVisitedLandscape","newLandscapeId","landscapeName","providesShelter","entryEffect","requiredLandscapes","push","visitedLandscapesCount","advanceJourney","setCurrentChallenge","challengeId","previousChallengeId","challengeName","challengeType","challengeDifficulty","challengeRewards","newChallengeId","steps","previousProgress","newProgress","stepsAdded","completeJourney","message","highlight","details","entry","timestamp","Date","now","console","error","debug","log","shift","allConditionsMet","Object","values","every","Boolean","replace","addThreatTokens","amount","oldThreatLevel","newThreatLevel","removeThreatTokens","max","addTempEffect","existingEffectIndex","findIndex","removeTempEffect","index","splice","clearGameLog","handleThreatLevelCheck","triggerOtherworldlyManifestation","triggerRandomEvent","randomEvents","playerStore","usePlayerStore","addEffect","magnitude","target","gainExperience","loseRandomResources","randomEvent","random","manifestations","randomLandscape","addResource","loseHealth","reverseSeason","manifestation","updateSeasonCard","handleHealingRecovery","healingAmount","seasonalHealingModifier","totalHealing","health","maxHealth","healHealth","specialHealing","seasonalSpoilage","seasonalTransformations","transitionKey","spoilingResources","transformingResources","resourceId","removeResource","formatResourceName","newResourceId","oldResource","newResource","oldName","newName","updateResourceAvailability","rollD8","roll","resolveChallenge","totalRoll","outcome","performSpecialAction","actionId","success","gatherResources","baseDifficulty","seasonalModifier","getSeasonalResourceModifier","threatModifier","characterModifier","awardResources","count","remainingCapacity","i","randomIndex","resourceName","VictoryService","checkJourneyCompletion","checkBalanceMaintained","checkKnowledgeAcquired","checkBondsFormed","checkPersonalQuest","checkLandscapesTraversed","checkSeasonsExperienced","checkChallengesOvercome","conditions","gameStore","characterId","companionCount","craftedItemCount","processVictory","processDefeat","reason","checkDefeatConditions","isDefeat","victoryService","knowledgeDiscovered","specialAbilityUsed","activeEffects","hasCraftedLegendaryItem","uniqueCraftedItemsCount","companionLoyalty","resourceCount","isResourceCapacityReached","experienceLevel","hasEffect","getEffectStrength","setCharacter","addAnimalCompanion","startingCompanions","companionId","selectCharacter","loyalty","LOYAL","turnsSinceLastFed","turnsWary","removeAnimalCompanion","feedCompanion","status","updatedStatus","WARY","updateCompanionStatus","companionName","LEAVING","isCompanionInState","getCompanionsInState","addCraftedItem","itemId","removeCraftedItem","addExperience","defeatResult","discoverKnowledge","knowledgeId","useSpecialAbility","resetSpecialAbility","resetPlayer","addCompanion","removeCompanion","setCompanionLoyalty","takeDamage","alive","lostCount","e","removeEffect","processEffects","useCompanionAbility","getCompanionStatus","useCraftedItem","useCompanionForChallenge","useCompanionForNight","allCraftableItems","craftableItems","canCraft","craftItem","rest","useCompanionForGathering","_hoisted_3","key","_hoisted_4","_hoisted_5","_hoisted_6","render","$props","$setup","$data","$options","_normalizeClass","cardTypeClass","onClick","$event","$emit","_toDisplayString","title","subtitle","_createCommentVNode","getSuitSymbol","undefined","footer","defineComponent","props","String","required","cardType","validator","value","computed","cardTypeValue","classes","cardTypeIdentifierClass","ACTION","methods","emits","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","router","useRouter","ref","selectedCharacter","loadCharacters","getAbilityName","getAbilityDescription","firstLandscape","firstChallenge","setTimeout","alert","_createStaticVNode","_Fragment","_renderList","GameCard","_createTextVNode","journeyLocations","location","currentLocationIndex","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_component_GameCard","playerResources","selectedResourceId","selectResource","getRarityDescription","getSeasonClassName","formatSeasonName","args","useResource","disabled","canUseSelectedResource","discardResource","cancelSelection","continueJourney","components","resourceIds","selectedResource","r","l","toUpperCase","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","availableRecipes","selectedRecipe","selectRecipe","getResourceName","hasResource","canCraftSelectedRecipe","cancelCrafting","ThreatManifestationType","ThreatEventType","OtherworldlyManifestationType","ThreatService","constructor","_defineProperty","MOONLIT_LOCH","DRUIDS_SANCTUARY","SACRED_WATER","ROWAN_WOOD","MINOR","CHALLENGE_DIFFICULTY","HEALTH_LOSS","RESOURCE_LOSS","MODERATE","LANDSCAPE_EFFECT","COMPANION_EFFECT","MAJOR","SEASONAL_SHIFT","counterResource","requiresChallenge","requiresOffering","remainingReduction","MAX_THREAT_REDUCTION_PER_TURN","threatReductionThisTurn","actualAmount","resetThreatReductionTracker","getThreatLevel","hasThreatPrevention","generateRandomThreatEvent","eligibleEvents","threatEvents","event","applyThreatEvent","manifestThreat","shouldManifestThreat","manifestationChance","addThreatPreventionEffect","processThreatEffects","rollForOtherworldlyManifestation","useSacredSiteForThreatReduction","SACRED_SITES","reduction","useResourceForThreatReduction","THREAT_RESOURCES","performSeasonalPurificationRitual","hasPerformedSeasonalRitual","ritualName","resetSeasonalRitualTracker","otherworldlyManifestations","isSacredSite","isResourceUsefulForThreat","getThreatForCraftedItem","complexityValue","getComplexityValue","addThreatForSeasonalCrossing","addThreatForSacredSiteDisrespect","severity","threatAmount","handleSeasonChange","oldSeason","isPrepared","processEndOfTurn","processResourceUse","COMPLEXITY_TIERS","SIMPLE","COMPLEX","ADVANCED","LEGENDARY","CraftingService","canCraftItem","missingResources","landscapeSupported","playerSkill","isComplexitySupportedByLandscape","playerHasSkillForComplexity","complexityTier","hasCraftingFacilities","specialCraftingCapabilities","join","invalidResources","isLegendary","threatCost","threatService","calculateCraftingDifficulty","locationBonus","getLocationCraftingBonus","getSeasonalCraftingModifier","experienceBonus","locationId","craftingBonuses","seasonalModifiers","getRecipeSuggestions","getRecipeSuggestionsByComplexity","maxComplexity","getCraftingRequirements","applyItemEffect","checkCraftingVictoryConditions","hasLegendaryItem","uniqueItemTypes","Set","size","craftingService","onMounted","recipe","result","availableCompanions","selectCompanion","_withModifiers","bondWithCompanion","hasCompatibleResources","showBondDialog","selectedCompanionName","closeBondDialog","compatibleResources","confirmBond","CompanionService","isResourceSuitableForBonding","applyBondingEffects","preferredResources","increaseLoyalty","getLoyalty","currentLoyalty","newLoyalty","applyLoyaltyEffects","decreaseLoyalty","getCompanionsForChallengeType","selectRandomCompanion","landscapeCompanions","availableCompanionTypes","companionType","split","isCompanionWary","bondingEffect","loyaltyLevel","loyaltyEffects","companionService","emit","word","charAt","slice","selectedCompanion","randomCompanionId","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_component_CompanionCard","playerCompanions","abilityUsed","usedCompanionAbilities","canFeed","onSelect","onFeed","openFeedDialog","onUseAbility","selectAvailableCompanion","openBondDialog","hasResourcesForBonding","useAbility","_normalizeStyle","loyaltyBarStyle","showFeedDialog","closeFeedDialog","selected","percentage","width","backgroundColor","getLoyaltyColor","playerResourceIds","CompanionCard","allCompanions","isCompanionAvailableInSeason","selectedAvailableCompanion","getCompatibleResources","$subscribe","emitClose","substring","logContainer","formatTimestamp","date","hours","getHours","toString","padStart","minutes","getMinutes","seconds","getSeconds","watch","nextTick","scrollTop","scrollHeight","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","lastChallengeResult","completed","currentCharacter","char","nextLandscape","nextLandscapeId","clearSelectedCompanion","craftableItemIds","seasonModifier","totalDifficulty","playerBonus","animalBonus","itemBonus","dieRoll","partialSuccess","damage","resourcesAwarded","resourceExists","addResult","setbackMessage","STRENGTH","AGILITY","SURVIVAL","endJourney","avoidChallenge","getChallengeDifficulty","seasonModifiers","getItemBonuses","equippedItems","total","challengeBonus","getTotalBonus","characterBonus","abilityModifier","blessingBonus","getSeasonModifier","resolveChallengeLandscape","diceRoll","isNaturalSuccess","isSuccess","avoidChallengeLandscape","totalResources","spentResources","resourceNames","resourcesToGather","successfulGathers","availableLandscapes","newLandscape","startNewTurn","seasonName","getCardResourceName","getResourceDescription","getCraftedItemName","getCraftedItemDescription","_unref","PlayerDashboard","EXPLORATION","CHALLENGE","ResourceManagement","AnimalCompanionSelection","onSelectCompanion","CompanionManagement","CraftingStation","JOURNEY","GameMap","GameLog","routes","path","component","GameSetupView","GameBoardView","createRouter","history","createWebHistory","app","createApp","App","use","createPinia","config","errorHandler","err","instance","info","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}