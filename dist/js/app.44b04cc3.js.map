{"version":3,"file":"js/app.44b04cc3.js","mappings":"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","sources":["webpack://pathfinders-journey/./src/components/layout/GameLayout.vue?c324","webpack://pathfinders-journey/./src/components/layout/GameLayout.vue","webpack://pathfinders-journey/./src/App.vue?2a5e","webpack://pathfinders-journey/./src/App.vue","webpack://pathfinders-journey/./src/models/enums/cardTypes.ts","webpack://pathfinders-journey/./src/models/enums/seasons.ts","webpack://pathfinders-journey/./src/stores/cardStore.ts","webpack://pathfinders-journey/./src/models/enums/phases.ts","webpack://pathfinders-journey/./src/stores/gameStore.ts","webpack://pathfinders-journey/./src/stores/playerStore.ts","webpack://pathfinders-journey/./src/views/GameSetupView.vue?a1a4","webpack://pathfinders-journey/./src/views/GameSetupView.vue","webpack://pathfinders-journey/./src/views/GameSetupView.vue?ea24","webpack://pathfinders-journey/./src/composables/useGameState.ts","webpack://pathfinders-journey/./src/views/GameBoardView.vue?b99a","webpack://pathfinders-journey/./src/views/GameBoardView.vue","webpack://pathfinders-journey/./src/views/GameBoardView.vue?5b83","webpack://pathfinders-journey/./src/router/index.ts","webpack://pathfinders-journey/./src/main.ts","webpack://pathfinders-journey/webpack/bootstrap","webpack://pathfinders-journey/webpack/runtime/chunk loaded","webpack://pathfinders-journey/webpack/runtime/compat get default export","webpack://pathfinders-journey/webpack/runtime/define property getters","webpack://pathfinders-journey/webpack/runtime/global","webpack://pathfinders-journey/webpack/runtime/hasOwnProperty shorthand","webpack://pathfinders-journey/webpack/runtime/jsonp chunk loading","webpack://pathfinders-journey/webpack/startup"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"game-layout\" }\nconst _hoisted_2 = { class: \"game-layout__content\" }\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'GameLayout',\n  setup(__props) {\n\n// No props or special logic needed for this basic layout component\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"header\", { class: \"game-layout__header\" }, [\n      _createElementVNode(\"h1\", { class: \"game-layout__title\" }, \"Pathfinder's Journey: The Celtic Realm\")\n    ], -1)),\n    _createElementVNode(\"main\", _hoisted_2, [\n      _renderSlot(_ctx.$slots, \"default\")\n    ]),\n    _cache[1] || (_cache[1] = _createElementVNode(\"footer\", { class: \"game-layout__footer\" }, [\n      _createElementVNode(\"p\", null, \"© 2025 Pathfinder's Journey\")\n    ], -1))\n  ]))\n}\n}\n\n})","import script from \"./GameLayout.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameLayout.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameLayout.vue?vue&type=style&index=0&id=8cfb15b8&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8cfb15b8\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport GameLayout from '@/components/layout/GameLayout.vue';\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createBlock(GameLayout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_router_view)\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=53cb32db&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","export enum CardType {\n  CHARACTER = 'CHARACTER',\n  LANDSCAPE = 'LANDSCAPE',\n  ANIMAL_COMPANION = 'ANIMAL_COMPANION',\n  RESOURCE = 'RESOURCE',\n  CRAFTED_ITEM = 'CRAFTED_ITEM',\n  SEASON = 'SEASON'\n}\n\nexport enum ChallengeType {\n  STRENGTH = 'STRENGTH',\n  WISDOM = 'WISDOM',\n  AGILITY = 'AGILITY',\n  DIPLOMACY = 'DIPLOMACY',\n  SURVIVAL = 'SURVIVAL'\n}\n","export enum Season {\n  SAMHAIN = 'samhain',\n  WINTERS_DEPTH = 'wintersDepth',\n  IMBOLC = 'imbolc',\n  BELTANE = 'beltane',\n  LUGHNASADH = 'lughnasadh'\n}\n","import { defineStore } from 'pinia';\nimport { CardType, ChallengeType } from '@/models/enums/cardTypes';\nimport { Season } from '@/models/enums/seasons';\nimport { \n  CharacterCard, \n  LandscapeCard, \n  AnimalCompanionCard, \n  ResourceCard, \n  CraftedItemCard, \n  SeasonCard,\n  ChallengeCard\n} from '@/models/types/cards';\n\ninterface CardStoreState {\n  characters: CharacterCard[];\n  landscapes: LandscapeCard[];\n  animalCompanions: AnimalCompanionCard[];\n  resources: ResourceCard[];\n  craftedItems: CraftedItemCard[];\n  seasons: SeasonCard[];\n  initialized: boolean;\n}\n\nexport const useCardStore = defineStore('card', {\n  state: (): CardStoreState => ({\n    characters: [],\n    landscapes: [],\n    animalCompanions: [],\n    resources: [],\n    craftedItems: [],\n    seasons: [],\n    initialized: false\n  }),\n  \n  getters: {\n    getCharacterById: (state) => (id: string) => {\n      return state.characters.find(character => character.id === id);\n    },\n    \n    getLandscapeById: (state) => (id: string) => {\n      return state.landscapes.find(landscape => landscape.id === id);\n    },\n    \n    getAnimalCompanionById: (state) => (id: string) => {\n      return state.animalCompanions.find(companion => companion.id === id);\n    },\n    \n    getCompanionById: (state) => (id: string) => {\n      return state.animalCompanions.find(companion => companion.id === id);\n    },\n    \n    getResourceById: (state) => (id: string) => {\n      return state.resources.find(resource => resource.id === id);\n    },\n    \n    getCraftedItemById: (state) => (id: string) => {\n      return state.craftedItems.find(item => item.id === id);\n    },\n    \n    getSeasonById: (state) => (id: string) => {\n      return state.seasons.find(season => season.id === id);\n    },\n    \n    getChallengeById: (state) => (id: string) => {\n      // Flatten all challenges from all landscapes\n      const allChallenges = state.landscapes.reduce((acc, landscape) => {\n        return [...acc, ...landscape.challenges];\n      }, [] as ChallengeCard[]);\n      \n      return allChallenges.find(challenge => challenge.id === id);\n    },\n    \n    getResourcesBySeason: (state) => (season: Season) => {\n      return state.resources.filter(resource => \n        resource.seasonalAbundance.includes(season)\n      );\n    },\n    \n    getCompanionsBySeason: (state) => (season: Season) => {\n      return state.animalCompanions.filter(companion => \n        companion.affinitySeasons.includes(season)\n      );\n    },\n    \n    getAllCraftedItemCards: (state) => () => {\n      return state.craftedItems;\n    }\n  },\n  \n  actions: {\n    initializeCards() {\n      // Initialize with sample data\n      this.initializeCharacters();\n      this.initializeLandscapes();\n      this.initializeAnimalCompanions();\n      this.initializeResources();\n      this.initializeCraftedItems();\n      this.initializeSeasons();\n      \n      this.initialized = true;\n    },\n    \n    initializeCharacters() {\n      this.characters = [\n        {\n          id: 'character_1',\n          name: 'The Druid',\n          description: 'A keeper of ancient wisdom with a deep connection to nature.',\n          type: CardType.CHARACTER,\n          health: 8,\n          resourceCapacity: 6,\n          specialAbility: {\n            name: 'Nature\\'s Harmony',\n            description: 'Can communicate with animals to gain insights about the landscape.',\n            effect: 'Reveal one hidden resource in the current landscape.'\n          },\n          startingResources: ['resource_1', 'resource_5'],\n          startingCompanion: 'companion_1'\n        },\n        {\n          id: 'character_2',\n          name: 'The Warrior',\n          description: 'A brave fighter skilled in combat and survival.',\n          type: CardType.CHARACTER,\n          health: 12,\n          resourceCapacity: 4,\n          specialAbility: {\n            name: 'Battle Prowess',\n            description: 'Years of training have honed combat skills to perfection.',\n            effect: 'Add +2 to any challenge attempt once per turn.'\n          },\n          startingResources: ['resource_2', 'resource_3']\n        },\n        {\n          id: 'character_3',\n          name: 'The Bard',\n          description: 'A storyteller who carries the history and legends of the Celtic people.',\n          type: CardType.CHARACTER,\n          health: 6,\n          resourceCapacity: 8,\n          specialAbility: {\n            name: 'Ancient Tales',\n            description: 'Knowledge of old stories reveals secrets of the land.',\n            effect: 'Gain insight into one challenge before attempting it.'\n          },\n          startingResources: ['resource_4', 'resource_7', 'resource_9']\n        }\n      ];\n    },\n    \n    initializeLandscapes() {\n      this.landscapes = [\n        {\n          id: 'landscape_1',\n          name: 'The Misty Forest',\n          description: 'An ancient woodland shrouded in mist where spirits are said to dwell.',\n          type: CardType.LANDSCAPE,\n          challenges: [\n            {\n              id: 'challenge_1',\n              name: 'Lost Path',\n              description: 'The mist has obscured the path, making navigation difficult.',\n              type: ChallengeType.WISDOM,\n              difficulty: 2,\n              rewards: {\n                resources: ['resource_1', 'resource_5'],\n                experience: 1\n              }\n            },\n            {\n              id: 'challenge_2',\n              name: 'Forest Guardian',\n              description: 'A mysterious entity blocks your path, demanding a tribute.',\n              type: ChallengeType.DIPLOMACY,\n              difficulty: 3,\n              rewards: {\n                resources: ['resource_7'],\n                experience: 2,\n                knowledge: 'The forest spirits value respect above all else.'\n              }\n            }\n          ],\n          availableResources: ['resource_1', 'resource_5', 'resource_8'],\n          specialFeature: {\n            name: 'Ancient Grove',\n            description: 'A sacred place where druids once gathered.',\n            effect: 'Heal 1 health if you spend a turn meditating here.'\n          }\n        },\n        {\n          id: 'landscape_2',\n          name: 'The Standing Stones',\n          description: 'A circle of megalithic stones humming with ancient power.',\n          type: CardType.LANDSCAPE,\n          challenges: [\n            {\n              id: 'challenge_3',\n              name: 'Ritual Alignment',\n              description: 'The stones must be aligned with the stars to unlock their power.',\n              type: ChallengeType.WISDOM,\n              difficulty: 4,\n              rewards: {\n                resources: ['resource_10'],\n                experience: 2,\n                knowledge: 'The stones align with the seasonal transitions.'\n              }\n            }\n          ],\n          availableResources: ['resource_2', 'resource_10'],\n          specialFeature: {\n            name: 'Ley Line Nexus',\n            description: 'A powerful convergence of earth energies.',\n            effect: 'Your special ability can be used twice in this location.'\n          }\n        }\n      ];\n    },\n    \n    initializeAnimalCompanions() {\n      this.animalCompanions = [\n        {\n          id: 'companion_1',\n          name: 'Raven',\n          description: 'A wise bird associated with prophecy and insight.',\n          type: CardType.ANIMAL_COMPANION,\n          ability: {\n            name: 'Far Sight',\n            description: 'The raven scouts ahead, revealing dangers and opportunities.',\n            effect: 'Preview the next landscape before traveling there.'\n          },\n          affinitySeasons: [Season.SAMHAIN, Season.WINTERS_DEPTH]\n        },\n        {\n          id: 'companion_2',\n          name: 'Wolf',\n          description: 'A loyal pack animal with keen senses.',\n          type: CardType.ANIMAL_COMPANION,\n          ability: {\n            name: 'Pack Hunter',\n            description: 'The wolf helps track and hunt for resources.',\n            effect: 'Gain an extra resource when gathering in a landscape.'\n          },\n          affinitySeasons: [Season.WINTERS_DEPTH, Season.IMBOLC]\n        },\n        {\n          id: 'companion_3',\n          name: 'Stag',\n          description: 'A majestic forest dweller representing renewal and abundance.',\n          type: CardType.ANIMAL_COMPANION,\n          ability: {\n            name: 'Forest Guide',\n            description: 'The stag knows hidden paths through the wilderness.',\n            effect: 'Reduce the difficulty of navigation challenges by 1.'\n          },\n          affinitySeasons: [Season.BELTANE, Season.LUGHNASADH]\n        }\n      ];\n    },\n    \n    initializeResources() {\n      this.resources = [\n        {\n          id: 'resource_1',\n          name: 'Healing Herbs',\n          description: 'Plants with medicinal properties that can restore health.',\n          type: CardType.RESOURCE,\n          rarity: 'common',\n          seasonalAbundance: [Season.BELTANE, Season.LUGHNASADH],\n          specialEffect: {\n            name: 'Herbal Remedy',\n            description: 'A poultice made from these herbs can heal wounds.',\n            effect: 'Restore 1 health when used.'\n          }\n        },\n        {\n          id: 'resource_2',\n          name: 'Sacred Oak Wood',\n          description: 'Wood from the revered oak tree, imbued with strength.',\n          type: CardType.RESOURCE,\n          rarity: 'uncommon',\n          seasonalAbundance: [Season.LUGHNASADH]\n        },\n        {\n          id: 'resource_3',\n          name: 'Iron Ore',\n          description: 'Raw metal used for crafting tools and weapons.',\n          type: CardType.RESOURCE,\n          rarity: 'uncommon',\n          seasonalAbundance: [Season.IMBOLC, Season.BELTANE]\n        },\n        {\n          id: 'resource_4',\n          name: 'Mistletoe',\n          description: 'A parasitic plant considered sacred by the druids.',\n          type: CardType.RESOURCE,\n          rarity: 'rare',\n          seasonalAbundance: [Season.WINTERS_DEPTH],\n          specialEffect: {\n            name: 'Druidic Focus',\n            description: 'Enhances spiritual connection when used in rituals.',\n            effect: 'Add +1 to wisdom challenges when used.'\n          }\n        },\n        {\n          id: 'resource_5',\n          name: 'Wild Berries',\n          description: 'Nutritious forest fruits that provide sustenance.',\n          type: CardType.RESOURCE,\n          rarity: 'common',\n          seasonalAbundance: [Season.BELTANE, Season.LUGHNASADH]\n        }\n      ];\n    },\n    \n    initializeCraftedItems() {\n      this.craftedItems = [\n        {\n          id: 'item_1',\n          name: 'Herbal Poultice',\n          description: 'A medicinal wrap made from healing herbs.',\n          type: CardType.CRAFTED_ITEM,\n          requiredResources: ['resource_1', 'resource_5'],\n          complexity: 1,\n          ability: {\n            name: 'Healing Touch',\n            description: 'Applies healing herbs directly to wounds.',\n            effect: 'Restore 2 health when used.'\n          }\n        },\n        {\n          id: 'item_2',\n          name: 'Oak Staff',\n          description: 'A sturdy staff carved from sacred oak wood.',\n          type: CardType.CRAFTED_ITEM,\n          requiredResources: ['resource_2'],\n          complexity: 2,\n          ability: {\n            name: 'Nature\\'s Authority',\n            description: 'The staff channels the power of the oak.',\n            effect: 'Add +1 to all wisdom challenges.'\n          },\n          drawback: {\n            description: 'The staff is heavy and cumbersome.',\n            effect: 'Reduce resource capacity by 1 while carried.'\n          }\n        },\n        {\n          id: 'item_3',\n          name: 'Iron Blade',\n          description: 'A simple but effective weapon forged from iron.',\n          type: CardType.CRAFTED_ITEM,\n          requiredResources: ['resource_3'],\n          complexity: 3,\n          ability: {\n            name: 'Sharp Edge',\n            description: 'The blade cuts through obstacles with ease.',\n            effect: 'Add +2 to strength challenges.'\n          }\n        }\n      ];\n    },\n    \n    initializeSeasons() {\n      this.seasons = [\n        {\n          id: 'season_1',\n          name: 'Samhain',\n          description: 'The Celtic new year, when the veil between worlds is thinnest.',\n          type: CardType.SEASON,\n          season: Season.SAMHAIN,\n          abundantResources: ['resource_4'],\n          scarceResources: ['resource_1', 'resource_5'],\n          animalAffinities: ['companion_1'],\n          effects: [\n            {\n              name: 'Thin Veil',\n              description: 'The boundary between the mortal world and the Otherworld weakens.',\n              effect: 'Wisdom challenges are easier, but unexpected spirits may appear.'\n            }\n          ]\n        },\n        {\n          id: 'season_2',\n          name: 'Winter\\'s Depth',\n          description: 'The coldest time of year, when survival is most challenging.',\n          type: CardType.SEASON,\n          season: Season.WINTERS_DEPTH,\n          abundantResources: [],\n          scarceResources: ['resource_1', 'resource_2', 'resource_5'],\n          animalAffinities: ['companion_1', 'companion_2'],\n          effects: [\n            {\n              name: 'Bitter Cold',\n              description: 'The harsh weather tests endurance and resourcefulness.',\n              effect: 'Lose 1 health at the end of each turn unless sheltered.'\n            }\n          ]\n        },\n        {\n          id: 'season_3',\n          name: 'Imbolc',\n          description: 'The first stirrings of spring, a time of purification and renewal.',\n          type: CardType.SEASON,\n          season: Season.IMBOLC,\n          abundantResources: ['resource_3'],\n          scarceResources: [],\n          animalAffinities: ['companion_2'],\n          effects: [\n            {\n              name: 'Renewal',\n              description: 'The land begins to awaken from winter\\'s slumber.',\n              effect: 'Heal 1 health at the start of each turn.'\n            }\n          ]\n        },\n        {\n          id: 'season_4',\n          name: 'Beltane',\n          description: 'The height of spring, celebrating fertility and growth.',\n          type: CardType.SEASON,\n          season: Season.BELTANE,\n          abundantResources: ['resource_1', 'resource_3', 'resource_5'],\n          scarceResources: ['resource_4'],\n          animalAffinities: ['companion_3'],\n          effects: [\n            {\n              name: 'Abundant Growth',\n              description: 'The land is lush with new life and energy.',\n              effect: 'Gather one additional resource per turn.'\n            }\n          ]\n        },\n        {\n          id: 'season_5',\n          name: 'Lughnasadh',\n          description: 'The harvest festival, celebrating the first fruits of the season.',\n          type: CardType.SEASON,\n          season: Season.LUGHNASADH,\n          abundantResources: ['resource_1', 'resource_2', 'resource_5'],\n          scarceResources: [],\n          animalAffinities: ['companion_3'],\n          effects: [\n            {\n              name: 'Harvest Bounty',\n              description: 'The land provides abundant resources before winter.',\n              effect: 'Resource capacity is increased by 2 during this season.'\n            }\n          ]\n        }\n      ];\n    }\n  }\n});\n","export enum GamePhase {\n  SETUP = 'SETUP',\n  CHARACTER_SELECTION = 'CHARACTER_SELECTION',\n  SEASONAL_ASSESSMENT = 'SEASONAL_ASSESSMENT',\n  LANDSCAPE_CHALLENGE = 'LANDSCAPE_CHALLENGE',\n  CHALLENGE_RESOLUTION = 'CHALLENGE_RESOLUTION',\n  RESOURCE_MANAGEMENT = 'RESOURCE_MANAGEMENT',\n  ANIMAL_COMPANION = 'ANIMAL_COMPANION',\n  CRAFTING = 'CRAFTING',\n  JOURNEY_PROGRESSION = 'JOURNEY_PROGRESSION',\n  GAME_OVER = 'GAME_OVER'\n}\n","import { defineStore } from 'pinia';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport { GameState, VictoryConditions, GameLogEntry, TempEffect } from '@/models/types/game';\nimport { LandscapeCard, SeasonCard } from '@/models/types/cards';\nimport { usePlayerStore } from './playerStore';\nimport { useCardStore } from './cardStore';\n\nexport const useGameStore = defineStore('game', {\n  state: () => ({\n    currentPhase: GamePhase.CHARACTER_SELECTION,\n    currentTurn: 1,\n    currentSeason: Season.SAMHAIN,\n    currentLandscapeId: '',\n    currentChallenge: null as string | null,\n    visitedLandscapes: [] as string[],\n    journeyProgress: 0,\n    journeyPath: [] as string[],\n    gameLog: [] as GameLogEntry[],\n    victoryConditions: {\n      journeyCompleted: false,\n      balanceMaintained: false,\n      knowledgeAcquired: false,\n      bondsFormed: false,\n      questFulfilled: false,\n      landscapesTraversed: false,\n      seasonsExperienced: false,\n      challengesOvercome: false\n    } as VictoryConditions,\n    gameStarted: false,\n    gameOver: false,\n    isVictory: false,\n    threatTokens: 0,\n    blessingTokens: 0,\n    challengeHistory: [] as { id: string, outcome: string, turn: number }[],\n    tempEffects: [] as TempEffect[]\n  }),\n  \n  getters: {\n    currentLandscape(): LandscapeCard | null {\n      const cardStore = useCardStore();\n      const landscape = cardStore.getLandscapeById(this.currentLandscapeId);\n      return landscape || null;\n    },\n    \n    currentSeasonCard(): SeasonCard | null {\n      const cardStore = useCardStore();\n      const seasonCard = cardStore.getSeasonById(this.currentSeason);\n      return seasonCard || null;\n    },\n    \n    journeyPercentage(): number {\n      return Math.min(100, Math.round((this.journeyProgress / 10) * 100));\n    },\n    \n    isGameOver(): boolean {\n      return this.gameOver;\n    },\n    \n    hasWon(): boolean {\n      return this.isVictory;\n    },\n    \n    formattedGameLog(): GameLogEntry[] {\n      return [...this.gameLog].reverse();\n    },\n    \n    threatLevel(): number {\n      return Math.floor(this.threatTokens / 3);\n    },\n    \n    hasTempEffect(): (effectId: string) => boolean {\n      return (effectId: string) => {\n        return this.tempEffects.some(effect => effect.id === effectId && effect.duration > 0);\n      };\n    },\n    \n    getTempEffectStrength(): (effectId: string) => number {\n      return (effectId: string) => {\n        const effect = this.tempEffects.find(effect => effect.id === effectId && effect.duration > 0);\n        return effect ? effect.strength : 0;\n      };\n    }\n  },\n  \n  actions: {\n    startGame(): void {\n      this.gameStarted = true;\n      this.currentPhase = GamePhase.CHARACTER_SELECTION;\n      this.currentTurn = 1;\n      this.currentSeason = Season.SAMHAIN;\n      this.threatTokens = 0;\n      this.tempEffects = [];\n      this.addToGameLog('Your journey begins in the season of Samhain, when the veil between worlds is thinnest.', true);\n    },\n    \n    resetGame(): void {\n      this.currentPhase = GamePhase.CHARACTER_SELECTION;\n      this.currentTurn = 1;\n      this.currentSeason = Season.SAMHAIN;\n      this.currentLandscapeId = '';\n      this.currentChallenge = null;\n      this.visitedLandscapes = [];\n      this.journeyProgress = 0;\n      this.journeyPath = [];\n      this.gameLog = [];\n      this.victoryConditions = {\n        journeyCompleted: false,\n        balanceMaintained: false,\n        knowledgeAcquired: false,\n        bondsFormed: false,\n        questFulfilled: false,\n        landscapesTraversed: false,\n        seasonsExperienced: false,\n        challengesOvercome: false\n      };\n      this.gameStarted = false;\n      this.gameOver = false;\n      this.isVictory = false;\n      this.threatTokens = 0;\n      this.blessingTokens = 0;\n      this.challengeHistory = [];\n      this.tempEffects = [];\n    },\n    \n    endGame(isVictory: boolean): void {\n      this.gameOver = true;\n      this.isVictory = isVictory;\n      \n      if (isVictory) {\n        this.addToGameLog('Congratulations! You have completed your journey through the Celtic Realm.', true);\n      } else {\n        this.addToGameLog('Your journey has come to an end. The Celtic Realm remains shrouded in mystery.', true);\n      }\n      \n      this.currentPhase = GamePhase.GAME_OVER;\n    },\n    \n    setPhase(phase: GamePhase): void {\n      this.currentPhase = phase;\n      this.addToGameLog(`Entering the ${this.formatPhase(phase)} phase.`);\n    },\n    \n    advancePhase(): void {\n      const phaseOrder = [\n        GamePhase.CHARACTER_SELECTION,\n        GamePhase.SEASONAL_ASSESSMENT,\n        GamePhase.LANDSCAPE_CHALLENGE,\n        GamePhase.CHALLENGE_RESOLUTION,\n        GamePhase.RESOURCE_MANAGEMENT,\n        GamePhase.ANIMAL_COMPANION,\n        GamePhase.CRAFTING,\n        GamePhase.JOURNEY_PROGRESSION\n      ];\n      \n      const currentIndex = phaseOrder.indexOf(this.currentPhase);\n      if (currentIndex !== -1) {\n        this.currentPhase = phaseOrder[(currentIndex + 1) % phaseOrder.length];\n        this.addToGameLog(`Entering the ${this.formatPhase(this.currentPhase)} phase.`);\n        \n        // If we've completed a full cycle, advance the turn\n        if (this.currentPhase === GamePhase.SEASONAL_ASSESSMENT) {\n          this.advanceTurn();\n        }\n      }\n    },\n    \n    advanceTurn(): void {\n      this.currentTurn++;\n      this.addToGameLog(`Turn ${this.currentTurn} begins.`);\n      \n      // Every 3 turns, advance the season\n      if (this.currentTurn % 3 === 0) {\n        this.advanceSeason();\n      }\n      \n      // Reduce duration of temporary effects\n      this.processTempEffects();\n    },\n    \n    advanceSeason(): void {\n      const seasonOrder = [\n        Season.SAMHAIN,\n        Season.WINTERS_DEPTH,\n        Season.IMBOLC,\n        Season.BELTANE,\n        Season.LUGHNASADH\n      ];\n      \n      const currentIndex = seasonOrder.indexOf(this.currentSeason);\n      if (currentIndex !== -1) {\n        this.currentSeason = seasonOrder[(currentIndex + 1) % seasonOrder.length];\n        this.addToGameLog(`The season changes to ${this.formatSeason(this.currentSeason)}.`, true);\n        \n        // Check if we've experienced all seasons for victory condition\n        if (this.visitedLandscapes.length >= 5) {\n          this.victoryConditions.seasonsExperienced = true;\n          this.addToGameLog('You have experienced the full cycle of Celtic seasons.', true);\n        }\n      }\n    },\n    \n    setCurrentLandscape(landscapeId: string): void {\n      this.currentLandscapeId = landscapeId;\n      \n      if (!this.visitedLandscapes.includes(landscapeId)) {\n        this.visitedLandscapes.push(landscapeId);\n      }\n      \n      const cardStore = useCardStore();\n      const landscape = cardStore.getLandscapeById(landscapeId);\n      \n      if (landscape) {\n        this.addToGameLog(`You have arrived at ${landscape.name}.`, true);\n        \n        // Check if we've visited enough landscapes for victory condition\n        if (this.visitedLandscapes.length >= 10) {\n          this.victoryConditions.landscapesTraversed = true;\n          this.addToGameLog('You have traversed many landscapes of the Celtic Realm.', true);\n        }\n      }\n    },\n    \n    addVisitedLandscape(landscapeId: string): void {\n      if (!this.visitedLandscapes.includes(landscapeId)) {\n        this.visitedLandscapes.push(landscapeId);\n        \n        // Update journey progress\n        this.journeyProgress += 1;\n        \n        // Check if we've visited enough landscapes for victory condition\n        if (this.visitedLandscapes.length >= 10) {\n          this.victoryConditions.landscapesTraversed = true;\n          this.addToGameLog('You have traversed many landscapes of the Celtic Realm.', true);\n        }\n      }\n    },\n    \n    setCurrentChallenge(challengeId: string | null): void {\n      this.currentChallenge = challengeId;\n      \n      if (challengeId) {\n        const cardStore = useCardStore();\n        const challenge = cardStore.getChallengeById(challengeId);\n        \n        if (challenge) {\n          this.addToGameLog(`You face a challenge: ${challenge.name}.`, true);\n        }\n      }\n    },\n    \n    advanceJourney(steps: number): void {\n      this.journeyProgress += steps;\n      \n      if (this.journeyProgress >= 10) {\n        this.victoryConditions.journeyCompleted = true;\n        this.addToGameLog('You have completed your journey through the Celtic Realm.', true);\n        \n        // Check if all victory conditions are met\n        this.checkVictoryConditions();\n      } else {\n        this.addToGameLog(`You advance ${steps} steps on your journey.`);\n      }\n    },\n    \n    completeJourney(isVictory: boolean): void {\n      if (isVictory) {\n        this.victoryConditions.journeyCompleted = true;\n        this.addToGameLog('You have successfully completed your journey through the Celtic Realm.', true);\n      } else {\n        this.addToGameLog('Your journey has come to an end before reaching your destination.', true);\n      }\n      \n      this.endGame(isVictory);\n    },\n    \n    addToGameLog(message: string, highlight: boolean = false): void {\n      const entry: GameLogEntry = {\n        message,\n        timestamp: Date.now(),\n        highlight\n      };\n      \n      this.gameLog.push(entry);\n      \n      // Keep the log from getting too large\n      if (this.gameLog.length > 100) {\n        this.gameLog.shift();\n      }\n    },\n    \n    checkVictoryConditions(): boolean {\n      const allConditionsMet = Object.values(this.victoryConditions).every(Boolean);\n      \n      if (allConditionsMet) {\n        this.endGame(true);\n      }\n      \n      return allConditionsMet;\n    },\n    \n    formatPhase(phase: GamePhase): string {\n      return phase.replace(/_/g, ' ').toLowerCase();\n    },\n    \n    formatSeason(season: Season): string {\n      return season.replace(/_/g, ' ').toLowerCase();\n    },\n    \n    // New methods for threat management\n    addThreatTokens(amount: number): number {\n      const oldThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      this.threatTokens += amount;\n      \n      const newThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      if (newThreatLevel > oldThreatLevel) {\n        this.addToGameLog(`The threat level has increased to ${newThreatLevel}!`, true);\n      }\n      \n      // Update victory condition for balance\n      this.victoryConditions.balanceMaintained = this.threatTokens < 6;\n      \n      return this.threatTokens;\n    },\n    \n    removeThreatTokens(amount: number): number {\n      const oldThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      this.threatTokens = Math.max(0, this.threatTokens - amount);\n      \n      const newThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      if (newThreatLevel < oldThreatLevel) {\n        this.addToGameLog(`The threat level has decreased to ${newThreatLevel}.`, true);\n      }\n      \n      // Update victory condition for balance\n      this.victoryConditions.balanceMaintained = this.threatTokens < 6;\n      \n      return this.threatTokens;\n    },\n    \n    addTempEffect(effectId: string, name: string, description: string, strength: number, duration: number): void {\n      // Check if effect already exists\n      const existingEffectIndex = this.tempEffects.findIndex(effect => effect.id === effectId);\n      \n      if (existingEffectIndex !== -1) {\n        // Update existing effect\n        this.tempEffects[existingEffectIndex].strength = strength;\n        this.tempEffects[existingEffectIndex].duration = duration;\n      } else {\n        // Add new effect\n        this.tempEffects.push({\n          id: effectId,\n          name,\n          description,\n          strength,\n          duration\n        });\n        \n        this.addToGameLog(`New effect: ${name} - ${description}`, true);\n      }\n    },\n    \n    removeTempEffect(effectId: string): boolean {\n      const index = this.tempEffects.findIndex(effect => effect.id === effectId);\n      \n      if (index !== -1) {\n        const effect = this.tempEffects[index];\n        this.addToGameLog(`Effect ended: ${effect.name}`, true);\n        this.tempEffects.splice(index, 1);\n        return true;\n      }\n      \n      return false;\n    },\n    \n    processTempEffects(): void {\n      // Reduce duration of all temporary effects\n      this.tempEffects.forEach((effect, index) => {\n        if (effect.duration > 0) {\n          effect.duration--;\n          \n          if (effect.duration === 0) {\n            this.addToGameLog(`Effect ended: ${effect.name}`, true);\n            this.tempEffects.splice(index, 1);\n          }\n        }\n      });\n    }\n  }\n});\n","import { defineStore } from 'pinia';\nimport { PlayerState, PlayerEffect } from '@/models/types/player';\nimport { CharacterCard } from '@/models/types/cards';\nimport { useCardStore } from './cardStore';\nimport { useGameStore } from './gameStore';\n\nexport const usePlayerStore = defineStore('player', {\n  state: (): PlayerState => ({\n    characterId: '',\n    health: 10,\n    maxHealth: 10,\n    resources: [],\n    resourceCapacity: 5,\n    animalCompanions: [],\n    craftedItems: [],\n    experience: 0,\n    knowledgeDiscovered: [],\n    specialAbilityUsed: false,\n    activeEffects: [],\n    hasCraftedLegendaryItem: false,\n    uniqueCraftedItemsCount: 0,\n    companionLoyalty: {}\n  }),\n  \n  getters: {\n    character(): CharacterCard | null {\n      const cardStore = useCardStore();\n      const character = cardStore.getCharacterById(this.characterId);\n      return character || null;\n    },\n    \n    resourceCount(): number {\n      return this.resources.length;\n    },\n    \n    isResourceCapacityReached(): boolean {\n      return this.resources.length >= this.resourceCapacity;\n    },\n    \n    companionCount(): number {\n      return this.animalCompanions.length;\n    },\n    \n    craftedItemCount(): number {\n      return this.craftedItems.length;\n    },\n    \n    experienceLevel(): number {\n      // Calculate level based on experience points\n      // Every 3 experience points = 1 level\n      return Math.floor(this.experience / 3) + 1;\n    },\n    \n    hasEffect(): (effectId: string) => boolean {\n      return (effectId: string) => {\n        return this.activeEffects.some(effect => effect.id === effectId && effect.duration > 0);\n      };\n    },\n    \n    getEffectStrength(): (effectId: string) => number {\n      return (effectId: string) => {\n        const effect = this.activeEffects.find(effect => effect.id === effectId && effect.duration > 0);\n        return effect ? effect.strength : 0;\n      };\n    }\n  },\n  \n  actions: {\n    selectCharacter(characterId: string) {\n      const cardStore = useCardStore();\n      const character = cardStore.getCharacterById(characterId);\n      \n      if (character) {\n        this.characterId = characterId;\n        this.health = character.health;\n        this.maxHealth = character.health;\n        this.resourceCapacity = character.resourceCapacity;\n        \n        // Add starting resources if any\n        if (character.startingResources && character.startingResources.length > 0) {\n          character.startingResources.forEach(resourceId => {\n            this.addResource(resourceId);\n          });\n        }\n        \n        // Add starting companion if any\n        if (character.startingCompanion) {\n          this.animalCompanions = [character.startingCompanion];\n          this.companionLoyalty = {\n            [character.startingCompanion]: 1\n          };\n        }\n        \n        return true;\n      }\n      \n      return false;\n    },\n    \n    addResource(resourceId: string) {\n      if (this.resources.length < this.resourceCapacity) {\n        this.resources.push(resourceId);\n        return true;\n      }\n      return false;\n    },\n    \n    removeResource(resourceId: string) {\n      const index = this.resources.indexOf(resourceId);\n      if (index !== -1) {\n        this.resources.splice(index, 1);\n        return true;\n      }\n      return false;\n    },\n    \n    addAnimalCompanion(companionId: string) {\n      if (!this.animalCompanions.includes(companionId)) {\n        this.animalCompanions.push(companionId);\n        return true;\n      }\n      return false;\n    },\n    \n    removeAnimalCompanion(companionId: string) {\n      const index = this.animalCompanions.indexOf(companionId);\n      if (index !== -1) {\n        this.animalCompanions.splice(index, 1);\n        return true;\n      }\n      return false;\n    },\n    \n    addCraftedItem(itemId: string) {\n      if (!this.craftedItems.includes(itemId)) {\n        this.craftedItems.push(itemId);\n        return true;\n      }\n      return false;\n    },\n    \n    removeCraftedItem(itemId: string) {\n      const index = this.craftedItems.indexOf(itemId);\n      if (index !== -1) {\n        this.craftedItems.splice(index, 1);\n        return true;\n      }\n      return false;\n    },\n    \n    gainExperience(amount: number) {\n      this.experience += amount;\n      return this.experience;\n    },\n    \n    loseHealth(amount: number) {\n      this.health = Math.max(0, this.health - amount);\n      \n      // Check if player has died\n      return this.health > 0;\n    },\n    \n    healHealth(amount: number) {\n      this.health = Math.min(this.maxHealth, this.health + amount);\n      return this.health;\n    },\n    \n    discoverKnowledge(knowledgeId: string) {\n      if (!this.knowledgeDiscovered.includes(knowledgeId)) {\n        this.knowledgeDiscovered.push(knowledgeId);\n        return true;\n      }\n      return false;\n    },\n    \n    useSpecialAbility() {\n      if (!this.specialAbilityUsed) {\n        this.specialAbilityUsed = true;\n        return true;\n      }\n      return false;\n    },\n    \n    resetSpecialAbility() {\n      this.specialAbilityUsed = false;\n      return true;\n    },\n    \n    resetPlayer() {\n      this.characterId = '';\n      this.health = 10;\n      this.maxHealth = 10;\n      this.resources = [];\n      this.resourceCapacity = 5;\n      this.animalCompanions = [];\n      this.craftedItems = [];\n      this.experience = 0;\n      this.knowledgeDiscovered = [];\n      this.specialAbilityUsed = false;\n      this.activeEffects = [];\n      this.hasCraftedLegendaryItem = false;\n      this.uniqueCraftedItemsCount = 0;\n      this.companionLoyalty = {};\n    },\n    \n    addCompanion(companionId: string) {\n      if (!this.animalCompanions.includes(companionId)) {\n        this.animalCompanions.push(companionId);\n        if (!this.companionLoyalty) {\n          this.companionLoyalty = {};\n        }\n        this.companionLoyalty[companionId] = 1;\n      }\n    },\n    \n    removeCompanion(companionId: string) {\n      this.animalCompanions = this.animalCompanions.filter(id => id !== companionId);\n      if (this.companionLoyalty && this.companionLoyalty[companionId]) {\n        delete this.companionLoyalty[companionId];\n      }\n    },\n    \n    setCompanionLoyalty(companionId: string, loyalty: number) {\n      if (!this.companionLoyalty) {\n        this.companionLoyalty = {};\n      }\n      this.companionLoyalty[companionId] = loyalty;\n    },\n    \n    // New methods for threat management\n    takeDamage(amount: number) {\n      const gameStore = useGameStore();\n      const alive = this.loseHealth(amount);\n      \n      gameStore.addToGameLog(`You take ${amount} damage. Health: ${this.health}/${this.maxHealth}`);\n      \n      if (!alive) {\n        gameStore.addToGameLog('You have been defeated!', true);\n        gameStore.endGame(false);\n      }\n      \n      return alive;\n    },\n    \n    loseRandomResources(amount: number) {\n      const gameStore = useGameStore();\n      let lostCount = 0;\n      \n      // Don't try to remove more resources than the player has\n      amount = Math.min(amount, this.resources.length);\n      \n      for (let i = 0; i < amount; i++) {\n        if (this.resources.length > 0) {\n          // Get a random resource index\n          const randomIndex = Math.floor(Math.random() * this.resources.length);\n          const resourceId = this.resources[randomIndex];\n          \n          // Get resource name for logging\n          const cardStore = useCardStore();\n          const resource = cardStore.getResourceById(resourceId);\n          \n          // Remove the resource\n          this.resources.splice(randomIndex, 1);\n          lostCount++;\n          \n          gameStore.addToGameLog(`You lost ${resource ? resource.name : 'a resource'}.`);\n        }\n      }\n      \n      return lostCount;\n    },\n    \n    addEffect(effect: PlayerEffect) {\n      const gameStore = useGameStore();\n      \n      // Check if effect already exists\n      const existingEffectIndex = this.activeEffects.findIndex(e => e.id === effect.id);\n      \n      if (existingEffectIndex !== -1) {\n        // Update existing effect\n        this.activeEffects[existingEffectIndex].strength = effect.strength;\n        this.activeEffects[existingEffectIndex].duration = effect.duration;\n        gameStore.addToGameLog(`Effect renewed: ${effect.name}`, true);\n      } else {\n        // Add new effect\n        this.activeEffects.push(effect);\n        gameStore.addToGameLog(`New effect gained: ${effect.name} - ${effect.description}`, true);\n      }\n      \n      return true;\n    },\n    \n    removeEffect(effectId: string) {\n      const gameStore = useGameStore();\n      const index = this.activeEffects.findIndex(effect => effect.id === effectId);\n      \n      if (index !== -1) {\n        const effect = this.activeEffects[index];\n        gameStore.addToGameLog(`Effect ended: ${effect.name}`, true);\n        this.activeEffects.splice(index, 1);\n        return true;\n      }\n      \n      return false;\n    },\n    \n    processEffects() {\n      // Reduce duration of all effects\n      this.activeEffects.forEach((effect, index) => {\n        if (effect.duration > 0) {\n          effect.duration--;\n          \n          if (effect.duration === 0) {\n            const gameStore = useGameStore();\n            gameStore.addToGameLog(`Effect ended: ${effect.name}`, true);\n            this.activeEffects.splice(index, 1);\n          }\n        }\n      });\n    }\n  }\n});\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"game-setup\" }\nconst _hoisted_2 = { class: \"game-container\" }\nconst _hoisted_3 = { class: \"character-selection\" }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = { class: \"character-stats\" }\nconst _hoisted_6 = { class: \"stat\" }\nconst _hoisted_7 = { class: \"stat\" }\nconst _hoisted_8 = { class: \"character-abilities\" }\nconst _hoisted_9 = [\"onClick\"]\nconst _hoisted_10 = {\n  key: 0,\n  class: \"selected-character-details\"\n}\n\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useGameStore } from '@/stores/gameStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport type { CharacterCard } from '@/models/types/cards';\n\n// Initialize stores and router\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'GameSetupView',\n  setup(__props) {\n\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\n\n// Initialize state\nconst characters = ref<CharacterCard[]>([]);\nconst selectedCharacter = ref<CharacterCard | null>(null);\n\n// Load characters when component is mounted\nconst loadCharacters = () => {\n  if (!cardStore.initialized) {\n    cardStore.initializeCards();\n  }\n  characters.value = cardStore.characters;\n};\n\n// Select a character\nconst selectCharacter = (character: CharacterCard) => {\n  selectedCharacter.value = character;\n};\n\n// Get the ability name for a character\nconst getAbilityName = (character: CharacterCard) => {\n  return character.specialAbility?.name || '';\n};\n\n// Get the ability description for a character\nconst getAbilityDescription = (character: CharacterCard) => {\n  return character.specialAbility?.description || '';\n};\n\n// Start the game with the selected character\nconst startGame = (character: CharacterCard) => {\n  // Set the player's character\n  playerStore.selectCharacter(character.id);\n  \n  // Initialize game state\n  gameStore.startGame();\n  gameStore.setPhase(GamePhase.SEASONAL_ASSESSMENT);\n  \n  // Navigate to the game board\n  router.push('/game');\n};\n\n// Load characters when component is mounted\nloadCharacters();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[3] || (_cache[3] = _createStaticVNode(\"<div class=\\\"game-header\\\" data-v-db7acad0><h1 class=\\\"game-title\\\" data-v-db7acad0>Game Setup</h1><p class=\\\"game-subtitle\\\" data-v-db7acad0>Choose your character and begin your journey through the mystical Celtic landscape.</p></div><div class=\\\"celtic-quote\\\" data-v-db7acad0> &quot;The journey through the Celtic Realm is one of discovery, challenge, and transformation.&quot; </div><h2 data-v-db7acad0>Select Your Character</h2><p class=\\\"character-intro mb-4\\\" data-v-db7acad0> Each character brings unique abilities and challenges to your journey. Choose wisely, as your character&#39;s strengths and weaknesses will shape your path through the Celtic Realm. </p>\", 4)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(characters.value, (character) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: character.id,\n            class: _normalizeClass([\"character-card\", { 'selected': selectedCharacter.value && selectedCharacter.value.id === character.id }]),\n            onClick: ($event: any) => (selectCharacter(character))\n          }, [\n            _createElementVNode(\"h3\", null, _toDisplayString(character.name), 1),\n            _createElementVNode(\"p\", null, _toDisplayString(character.description), 1),\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createElementVNode(\"div\", _hoisted_6, [\n                _cache[1] || (_cache[1] = _createElementVNode(\"span\", { class: \"stat-label\" }, \"Health:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(character.health), 1)\n              ]),\n              _createElementVNode(\"div\", _hoisted_7, [\n                _cache[2] || (_cache[2] = _createElementVNode(\"span\", { class: \"stat-label\" }, \"Capacity:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(character.resourceCapacity), 1)\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_8, [\n              _createElementVNode(\"strong\", null, _toDisplayString(getAbilityName(character)) + \":\", 1),\n              _createTextVNode(\" \" + _toDisplayString(getAbilityDescription(character)), 1)\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"select-btn\",\n              onClick: _withModifiers(($event: any) => (startGame(character)), [\"stop\"])\n            }, \"Select\", 8, _hoisted_9)\n          ], 10, _hoisted_4))\n        }), 128))\n      ]),\n      (selectedCharacter.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n            _createElementVNode(\"h3\", null, _toDisplayString(selectedCharacter.value.name), 1),\n            _createElementVNode(\"p\", null, _toDisplayString(getAbilityDescription(selectedCharacter.value)), 1),\n            _createElementVNode(\"button\", {\n              class: \"start-journey-btn\",\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (startGame(selectedCharacter.value)))\n            }, \"Start Your Journey\")\n          ]))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"game-setup\">\n    <div class=\"game-container\">\n      <div class=\"game-header\">\n        <h1 class=\"game-title\">Game Setup</h1>\n        <p class=\"game-subtitle\">Choose your character and begin your journey through the mystical Celtic landscape.</p>\n      </div>\n      \n      <div class=\"celtic-quote\">\n        \"The journey through the Celtic Realm is one of discovery, challenge, and transformation.\"\n      </div>\n      \n      <h2>Select Your Character</h2>\n      <p class=\"character-intro mb-4\">\n        Each character brings unique abilities and challenges to your journey. Choose wisely, as your character's strengths and weaknesses will shape your path through the Celtic Realm.\n      </p>\n      \n      <div class=\"character-selection\">\n        <div v-for=\"character in characters\" :key=\"character.id\" class=\"character-card\" \n             :class=\"{ 'selected': selectedCharacter && selectedCharacter.id === character.id }\"\n             @click=\"selectCharacter(character)\">\n          <h3>{{ character.name }}</h3>\n          <p>{{ character.description }}</p>\n          \n          <div class=\"character-stats\">\n            <div class=\"stat\"><span class=\"stat-label\">Health:</span> {{ character.health }}</div>\n            <div class=\"stat\"><span class=\"stat-label\">Capacity:</span> {{ character.resourceCapacity }}</div>\n          </div>\n          \n          <div class=\"character-abilities\">\n            <strong>{{ getAbilityName(character) }}:</strong> {{ getAbilityDescription(character) }}\n          </div>\n          \n          <button class=\"select-btn\" @click.stop=\"startGame(character)\">Select</button>\n        </div>\n      </div>\n      \n      <div v-if=\"selectedCharacter\" class=\"selected-character-details\">\n        <h3>{{ selectedCharacter.name }}</h3>\n        <p>{{ getAbilityDescription(selectedCharacter) }}</p>\n        <button class=\"start-journey-btn\" @click=\"startGame(selectedCharacter)\">Start Your Journey</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useGameStore } from '@/stores/gameStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport type { CharacterCard } from '@/models/types/cards';\n\n// Initialize stores and router\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\n\n// Initialize state\nconst characters = ref<CharacterCard[]>([]);\nconst selectedCharacter = ref<CharacterCard | null>(null);\n\n// Load characters when component is mounted\nconst loadCharacters = () => {\n  if (!cardStore.initialized) {\n    cardStore.initializeCards();\n  }\n  characters.value = cardStore.characters;\n};\n\n// Select a character\nconst selectCharacter = (character: CharacterCard) => {\n  selectedCharacter.value = character;\n};\n\n// Get the ability name for a character\nconst getAbilityName = (character: CharacterCard) => {\n  return character.specialAbility?.name || '';\n};\n\n// Get the ability description for a character\nconst getAbilityDescription = (character: CharacterCard) => {\n  return character.specialAbility?.description || '';\n};\n\n// Start the game with the selected character\nconst startGame = (character: CharacterCard) => {\n  // Set the player's character\n  playerStore.selectCharacter(character.id);\n  \n  // Initialize game state\n  gameStore.startGame();\n  gameStore.setPhase(GamePhase.SEASONAL_ASSESSMENT);\n  \n  // Navigate to the game board\n  router.push('/game');\n};\n\n// Load characters when component is mounted\nloadCharacters();\n</script>\n\n<style lang=\"scss\" scoped>\n.game-setup {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n  \n  .game-container {\n    max-width: 1200px;\n    width: 100%;\n  }\n  \n  .game-header {\n    text-align: center;\n    margin-bottom: 2rem;\n  }\n  \n  .game-title {\n    font-size: 2.5rem;\n    color: #5c3d2e;\n    margin-bottom: 0.5rem;\n  }\n  \n  .game-subtitle {\n    font-size: 1.2rem;\n    color: #6a5d4d;\n  }\n  \n  .celtic-quote {\n    font-family: 'Tangerine', cursive;\n    font-size: 2rem;\n    text-align: center;\n    color: #5c3d2e;\n    margin: 2rem 0;\n    font-style: italic;\n  }\n  \n  h2 {\n    font-size: 1.8rem;\n    color: #5c3d2e;\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n  \n  .character-intro {\n    text-align: center;\n    max-width: 800px;\n    margin: 0 auto;\n    color: #6a5d4d;\n  }\n  \n  .character-selection {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 2rem;\n    margin-top: 2rem;\n  }\n  \n  .character-card {\n    background-color: rgba(255, 255, 255, 0.8);\n    border: 2px solid #d9c5a0;\n    border-radius: 10px;\n    padding: 1.5rem;\n    transition: all 0.3s ease;\n    cursor: pointer;\n    \n    &:hover {\n      transform: translateY(-5px);\n      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n      border-color: #b39b6f;\n    }\n    \n    &.selected {\n      border-color: #5c3d2e;\n      background-color: rgba(92, 61, 46, 0.1);\n    }\n    \n    h3 {\n      font-size: 1.5rem;\n      color: #5c3d2e;\n      margin-bottom: 0.5rem;\n    }\n    \n    p {\n      color: #6a5d4d;\n      margin-bottom: 1rem;\n    }\n    \n    .character-stats {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 1rem;\n      \n      .stat {\n        background-color: rgba(92, 61, 46, 0.1);\n        padding: 0.5rem;\n        border-radius: 5px;\n        \n        .stat-label {\n          font-weight: bold;\n          color: #5c3d2e;\n        }\n      }\n    }\n    \n    .character-abilities {\n      margin-bottom: 1.5rem;\n      font-size: 0.9rem;\n      color: #6a5d4d;\n      \n      strong {\n        color: #5c3d2e;\n      }\n    }\n    \n    .select-btn {\n      background-color: #5c3d2e;\n      color: white;\n      border: none;\n      padding: 0.5rem 1rem;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s;\n      \n      &:hover {\n        background-color: darken(#5c3d2e, 10%);\n      }\n    }\n  }\n  \n  .selected-character-details {\n    margin-top: 2rem;\n    text-align: center;\n    \n    h3 {\n      font-size: 1.8rem;\n      color: #5c3d2e;\n      margin-bottom: 0.5rem;\n    }\n    \n    p {\n      color: #6a5d4d;\n      margin-bottom: 1.5rem;\n    }\n    \n    .start-journey-btn {\n      background-color: #5c3d2e;\n      color: white;\n      border: none;\n      padding: 0.8rem 1.5rem;\n      border-radius: 5px;\n      font-size: 1.2rem;\n      cursor: pointer;\n      transition: background-color 0.3s;\n      \n      &:hover {\n        background-color: darken(#5c3d2e, 10%);\n      }\n    }\n  }\n}\n</style>\n","import script from \"./GameSetupView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameSetupView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameSetupView.vue?vue&type=style&index=0&id=db7acad0&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-db7acad0\"]])\n\nexport default __exports__","import { computed, ref } from 'vue';\nimport { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\n\n/**\n * Composable for accessing and manipulating game state\n * Provides a unified interface to interact with multiple stores\n */\nexport function useGameState() {\n  const gameStore = useGameStore();\n  const playerStore = usePlayerStore();\n  const cardStore = useCardStore();\n\n  // Computed properties for common game state\n  const isGameStarted = computed(() => gameStore.currentPhase !== GamePhase.SETUP);\n  const currentCharacter = computed(() => \n    playerStore.characterId ? cardStore.getCharacterById(playerStore.characterId) : null\n  );\n  const currentLandscape = computed(() => \n    gameStore.currentLandscapeId ? cardStore.getLandscapeById(gameStore.currentLandscapeId) : null\n  );\n  const currentSeason = computed(() => \n    gameStore.currentSeason ? cardStore.getSeasonById(gameStore.currentSeason) : null\n  );\n  const playerResources = computed(() => \n    playerStore.resources.map(id => cardStore.getResourceById(id)).filter(Boolean)\n  );\n  const playerCompanions = computed(() => \n    playerStore.animalCompanions.map(id => cardStore.getAnimalCompanionById(id)).filter(Boolean)\n  );\n  const playerCraftedItems = computed(() => \n    playerStore.craftedItems.map(id => cardStore.getCraftedItemById(id)).filter(Boolean)\n  );\n  const journeyProgress = computed(() => {\n    const totalLandscapes = 15; // Total number of landscapes in the game\n    return Math.floor((gameStore.visitedLandscapes.length / totalLandscapes) * 100);\n  });\n  const threatLevel = computed(() => \n    Math.floor(gameStore.threatTokens / 3)\n  );\n\n  // Game state helpers\n  const canCraftItems = computed(() => \n    isGameStarted.value && \n    playerResources.value.length > 0 && \n    gameStore.currentPhase === GamePhase.RESOURCE_MANAGEMENT\n  );\n  \n  const canBondWithCompanion = computed(() => \n    isGameStarted.value && \n    playerResources.value.length > 0 && \n    gameStore.currentPhase === GamePhase.ANIMAL_COMPANION\n  );\n\n  const canResolveChallenge = computed(() => \n    isGameStarted.value && \n    gameStore.currentPhase === GamePhase.LANDSCAPE_CHALLENGE\n  );\n\n  // Return all the state and helpers\n  return {\n    // Stores\n    gameStore,\n    playerStore,\n    cardStore,\n    \n    // Game state\n    isGameStarted,\n    currentCharacter,\n    currentLandscape,\n    currentSeason,\n    playerResources,\n    playerCompanions,\n    playerCraftedItems,\n    journeyProgress,\n    threatLevel,\n    \n    // Game state helpers\n    canCraftItems,\n    canBondWithCompanion,\n    canResolveChallenge\n  };\n}\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"game-board-view\" }\nconst _hoisted_2 = { class: \"game-container\" }\nconst _hoisted_3 = { class: \"current-phase\" }\nconst _hoisted_4 = { class: \"game-board\" }\nconst _hoisted_5 = { class: \"game-board__sidebar\" }\nconst _hoisted_6 = { class: \"player-status\" }\nconst _hoisted_7 = { class: \"status-item\" }\nconst _hoisted_8 = { class: \"status-value\" }\nconst _hoisted_9 = { class: \"status-item\" }\nconst _hoisted_10 = { class: \"status-value\" }\nconst _hoisted_11 = { class: \"status-item\" }\nconst _hoisted_12 = { class: \"status-value\" }\nconst _hoisted_13 = { class: \"game-log\" }\nconst _hoisted_14 = { class: \"log-entries\" }\nconst _hoisted_15 = { class: \"game-board__main\" }\nconst _hoisted_16 = { class: \"game-board__phase-content\" }\nconst _hoisted_17 = {\n  key: 0,\n  class: \"landscape\"\n}\nconst _hoisted_18 = {\n  key: 0,\n  class: \"landscape-challenge\"\n}\nconst _hoisted_19 = [\"disabled\"]\nconst _hoisted_20 = { class: \"landscape-resources\" }\nconst _hoisted_21 = { class: \"resource-list\" }\nconst _hoisted_22 = [\"onClick\", \"disabled\"]\n\nimport { ref, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useGameStore } from '@/stores/gameStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { useGameState } from '@/composables/useGameState';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport type { ResourceCard, ChallengeCard } from '@/models/types/cards';\n\n// Initialize router and stores\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'GameBoardView',\n  setup(__props) {\n\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\nconst { \n  currentCharacter, \n  currentLandscape, \n  canResolveChallenge \n} = useGameState();\n\n// Computed properties\nconst availableResources = computed(() => {\n  if (!currentLandscape.value?.availableResources) return [];\n  return currentLandscape.value.availableResources\n    .map(id => cardStore.getResourceById(id))\n    .filter((resource): resource is ResourceCard => resource !== undefined);\n});\n\nconst currentChallenge = computed(() => {\n  if (!gameStore.currentChallenge) return null;\n  return cardStore.getChallengeById(gameStore.currentChallenge);\n});\n\nconst canGatherResources = computed(() => {\n  return gameStore.currentPhase === GamePhase.RESOURCE_MANAGEMENT &&\n         playerStore.resources.length < (currentCharacter.value?.resourceCapacity || 0);\n});\n\n// Game actions\nconst resolveChallenge = () => {\n  if (!canResolveChallenge.value || !gameStore.currentChallenge) return;\n  \n  const successThreshold = 0.6; // 60% chance of success\n  const success = Math.random() > (1 - successThreshold);\n  \n  if (success) {\n    gameStore.addToGameLog(`Successfully resolved the challenge!`, true);\n    gameStore.setCurrentChallenge(null);\n    // Add rewards\n    playerStore.healHealth(10);\n  } else {\n    gameStore.addToGameLog(`Failed to resolve the challenge. Lost health.`, true);\n    // Apply penalties\n    playerStore.loseHealth(15);\n    gameStore.addThreatTokens(1);\n  }\n};\n\nconst gatherResource = (resource: ResourceCard) => {\n  if (!canGatherResources.value) return;\n  \n  playerStore.addResource(resource.id);\n  gameStore.addToGameLog(`Gathered ${resource.name}`, false);\n};\n\nconst nextPhase = () => {\n  gameStore.advancePhase();\n};\n\nconst endJourney = () => {\n  if (confirm('Are you sure you want to end your journey? All progress will be lost.')) {\n    gameStore.resetGame();\n    router.push('/');\n  }\n};\n\n// Helper functions\nconst formatSeason = (season: Season): string => {\n  return gameStore.formatSeason(season);\n};\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[7] || (_cache[7] = _createElementVNode(\"h1\", { class: \"game-title\" }, \"Game Board\", -1)),\n      _createElementVNode(\"div\", _hoisted_3, _toDisplayString(_unref(gameStore).currentPhase), 1),\n      _createElementVNode(\"div\", _hoisted_4, [\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createElementVNode(\"div\", _hoisted_6, [\n            _cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Player Status\", -1)),\n            _createElementVNode(\"div\", _hoisted_7, [\n              _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"status-label\" }, \"Health:\", -1)),\n              _createElementVNode(\"span\", _hoisted_8, _toDisplayString(_unref(playerStore).health), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_9, [\n              _cache[1] || (_cache[1] = _createElementVNode(\"span\", { class: \"status-label\" }, \"Character:\", -1)),\n              _createElementVNode(\"span\", _hoisted_10, _toDisplayString(_unref(currentCharacter)?.name || 'Unknown'), 1)\n            ]),\n            _createElementVNode(\"div\", _hoisted_11, [\n              _cache[2] || (_cache[2] = _createElementVNode(\"span\", { class: \"status-label\" }, \"Current Season:\", -1)),\n              _createElementVNode(\"span\", _hoisted_12, _toDisplayString(formatSeason(_unref(gameStore).currentSeason)), 1)\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_13, [\n            _cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Game Log\", -1)),\n            _createElementVNode(\"div\", _hoisted_14, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(gameStore).gameLog, (entry, index) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: index,\n                  class: _normalizeClass([\"log-entry\", { 'highlighted': entry.highlight }])\n                }, _toDisplayString(entry.message), 3))\n              }), 128))\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_15, [\n          _createElementVNode(\"div\", _hoisted_16, [\n            (_unref(currentLandscape))\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n                  _createElementVNode(\"h2\", null, \"Current Landscape: \" + _toDisplayString(_unref(currentLandscape).name), 1),\n                  _createElementVNode(\"p\", null, _toDisplayString(_unref(currentLandscape).description), 1),\n                  (_unref(gameStore).currentChallenge)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                        _cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"Challenge\", -1)),\n                        _createElementVNode(\"p\", null, _toDisplayString(currentChallenge.value?.description), 1),\n                        _createElementVNode(\"button\", {\n                          class: \"action-btn\",\n                          onClick: resolveChallenge,\n                          disabled: !_unref(canResolveChallenge)\n                        }, \" Resolve Challenge \", 8, _hoisted_19)\n                      ]))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"div\", _hoisted_20, [\n                    _cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"Available Resources\", -1)),\n                    _createElementVNode(\"div\", _hoisted_21, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(availableResources.value, (resource) => {\n                        return (_openBlock(), _createElementBlock(\"div\", {\n                          key: resource.id,\n                          class: \"resource-item\"\n                        }, [\n                          _createElementVNode(\"span\", null, _toDisplayString(resource.name), 1),\n                          _createElementVNode(\"button\", {\n                            class: \"gather-btn\",\n                            onClick: ($event: any) => (gatherResource(resource)),\n                            disabled: !canGatherResources.value\n                          }, \" Gather \", 8, _hoisted_22)\n                        ]))\n                      }), 128))\n                    ])\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"div\", { class: \"game-controls\" }, [\n            _createElementVNode(\"button\", {\n              class: \"control-btn\",\n              onClick: nextPhase\n            }, \"Next Phase\"),\n            _createElementVNode(\"button\", {\n              class: \"control-btn danger\",\n              onClick: endJourney\n            }, \"End Journey\")\n          ])\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"game-board-view\">\n    <div class=\"game-container\">\n      <h1 class=\"game-title\">Game Board</h1>\n      <div class=\"current-phase\">{{ gameStore.currentPhase }}</div>\n      \n      <div class=\"game-board\">\n        <div class=\"game-board__sidebar\">\n          <div class=\"player-status\">\n            <h2>Player Status</h2>\n            <div class=\"status-item\">\n              <span class=\"status-label\">Health:</span>\n              <span class=\"status-value\">{{ playerStore.health }}</span>\n            </div>\n            <div class=\"status-item\">\n              <span class=\"status-label\">Character:</span>\n              <span class=\"status-value\">{{ currentCharacter?.name || 'Unknown' }}</span>\n            </div>\n            <div class=\"status-item\">\n              <span class=\"status-label\">Current Season:</span>\n              <span class=\"status-value\">{{ formatSeason(gameStore.currentSeason) }}</span>\n            </div>\n          </div>\n          \n          <div class=\"game-log\">\n            <h2>Game Log</h2>\n            <div class=\"log-entries\">\n              <div v-for=\"(entry, index) in gameStore.gameLog\" :key=\"index\" \n                   class=\"log-entry\" :class=\"{ 'highlighted': entry.highlight }\">\n                {{ entry.message }}\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"game-board__main\">\n          <div class=\"game-board__phase-content\">\n            <div class=\"landscape\" v-if=\"currentLandscape\">\n              <h2>Current Landscape: {{ currentLandscape.name }}</h2>\n              <p>{{ currentLandscape.description }}</p>\n              \n              <div class=\"landscape-challenge\" v-if=\"gameStore.currentChallenge\">\n                <h3>Challenge</h3>\n                <p>{{ currentChallenge?.description }}</p>\n                <button class=\"action-btn\" @click=\"resolveChallenge\" \n                        :disabled=\"!canResolveChallenge\">\n                  Resolve Challenge\n                </button>\n              </div>\n              \n              <div class=\"landscape-resources\">\n                <h3>Available Resources</h3>\n                <div class=\"resource-list\">\n                  <div v-for=\"resource in availableResources\" :key=\"resource.id\" class=\"resource-item\">\n                    <span>{{ resource.name }}</span>\n                    <button class=\"gather-btn\" @click=\"gatherResource(resource)\" \n                            :disabled=\"!canGatherResources\">\n                      Gather\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"game-controls\">\n            <button class=\"control-btn\" @click=\"nextPhase\">Next Phase</button>\n            <button class=\"control-btn danger\" @click=\"endJourney\">End Journey</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useGameStore } from '@/stores/gameStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { useGameState } from '@/composables/useGameState';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport type { ResourceCard, ChallengeCard } from '@/models/types/cards';\n\n// Initialize router and stores\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\nconst { \n  currentCharacter, \n  currentLandscape, \n  canResolveChallenge \n} = useGameState();\n\n// Computed properties\nconst availableResources = computed(() => {\n  if (!currentLandscape.value?.availableResources) return [];\n  return currentLandscape.value.availableResources\n    .map(id => cardStore.getResourceById(id))\n    .filter((resource): resource is ResourceCard => resource !== undefined);\n});\n\nconst currentChallenge = computed(() => {\n  if (!gameStore.currentChallenge) return null;\n  return cardStore.getChallengeById(gameStore.currentChallenge);\n});\n\nconst canGatherResources = computed(() => {\n  return gameStore.currentPhase === GamePhase.RESOURCE_MANAGEMENT &&\n         playerStore.resources.length < (currentCharacter.value?.resourceCapacity || 0);\n});\n\n// Game actions\nconst resolveChallenge = () => {\n  if (!canResolveChallenge.value || !gameStore.currentChallenge) return;\n  \n  const successThreshold = 0.6; // 60% chance of success\n  const success = Math.random() > (1 - successThreshold);\n  \n  if (success) {\n    gameStore.addToGameLog(`Successfully resolved the challenge!`, true);\n    gameStore.setCurrentChallenge(null);\n    // Add rewards\n    playerStore.healHealth(10);\n  } else {\n    gameStore.addToGameLog(`Failed to resolve the challenge. Lost health.`, true);\n    // Apply penalties\n    playerStore.loseHealth(15);\n    gameStore.addThreatTokens(1);\n  }\n};\n\nconst gatherResource = (resource: ResourceCard) => {\n  if (!canGatherResources.value) return;\n  \n  playerStore.addResource(resource.id);\n  gameStore.addToGameLog(`Gathered ${resource.name}`, false);\n};\n\nconst nextPhase = () => {\n  gameStore.advancePhase();\n};\n\nconst endJourney = () => {\n  if (confirm('Are you sure you want to end your journey? All progress will be lost.')) {\n    gameStore.resetGame();\n    router.push('/');\n  }\n};\n\n// Helper functions\nconst formatSeason = (season: Season): string => {\n  return gameStore.formatSeason(season);\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.game-board-view {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n  \n  .game-container {\n    max-width: 1200px;\n    width: 100%;\n  }\n  \n  .game-title {\n    font-size: 2.5rem;\n    color: #5c3d2e;\n    margin-bottom: 1rem;\n    text-align: center;\n  }\n  \n  .current-phase {\n    background-color: rgba(92, 61, 46, 0.8);\n    color: white;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n    text-align: center;\n    margin-bottom: 2rem;\n    font-weight: bold;\n  }\n  \n  .game-board {\n    display: grid;\n    grid-template-columns: 300px 1fr;\n    gap: 2rem;\n    \n    &__sidebar {\n      background-color: rgba(255, 255, 255, 0.8);\n      border-radius: 10px;\n      padding: 1.5rem;\n      \n      h2 {\n        color: #5c3d2e;\n        font-size: 1.5rem;\n        margin-bottom: 1rem;\n        border-bottom: 2px solid #d9c5a0;\n        padding-bottom: 0.5rem;\n      }\n    }\n    \n    &__main {\n      background-color: rgba(255, 255, 255, 0.8);\n      border-radius: 10px;\n      padding: 1.5rem;\n      display: flex;\n      flex-direction: column;\n    }\n    \n    &__phase-content {\n      flex: 1;\n    }\n  }\n  \n  .player-status {\n    margin-bottom: 2rem;\n    \n    .status-item {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 0.5rem;\n      \n      .status-label {\n        font-weight: bold;\n        color: #6a5d4d;\n      }\n      \n      .status-value {\n        color: #5c3d2e;\n      }\n    }\n  }\n  \n  .game-log {\n    .log-entries {\n      max-height: 300px;\n      overflow-y: auto;\n      \n      .log-entry {\n        padding: 0.5rem;\n        border-bottom: 1px solid #d9c5a0;\n        font-size: 0.9rem;\n        color: #6a5d4d;\n        \n        &.highlighted {\n          background-color: rgba(92, 61, 46, 0.1);\n          font-weight: bold;\n          color: #5c3d2e;\n        }\n      }\n    }\n  }\n  \n  .landscape {\n    h2 {\n      color: #5c3d2e;\n      font-size: 1.8rem;\n      margin-bottom: 0.5rem;\n    }\n    \n    p {\n      color: #6a5d4d;\n      margin-bottom: 1.5rem;\n    }\n    \n    &-challenge, &-resources {\n      background-color: rgba(92, 61, 46, 0.1);\n      border-radius: 10px;\n      padding: 1rem;\n      margin-bottom: 1.5rem;\n      \n      h3 {\n        color: #5c3d2e;\n        font-size: 1.2rem;\n        margin-bottom: 0.5rem;\n      }\n    }\n  }\n  \n  .resource-list {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    gap: 1rem;\n    \n    .resource-item {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      background-color: rgba(255, 255, 255, 0.8);\n      padding: 0.5rem;\n      border-radius: 5px;\n      \n      .gather-btn {\n        background-color: #5c3d2e;\n        color: white;\n        border: none;\n        padding: 0.3rem 0.5rem;\n        border-radius: 3px;\n        cursor: pointer;\n        font-size: 0.8rem;\n        \n        &:hover:not(:disabled) {\n          background-color: darken(#5c3d2e, 10%);\n        }\n        \n        &:disabled {\n          background-color: #ccc;\n          cursor: not-allowed;\n        }\n      }\n    }\n  }\n  \n  .game-controls {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 2rem;\n    \n    .control-btn {\n      background-color: #5c3d2e;\n      color: white;\n      border: none;\n      padding: 0.8rem 1.5rem;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s;\n      \n      &:hover {\n        background-color: darken(#5c3d2e, 10%);\n      }\n      \n      &.danger {\n        background-color: #8b0000;\n        \n        &:hover {\n          background-color: darken(#8b0000, 10%);\n        }\n      }\n    }\n  }\n  \n  .action-btn {\n    background-color: #5c3d2e;\n    color: white;\n    border: none;\n    padding: 0.5rem 1rem;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-top: 1rem;\n    \n    &:hover:not(:disabled) {\n      background-color: darken(#5c3d2e, 10%);\n    }\n    \n    &:disabled {\n      background-color: #ccc;\n      cursor: not-allowed;\n    }\n  }\n}\n</style>\n","import script from \"./GameBoardView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameBoardView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameBoardView.vue?vue&type=style&index=0&id=66b156ca&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-66b156ca\"]])\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\n// Import views\nimport GameSetupView from '@/views/GameSetupView.vue';\nimport GameBoardView from '@/views/GameBoardView.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'setup',\n    component: GameSetupView\n  },\n  {\n    path: '/game',\n    name: 'game',\n    component: GameBoardView\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\nexport default router;\n","import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\nimport router from './router/index'\n\n// Create the app instance\nconst app = createApp(App)\n\n// Use Pinia for state management\napp.use(createPinia())\n\n// Use Vue Router\napp.use(router)\n\n// Mount the app\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpathfinders_journey\"] = self[\"webpackChunkpathfinders_journey\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(4422); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","class","_hoisted_2","_defineComponent","__name","setup","__props","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","_renderSlot","$slots","__exports__","_component_router_view","_resolveComponent","_createBlock","GameLayout","default","_withCtx","_createVNode","_","CardType","ChallengeType","Season","useCardStore","defineStore","state","characters","landscapes","animalCompanions","resources","craftedItems","seasons","initialized","getters","getCharacterById","id","find","character","getLandscapeById","landscape","getAnimalCompanionById","companion","getCompanionById","getResourceById","resource","getCraftedItemById","item","getSeasonById","season","getChallengeById","allChallenges","reduce","acc","challenges","challenge","getResourcesBySeason","filter","seasonalAbundance","includes","getCompanionsBySeason","affinitySeasons","getAllCraftedItemCards","actions","initializeCards","this","initializeCharacters","initializeLandscapes","initializeAnimalCompanions","initializeResources","initializeCraftedItems","initializeSeasons","name","description","type","CHARACTER","health","resourceCapacity","specialAbility","effect","startingResources","startingCompanion","LANDSCAPE","WISDOM","difficulty","rewards","experience","DIPLOMACY","knowledge","availableResources","specialFeature","ANIMAL_COMPANION","ability","SAMHAIN","WINTERS_DEPTH","IMBOLC","BELTANE","LUGHNASADH","RESOURCE","rarity","specialEffect","CRAFTED_ITEM","requiredResources","complexity","drawback","SEASON","abundantResources","scarceResources","animalAffinities","effects","GamePhase","useGameStore","currentPhase","CHARACTER_SELECTION","currentTurn","currentSeason","currentLandscapeId","currentChallenge","visitedLandscapes","journeyProgress","journeyPath","gameLog","victoryConditions","journeyCompleted","balanceMaintained","knowledgeAcquired","bondsFormed","questFulfilled","landscapesTraversed","seasonsExperienced","challengesOvercome","gameStarted","gameOver","isVictory","threatTokens","blessingTokens","challengeHistory","tempEffects","currentLandscape","cardStore","currentSeasonCard","seasonCard","journeyPercentage","Math","min","round","isGameOver","hasWon","formattedGameLog","reverse","threatLevel","floor","hasTempEffect","effectId","some","duration","getTempEffectStrength","strength","startGame","addToGameLog","resetGame","endGame","GAME_OVER","setPhase","phase","formatPhase","advancePhase","phaseOrder","SEASONAL_ASSESSMENT","LANDSCAPE_CHALLENGE","CHALLENGE_RESOLUTION","RESOURCE_MANAGEMENT","CRAFTING","JOURNEY_PROGRESSION","currentIndex","indexOf","length","advanceTurn","advanceSeason","processTempEffects","seasonOrder","formatSeason","setCurrentLandscape","landscapeId","push","addVisitedLandscape","setCurrentChallenge","challengeId","advanceJourney","steps","checkVictoryConditions","completeJourney","message","highlight","entry","timestamp","Date","now","shift","allConditionsMet","Object","values","every","Boolean","replace","toLowerCase","addThreatTokens","amount","oldThreatLevel","newThreatLevel","removeThreatTokens","max","addTempEffect","existingEffectIndex","findIndex","removeTempEffect","index","splice","forEach","usePlayerStore","characterId","maxHealth","knowledgeDiscovered","specialAbilityUsed","activeEffects","hasCraftedLegendaryItem","uniqueCraftedItemsCount","companionLoyalty","resourceCount","isResourceCapacityReached","companionCount","craftedItemCount","experienceLevel","hasEffect","getEffectStrength","selectCharacter","resourceId","addResource","removeResource","addAnimalCompanion","companionId","removeAnimalCompanion","addCraftedItem","itemId","removeCraftedItem","gainExperience","loseHealth","healHealth","discoverKnowledge","knowledgeId","useSpecialAbility","resetSpecialAbility","resetPlayer","addCompanion","removeCompanion","setCompanionLoyalty","loyalty","takeDamage","gameStore","alive","loseRandomResources","lostCount","i","randomIndex","random","addEffect","e","removeEffect","processEffects","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","key","router","useRouter","playerStore","ref","selectedCharacter","loadCharacters","value","getAbilityName","getAbilityDescription","_createStaticVNode","_Fragment","_renderList","_normalizeClass","onClick","$event","_toDisplayString","_createTextVNode","_withModifiers","_createCommentVNode","useGameState","isGameStarted","computed","SETUP","currentCharacter","playerResources","map","playerCompanions","playerCraftedItems","totalLandscapes","canCraftItems","canBondWithCompanion","canResolveChallenge","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","undefined","canGatherResources","resolveChallenge","successThreshold","success","gatherResource","nextPhase","endJourney","confirm","_unref","disabled","routes","path","component","GameSetupView","GameBoardView","createRouter","history","createWebHistory","app","createApp","App","use","createPinia","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}