{"version":3,"file":"js/app.b82b7439.js","mappings":"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","sources":["webpack://pathfinders-journey/./src/components/layout/GameLayout.vue?c324","webpack://pathfinders-journey/./src/components/layout/GameLayout.vue","webpack://pathfinders-journey/./src/App.vue?2a5e","webpack://pathfinders-journey/./src/App.vue","webpack://pathfinders-journey/./src/models/types/player.ts","webpack://pathfinders-journey/./src/models/enums/cardTypes.ts","webpack://pathfinders-journey/./src/models/enums/seasons.ts","webpack://pathfinders-journey/./src/stores/cardStore.ts","webpack://pathfinders-journey/./src/models/enums/phases.ts","webpack://pathfinders-journey/./src/stores/gameStore.ts","webpack://pathfinders-journey/./src/services/victoryService.ts","webpack://pathfinders-journey/./src/stores/playerStore.ts","webpack://pathfinders-journey/./src/views/GameSetupView.vue?a1a4","webpack://pathfinders-journey/./src/views/GameSetupView.vue","webpack://pathfinders-journey/./src/views/GameSetupView.vue?ea24","webpack://pathfinders-journey/./src/components/game/CompanionManagement.vue?e3b3","webpack://pathfinders-journey/./src/components/game/CompanionManagement.vue","webpack://pathfinders-journey/./src/services/companionService.ts","webpack://pathfinders-journey/./src/components/game/CompanionCard.vue?d136","webpack://pathfinders-journey/./src/components/game/CompanionCard.vue","webpack://pathfinders-journey/./src/components/core/GameCard.vue?bce7","webpack://pathfinders-journey/./src/components/core/GameCard.vue","webpack://pathfinders-journey/./src/components/core/GameCard.vue?d3b0","webpack://pathfinders-journey/./src/components/game/CompanionCard.vue?b9dc","webpack://pathfinders-journey/./src/components/game/CompanionManagement.vue?d0c7","webpack://pathfinders-journey/./src/components/game/AnimalCompanionSelection.vue?b57f","webpack://pathfinders-journey/./src/components/game/AnimalCompanionSelection.vue","webpack://pathfinders-journey/./src/components/game/AnimalCompanionSelection.vue?d02d","webpack://pathfinders-journey/./src/components/game/PlayerDashboard.vue?7ff5","webpack://pathfinders-journey/./src/components/game/PlayerDashboard.vue","webpack://pathfinders-journey/./src/components/game/PlayerDashboard.vue?6633","webpack://pathfinders-journey/./src/components/game/CraftingStation.vue?edd2","webpack://pathfinders-journey/./src/components/game/CraftingStation.vue","webpack://pathfinders-journey/./src/services/threatService.ts","webpack://pathfinders-journey/./src/services/craftingService.ts","webpack://pathfinders-journey/./src/components/game/CraftingStation.vue?4876","webpack://pathfinders-journey/./src/components/game/GameLog.vue?ee8c","webpack://pathfinders-journey/./src/components/game/GameLog.vue","webpack://pathfinders-journey/./src/components/game/GameLog.vue?abf6","webpack://pathfinders-journey/./src/components/game/GameMap.vue?3818","webpack://pathfinders-journey/./src/components/game/GameMap.vue","webpack://pathfinders-journey/./src/components/game/GameMap.vue?499a","webpack://pathfinders-journey/./src/views/GameBoardView.vue?b99a","webpack://pathfinders-journey/./src/views/GameBoardView.vue","webpack://pathfinders-journey/./src/views/GameBoardView.vue?5b83","webpack://pathfinders-journey/./src/router/index.ts","webpack://pathfinders-journey/./src/main.ts","webpack://pathfinders-journey/webpack/bootstrap","webpack://pathfinders-journey/webpack/runtime/chunk loaded","webpack://pathfinders-journey/webpack/runtime/compat get default export","webpack://pathfinders-journey/webpack/runtime/define property getters","webpack://pathfinders-journey/webpack/runtime/global","webpack://pathfinders-journey/webpack/runtime/hasOwnProperty shorthand","webpack://pathfinders-journey/webpack/runtime/jsonp chunk loading","webpack://pathfinders-journey/webpack/startup"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"game-layout\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = { class: \"game-layout__content\" }\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'GameLayout',\n  setup(__props) {\n\n// No props or special logic needed for this basic layout component\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"GameLayout\", -1)),\n    _createElementVNode(\"main\", _hoisted_2, [\n      _renderSlot(_ctx.$slots, \"default\")\n    ]),\n    _cache[1] || (_cache[1] = _createElementVNode(\"footer\", { class: \"game-layout__footer\" }, [\n      _createElementVNode(\"p\", null, \"© 2025 Pathfinder's Journey\")\n    ], -1))\n  ]))\n}\n}\n\n})","import script from \"./GameLayout.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameLayout.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameLayout.vue?vue&type=style&index=0&id=656b48d5&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-656b48d5\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport GameLayout from '@/components/layout/GameLayout.vue';\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createBlock(GameLayout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_router_view)\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=53cb32db&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { PlayerAction } from '@/models/enums/actions';\n\nexport interface PlayerEffect {\n  id: string;\n  name: string;\n  description: string;\n  duration: number;\n  magnitude: number;\n  type: string;\n  target: string;\n}\n\nexport enum CompanionState {\n  LOYAL = 'LOYAL',\n  WARY = 'WARY',\n  LEAVING = 'LEAVING'\n}\n\nexport interface CompanionStatus {\n  loyalty: number;\n  state: CompanionState;\n  turnsSinceLastFed: number;\n  turnsWary: number;\n}\n\nexport interface PlayerState {\n  characterId: string;\n  health: number;\n  maxHealth: number;\n  resources: string[];\n  resourceCapacity: number;\n  animalCompanions: string[];\n  craftedItems: string[];\n  experience: number;\n  knowledgeDiscovered: string[];\n  specialAbilityUsed: boolean;\n  activeEffects: PlayerEffect[];\n  hasCraftedLegendaryItem: boolean;\n  uniqueCraftedItemsCount: number;\n  companionLoyalty: { [companionId: string]: CompanionStatus };\n  wisdom: number;\n}\n\nexport interface PlayerActionResult {\n  success: boolean;\n  message: string;\n  type: PlayerAction;\n  data?: any;\n}\n","export enum CardType {\n  CHARACTER = 'CHARACTER',\n  LANDSCAPE = 'LANDSCAPE',\n  ANIMAL_COMPANION = 'ANIMAL_COMPANION',\n  RESOURCE = 'RESOURCE',\n  CRAFTED_ITEM = 'CRAFTED_ITEM',\n  SEASON = 'SEASON'\n}\n\nexport enum ChallengeType {\n  STRENGTH = 'STRENGTH',\n  WISDOM = 'WISDOM',\n  AGILITY = 'AGILITY',\n  DIPLOMACY = 'DIPLOMACY',\n  SURVIVAL = 'SURVIVAL'\n}\n","export enum Season {\n  SAMHAIN = 'samhain',\n  WINTERS_DEPTH = 'wintersDepth',\n  IMBOLC = 'imbolc',\n  BELTANE = 'beltane',\n  LUGHNASADH = 'lughnasadh'\n}\n","import { defineStore } from 'pinia';\nimport { CardType, ChallengeType } from '@/models/enums/cardTypes';\nimport { Season } from '@/models/enums/seasons';\nimport { \n  CharacterCard, \n  LandscapeCard, \n  AnimalCompanionCard, \n  ResourceCard, \n  CraftedItemCard, \n  SeasonCard,\n  ChallengeCard\n} from '@/models/types/cards';\n\ninterface CardStoreState {\n  characters: CharacterCard[];\n  landscapes: LandscapeCard[];\n  animalCompanions: AnimalCompanionCard[];\n  resources: ResourceCard[];\n  craftedItems: CraftedItemCard[];\n  seasons: SeasonCard[];\n  initialized: boolean;\n}\n\nexport const useCardStore = defineStore('card', {\n  state: (): CardStoreState => ({\n    characters: [],\n    landscapes: [],\n    animalCompanions: [],\n    resources: [],\n    craftedItems: [],\n    seasons: [],\n    initialized: false\n  }),\n  \n  getters: {\n    getCharacterById: (state) => (id: string) => {\n      return state.characters.find(character => character.id === id);\n    },\n    \n    getLandscapeById: (state) => (id: string) => {\n      return state.landscapes.find(landscape => landscape.id === id);\n    },\n    \n    getAnimalCompanionById: (state) => (id: string) => {\n      return state.animalCompanions.find(companion => companion.id === id);\n    },\n    \n    getCompanionById: (state) => (id: string) => {\n      return state.animalCompanions.find(companion => companion.id === id);\n    },\n    \n    getResourceById: (state) => (id: string) => {\n      return state.resources.find(resource => resource.id === id);\n    },\n    \n    getCraftedItemById: (state) => (id: string) => {\n      return state.craftedItems.find(item => item.id === id);\n    },\n    \n    getSeasonById: (state) => (id: string) => {\n      return state.seasons.find(season => season.id === id);\n    },\n    \n    getChallengeById: (state) => (id: string) => {\n      const allChallenges = state.landscapes.reduce((challenges, landscape) => {\n        if (landscape.challenges) {\n          // Convert landscape challenges to full challenge cards for compatibility\n          const landscapeChallenges = landscape.challenges.map(challenge => ({\n            id: `${landscape.id}_${challenge.type.toLowerCase()}`,\n            name: `${landscape.name} ${challenge.type}`,\n            description: `A ${challenge.type} challenge at ${landscape.name}`,\n            type: challenge.type as ChallengeType,\n            difficulty: challenge.difficulty,\n            rewards: {\n              resources: [],\n              experience: 10,\n              knowledge: landscape.id\n            }\n          }));\n          return [...challenges, ...landscapeChallenges];\n        }\n        return challenges;\n      }, [] as ChallengeCard[]);\n      \n      return allChallenges.find(challenge => challenge.id === id);\n    },\n    \n    getResourcesBySeason: (state) => (season: Season) => {\n      return state.resources.filter(resource => \n        resource.seasonalAbundance.includes(season)\n      );\n    },\n    \n    getCompanionsBySeason: (state) => (season: Season) => {\n      return state.animalCompanions.filter(companion => \n        companion.affinitySeasons.includes(season)\n      );\n    },\n    \n    getAllCraftedItems: (state) => () => {\n      return state.craftedItems;\n    },\n    \n    getCraftableItems: (state) => () => {\n      return state.craftedItems.map(item => item.id);\n    }\n  },\n  \n  actions: {\n    initializeCards() {\n      // Initialize with sample data\n      this.initializeCharacters();\n      this.initializeLandscapes();\n      this.initializeAnimalCompanions();\n      this.initializeResources();\n      this.initializeCraftedItems();\n      this.initializeSeasons();\n      \n      this.initialized = true;\n    },\n    \n    initializeCharacters() {\n      this.characters = [\n        {\n          id: 'character_1',\n          name: 'The Druid',\n          description: 'A keeper of ancient wisdom with a deep connection to nature.',\n          type: CardType.CHARACTER,\n          healthPoints: 8,\n          strength: 6,\n          wisdom: 10,\n          agility: 6,\n          diplomacy: 8,\n          survival: 9,\n          resourceCapacity: 6,\n          image: '/images/characters/druid.jpg',\n          specialAbility: {\n            name: 'Nature\\'s Harmony',\n            description: 'Can communicate with animals to gain insights about the landscape.'\n          },\n          startingResources: ['resource_1', 'resource_5'],\n          startingCompanion: 'companion_1'\n        },\n        {\n          id: 'character_2',\n          name: 'The Warrior',\n          description: 'A brave fighter skilled in combat and survival.',\n          type: CardType.CHARACTER,\n          healthPoints: 12,\n          strength: 10,\n          wisdom: 6,\n          agility: 8,\n          diplomacy: 5,\n          survival: 8,\n          resourceCapacity: 4,\n          image: '/images/characters/warrior.jpg',\n          specialAbility: {\n            name: 'Battle Prowess',\n            description: 'Years of training have honed combat skills to perfection.'\n          },\n          startingResources: ['resource_2', 'resource_3']\n        },\n        {\n          id: 'character_3',\n          name: 'The Bard',\n          description: 'A storyteller who carries the history and legends of the Celtic people.',\n          type: CardType.CHARACTER,\n          healthPoints: 6,\n          strength: 5,\n          wisdom: 9,\n          agility: 7,\n          diplomacy: 10,\n          survival: 7,\n          resourceCapacity: 8,\n          image: '/images/characters/bard.jpg',\n          specialAbility: {\n            name: 'Ancient Tales',\n            description: 'Knowledge of old stories reveals secrets of the land.'\n          },\n          startingResources: ['resource_4', 'resource_7', 'resource_9']\n        },\n        {\n          id: 'giant_beastfriend',\n          name: 'Giant Beastfriend',\n          description: 'A towering figure with a natural affinity for wild creatures, able to form bonds with even the most ferocious beasts.',\n          type: CardType.CHARACTER,\n          healthPoints: 7,\n          strength: 8,\n          wisdom: 7,\n          agility: 5,\n          diplomacy: 4,\n          survival: 9,\n          resourceCapacity: 8,\n          image: '/images/characters/giant_beastfriend.jpg',\n          specialAbility: {\n            name: 'Animal Empathy',\n            description: 'Animal Companions cost -1 resource to bond with'\n          },\n          startingResources: ['resource_3', 'resource_6'],\n          challengeBonuses: {\n            'physical': 3,\n            'mental': 2,\n            'spiritual': 3,\n            'social': 1\n          }\n        },\n        {\n          id: 'hedge_witch',\n          name: 'Hedge Witch/Warlock',\n          description: 'A practitioner of herbal magic and minor enchantments who dwells at the borderlands between civilization and wilderness.',\n          type: CardType.CHARACTER,\n          healthPoints: 5,\n          strength: 4,\n          wisdom: 10,\n          agility: 6,\n          diplomacy: 5,\n          survival: 8,\n          resourceCapacity: 7,\n          image: '/images/characters/hedge_witch.jpg',\n          specialAbility: {\n            name: 'Herbal Knowledge',\n            description: 'Can substitute one resource for another when crafting'\n          },\n          startingResources: ['resource_8', 'resource_10'],\n          challengeBonuses: {\n            'physical': 1,\n            'mental': 3,\n            'spiritual': 4,\n            'social': 1\n          }\n        },\n        {\n          id: 'iron_crafter',\n          name: 'Iron Crafter',\n          description: 'A master smith whose knowledge of metals and fire allows them to create items of remarkable power.',\n          type: CardType.CHARACTER,\n          healthPoints: 6,\n          strength: 7,\n          wisdom: 8,\n          agility: 5,\n          diplomacy: 6,\n          survival: 6,\n          resourceCapacity: 6,\n          image: '/images/characters/iron_crafter.jpg',\n          specialAbility: {\n            name: 'Master Smith',\n            description: 'Crafting requires one fewer resource'\n          },\n          startingResources: ['resource_2', 'resource_5'],\n          challengeBonuses: {\n            'physical': 3,\n            'mental': 3,\n            'spiritual': 1,\n            'social': 2\n          }\n        },\n        {\n          id: 'village_elder',\n          name: 'Village Elder',\n          description: 'A respected keeper of tradition and wisdom, whose connection to the community provides unique advantages.',\n          type: CardType.CHARACTER,\n          healthPoints: 5,\n          strength: 3,\n          wisdom: 12,\n          agility: 4,\n          diplomacy: 9,\n          survival: 7,\n          resourceCapacity: 5,\n          image: '/images/characters/village_elder.jpg',\n          specialAbility: {\n            name: 'Ancient Wisdom',\n            description: 'Start with knowledge of entire journey path (all landscapes revealed at beginning)'\n          },\n          startingResources: ['resource_7', 'resource_9'],\n          challengeBonuses: {\n            'physical': 1,\n            'mental': 4,\n            'spiritual': 3,\n            'social': 3\n          }\n        }\n      ];\n    },\n    \n    initializeLandscapes() {\n      this.landscapes = [\n        {\n          id: 'landscape_1',\n          name: 'The Misty Forest',\n          description: 'An ancient woodland shrouded in mist where spirits are said to dwell.',\n          type: CardType.LANDSCAPE,\n          challenges: [\n            {\n              id: 'challenge_1',\n              name: 'Lost Path',\n              description: 'The mist has obscured the path, making navigation difficult.',\n              type: ChallengeType.WISDOM,\n              difficulty: 2,\n              rewards: {\n                resources: ['resource_1', 'resource_5'],\n                experience: 1\n              }\n            },\n            {\n              id: 'challenge_2',\n              name: 'Forest Guardian',\n              description: 'A mysterious entity blocks your path, demanding a tribute.',\n              type: ChallengeType.DIPLOMACY,\n              difficulty: 3,\n              rewards: {\n                resources: ['resource_7'],\n                experience: 2,\n                knowledge: 'The forest spirits value respect above all else.'\n              }\n            }\n          ],\n          availableResources: ['resource_1', 'resource_5', 'resource_8'],\n          specialFeature: {\n            name: 'Ancient Grove',\n            description: 'A sacred place where druids once gathered.',\n            effect: 'Heal 1 health if you spend a turn meditating here.'\n          }\n        },\n        {\n          id: 'landscape_2',\n          name: 'The Standing Stones',\n          description: 'A circle of megalithic stones humming with ancient power.',\n          type: CardType.LANDSCAPE,\n          challenges: [\n            {\n              id: 'challenge_3',\n              name: 'Ritual Alignment',\n              description: 'The stones must be aligned with the stars to unlock their power.',\n              type: ChallengeType.WISDOM,\n              difficulty: 4,\n              rewards: {\n                resources: ['resource_10'],\n                experience: 2,\n                knowledge: 'The stones align with the seasonal transitions.'\n              }\n            }\n          ],\n          availableResources: ['resource_2', 'resource_10'],\n          specialFeature: {\n            name: 'Ley Line Nexus',\n            description: 'A powerful convergence of earth energies.',\n            effect: 'Your special ability can be used twice in this location.'\n          }\n        }\n      ];\n    },\n    \n    initializeAnimalCompanions() {\n      this.animalCompanions = [\n        {\n          id: 'companion_1',\n          name: 'Raven',\n          description: 'A wise bird associated with prophecy and insight.',\n          type: CardType.ANIMAL_COMPANION,\n          ability: {\n            name: 'Far Sight',\n            description: 'The raven scouts ahead, revealing dangers and opportunities.',\n            effect: 'Preview the next landscape before traveling there.'\n          },\n          affinitySeasons: [Season.SAMHAIN, Season.WINTERS_DEPTH]\n        },\n        {\n          id: 'companion_2',\n          name: 'Wolf',\n          description: 'A loyal pack animal with keen senses.',\n          type: CardType.ANIMAL_COMPANION,\n          ability: {\n            name: 'Pack Hunter',\n            description: 'The wolf helps track and hunt for resources.',\n            effect: 'Gain an extra resource when gathering in a landscape.'\n          },\n          affinitySeasons: [Season.WINTERS_DEPTH, Season.IMBOLC]\n        },\n        {\n          id: 'companion_3',\n          name: 'Stag',\n          description: 'A majestic forest dweller representing renewal and abundance.',\n          type: CardType.ANIMAL_COMPANION,\n          ability: {\n            name: 'Forest Guide',\n            description: 'The stag knows hidden paths through the wilderness.',\n            effect: 'Reduce the difficulty of navigation challenges by 1.'\n          },\n          affinitySeasons: [Season.BELTANE, Season.LUGHNASADH]\n        }\n      ];\n    },\n    \n    initializeResources() {\n      this.resources = [\n        {\n          id: 'resource_1',\n          name: 'Healing Herbs',\n          description: 'Plants with medicinal properties that can restore health.',\n          type: CardType.RESOURCE,\n          rarity: 'common',\n          seasonalAbundance: [Season.BELTANE, Season.LUGHNASADH],\n          specialEffect: {\n            name: 'Herbal Remedy',\n            description: 'A poultice made from these herbs can heal wounds.',\n            effect: 'Restore 1 health when used.'\n          }\n        },\n        {\n          id: 'resource_2',\n          name: 'Sacred Oak Wood',\n          description: 'Wood from the revered oak tree, imbued with strength.',\n          type: CardType.RESOURCE,\n          rarity: 'uncommon',\n          seasonalAbundance: [Season.LUGHNASADH]\n        },\n        {\n          id: 'resource_3',\n          name: 'Iron Ore',\n          description: 'Raw metal used for crafting tools and weapons.',\n          type: CardType.RESOURCE,\n          rarity: 'uncommon',\n          seasonalAbundance: [Season.IMBOLC, Season.BELTANE]\n        },\n        {\n          id: 'resource_4',\n          name: 'Mistletoe',\n          description: 'A parasitic plant considered sacred by the druids.',\n          type: CardType.RESOURCE,\n          rarity: 'rare',\n          seasonalAbundance: [Season.WINTERS_DEPTH],\n          specialEffect: {\n            name: 'Druidic Focus',\n            description: 'Enhances spiritual connection when used in rituals.',\n            effect: 'Add +1 to wisdom challenges when used.'\n          }\n        },\n        {\n          id: 'resource_5',\n          name: 'Wild Berries',\n          description: 'Nutritious forest fruits that provide sustenance.',\n          type: CardType.RESOURCE,\n          rarity: 'common',\n          seasonalAbundance: [Season.BELTANE, Season.LUGHNASADH]\n        }\n      ];\n    },\n    \n    initializeCraftedItems() {\n      this.craftedItems = [\n        {\n          id: 'item_1',\n          name: 'Herbal Poultice',\n          description: 'A medicinal wrap made from healing herbs.',\n          type: CardType.CRAFTED_ITEM,\n          requiredResources: ['resource_1', 'resource_5'],\n          complexity: 1,\n          ability: {\n            name: 'Healing Touch',\n            description: 'Applies healing herbs directly to wounds.',\n            effect: 'Restore 2 health when used.'\n          }\n        },\n        {\n          id: 'item_2',\n          name: 'Oak Staff',\n          description: 'A sturdy staff carved from sacred oak wood.',\n          type: CardType.CRAFTED_ITEM,\n          requiredResources: ['resource_2'],\n          complexity: 2,\n          ability: {\n            name: 'Nature\\'s Authority',\n            description: 'The staff channels the power of the oak.',\n            effect: 'Add +1 to all wisdom challenges.'\n          },\n          drawback: {\n            description: 'The staff is heavy and cumbersome.',\n            effect: 'Reduce resource capacity by 1 while carried.'\n          }\n        },\n        {\n          id: 'item_3',\n          name: 'Iron Blade',\n          description: 'A simple but effective weapon forged from iron.',\n          type: CardType.CRAFTED_ITEM,\n          requiredResources: ['resource_3'],\n          complexity: 3,\n          ability: {\n            name: 'Sharp Edge',\n            description: 'The blade cuts through obstacles with ease.',\n            effect: 'Add +2 to strength challenges.'\n          }\n        }\n      ];\n    },\n    \n    initializeSeasons() {\n      this.seasons = [\n        {\n          id: 'season_1',\n          name: 'Samhain',\n          description: 'The Celtic new year, when the veil between worlds is thinnest.',\n          type: CardType.SEASON,\n          season: Season.SAMHAIN,\n          abundantResources: ['resource_4'],\n          scarceResources: ['resource_1', 'resource_5'],\n          animalAffinities: ['companion_1'],\n          effects: [\n            {\n              name: 'Thin Veil',\n              description: 'The boundary between the mortal world and the Otherworld weakens.',\n              effect: 'Wisdom challenges are easier, but unexpected spirits may appear.'\n            }\n          ]\n        },\n        {\n          id: 'season_2',\n          name: 'Winter\\'s Depth',\n          description: 'The coldest time of year, when survival is most challenging.',\n          type: CardType.SEASON,\n          season: Season.WINTERS_DEPTH,\n          abundantResources: [],\n          scarceResources: ['resource_1', 'resource_2', 'resource_5'],\n          animalAffinities: ['companion_1', 'companion_2'],\n          effects: [\n            {\n              name: 'Bitter Cold',\n              description: 'The harsh weather tests endurance and resourcefulness.',\n              effect: 'Lose 1 health at the end of each turn unless sheltered.'\n            }\n          ]\n        },\n        {\n          id: 'season_3',\n          name: 'Imbolc',\n          description: 'The first stirrings of spring, a time of purification and renewal.',\n          type: CardType.SEASON,\n          season: Season.IMBOLC,\n          abundantResources: ['resource_3'],\n          scarceResources: [],\n          animalAffinities: ['companion_2'],\n          effects: [\n            {\n              name: 'Renewal',\n              description: 'The land begins to awaken from winter\\'s slumber.',\n              effect: 'Heal 1 health at the start of each turn.'\n            }\n          ]\n        },\n        {\n          id: 'season_4',\n          name: 'Beltane',\n          description: 'The height of spring, celebrating fertility and growth.',\n          type: CardType.SEASON,\n          season: Season.BELTANE,\n          abundantResources: ['resource_1', 'resource_3', 'resource_5'],\n          scarceResources: ['resource_4'],\n          animalAffinities: ['companion_3'],\n          effects: [\n            {\n              name: 'Abundant Growth',\n              description: 'The land is lush with new life and energy.',\n              effect: 'Gather one additional resource per turn.'\n            }\n          ]\n        },\n        {\n          id: 'season_5',\n          name: 'Lughnasadh',\n          description: 'The harvest festival, celebrating the first fruits of the season.',\n          type: CardType.SEASON,\n          season: Season.LUGHNASADH,\n          abundantResources: ['resource_1', 'resource_2', 'resource_5'],\n          scarceResources: [],\n          animalAffinities: ['companion_3'],\n          effects: [\n            {\n              name: 'Harvest Bounty',\n              description: 'The land provides abundant resources before winter.',\n              effect: 'Resource capacity is increased by 2 during this season.'\n            }\n          ]\n        }\n      ];\n    }\n  }\n});\n","export enum GamePhase {\n  SETUP = 'SETUP',\n  CHARACTER_SELECTION = 'CHARACTER_SELECTION',\n  SEASONAL_ASSESSMENT = 'SEASONAL_ASSESSMENT',\n  THREAT_LEVEL_CHECK = 'THREAT_LEVEL_CHECK',\n  LANDSCAPE_CHALLENGE = 'LANDSCAPE_CHALLENGE',\n  CHALLENGE_RESOLUTION = 'CHALLENGE_RESOLUTION',\n  RESOURCE_MANAGEMENT = 'RESOURCE_MANAGEMENT',\n  ANIMAL_COMPANION = 'ANIMAL_COMPANION',\n  CRAFTING = 'CRAFTING',\n  JOURNEY_PROGRESSION = 'JOURNEY_PROGRESSION',\n  HEALING_RECOVERY = 'HEALING_RECOVERY',\n  GAME_OVER = 'GAME_OVER'\n}\n","import { defineStore } from 'pinia';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport { GameState, VictoryConditions, GameLogEntry, TempEffect } from '@/models/types/game';\nimport { LandscapeCard, SeasonCard } from '@/models/types/cards';\nimport { usePlayerStore } from './playerStore';\nimport { useCardStore } from './cardStore';\n\nexport const useGameStore = defineStore('game', {\n  state: () => ({\n    currentPhase: GamePhase.CHARACTER_SELECTION,\n    currentTurn: 1,\n    currentSeason: Season.SAMHAIN,\n    currentLandscapeId: '',\n    currentChallenge: null as string | null,\n    visitedLandscapes: [] as string[],\n    journeyProgress: 0,\n    journeyPath: [] as string[],\n    gameLog: [] as GameLogEntry[],\n    victoryConditions: {\n      journeyCompleted: false,\n      balanceMaintained: false,\n      knowledgeAcquired: false,\n      bondsFormed: false,\n      questFulfilled: false,\n      landscapesTraversed: false,\n      seasonsExperienced: false,\n      challengesOvercome: false\n    } as VictoryConditions,\n    gameStarted: false,\n    gameOver: false,\n    isVictory: false,\n    threatTokens: 0,\n    blessingTokens: 0,\n    challengeHistory: [] as { id: string, outcome: string, turn: number }[],\n    tempEffects: [] as TempEffect[],\n    journeyComplete: false,\n    wisdom: 0,\n    ceremonyCompleted: false\n  }),\n  \n  getters: {\n    currentLandscape(): LandscapeCard | null {\n      const cardStore = useCardStore();\n      const landscape = cardStore.getLandscapeById(this.currentLandscapeId);\n      return landscape || null;\n    },\n    \n    currentSeasonCard(): SeasonCard | null {\n      const cardStore = useCardStore();\n      const seasonCard = cardStore.getSeasonById(this.currentSeason);\n      return seasonCard || null;\n    },\n    \n    journeyPercentage(): number {\n      return Math.min(100, Math.round((this.journeyProgress / 10) * 100));\n    },\n    \n    isGameOver(): boolean {\n      return this.gameOver;\n    },\n    \n    hasWon(): boolean {\n      return this.isVictory;\n    },\n    \n    formattedGameLog(): GameLogEntry[] {\n      return [...this.gameLog].reverse();\n    },\n    \n    threatLevel(): number {\n      return Math.floor(this.threatTokens / 3);\n    },\n    \n    hasTempEffect(): (effectId: string) => boolean {\n      return (effectId: string) => {\n        return this.tempEffects.some(effect => effect.id === effectId && effect.duration > 0);\n      };\n    },\n    \n    getTempEffectStrength(): (effectId: string) => number {\n      return (effectId: string) => {\n        const effect = this.tempEffects.find(effect => effect.id === effectId && effect.duration > 0);\n        return effect ? effect.strength : 0;\n      };\n    }\n  },\n  \n  actions: {\n    startGame(): void {\n      this.gameStarted = true;\n      this.currentPhase = GamePhase.CHARACTER_SELECTION;\n      this.currentTurn = 1;\n      this.currentSeason = Season.SAMHAIN;\n      this.threatTokens = 0;\n      this.tempEffects = [];\n      this.addToGameLog('Your journey begins in the season of Samhain, when the veil between worlds is thinnest.', true);\n    },\n    \n    resetGame(): void {\n      this.currentPhase = GamePhase.CHARACTER_SELECTION;\n      this.currentTurn = 1;\n      this.currentSeason = Season.SAMHAIN;\n      this.currentLandscapeId = '';\n      this.currentChallenge = null;\n      this.visitedLandscapes = [];\n      this.journeyProgress = 0;\n      this.journeyPath = [];\n      this.gameLog = [];\n      this.victoryConditions = {\n        journeyCompleted: false,\n        balanceMaintained: false,\n        knowledgeAcquired: false,\n        bondsFormed: false,\n        questFulfilled: false,\n        landscapesTraversed: false,\n        seasonsExperienced: false,\n        challengesOvercome: false\n      };\n      this.gameStarted = false;\n      this.gameOver = false;\n      this.isVictory = false;\n      this.threatTokens = 0;\n      this.blessingTokens = 0;\n      this.challengeHistory = [];\n      this.tempEffects = [];\n    },\n    \n    endGame(isVictory: boolean): void {\n      this.gameOver = true;\n      this.isVictory = isVictory;\n      \n      if (isVictory) {\n        this.addToGameLog('Congratulations! You have completed your journey through the Celtic Realm.', true);\n      } else {\n        this.addToGameLog('Your journey has come to an end. The Celtic Realm remains shrouded in mystery.', true);\n      }\n      \n      this.currentPhase = GamePhase.GAME_OVER;\n    },\n    \n    setPhase(phase: GamePhase): void {\n      this.currentPhase = phase;\n      this.addToGameLog(`Entering the ${this.formatPhase(phase)} phase.`);\n    },\n    \n    advancePhase(): void {\n      const phaseOrder = [\n        GamePhase.CHARACTER_SELECTION,\n        GamePhase.SEASONAL_ASSESSMENT,\n        GamePhase.THREAT_LEVEL_CHECK,\n        GamePhase.LANDSCAPE_CHALLENGE,\n        GamePhase.CHALLENGE_RESOLUTION,\n        GamePhase.RESOURCE_MANAGEMENT,\n        GamePhase.ANIMAL_COMPANION,\n        GamePhase.CRAFTING,\n        GamePhase.HEALING_RECOVERY,\n        GamePhase.JOURNEY_PROGRESSION\n      ];\n      \n      const currentIndex = phaseOrder.indexOf(this.currentPhase);\n      if (currentIndex !== -1) {\n        this.currentPhase = phaseOrder[(currentIndex + 1) % phaseOrder.length];\n        this.addToGameLog(`Entering the ${this.formatPhase(this.currentPhase)} phase.`, true, 'phase', {\n          previousPhase: phaseOrder[currentIndex],\n          newPhase: this.currentPhase\n        });\n        \n        // If we've completed a full cycle, advance the turn\n        if (this.currentPhase === GamePhase.SEASONAL_ASSESSMENT) {\n          this.advanceTurn();\n        }\n      }\n    },\n    \n    advanceTurn(): void {\n      this.currentTurn++;\n      this.addToGameLog(`Turn ${this.currentTurn} has begun.`, true, 'system', {\n        newTurn: this.currentTurn,\n        currentSeason: this.formatSeason(this.currentSeason)\n      });\n      \n      // Process any temporary effects\n      this.processTempEffects();\n      \n      // Check if we need to advance the season\n      if (this.currentTurn % 3 === 0) {\n        this.advanceSeason();\n      }\n      \n      // Check victory conditions\n      this.checkVictoryConditions();\n    },\n    \n    advanceSeason(): void {\n      const seasonOrder = [\n        Season.SAMHAIN,\n        Season.WINTERS_DEPTH,\n        Season.IMBOLC,\n        Season.BELTANE,\n        Season.LUGHNASADH\n      ];\n      \n      const currentIndex = seasonOrder.indexOf(this.currentSeason);\n      if (currentIndex !== -1) {\n        const nextIndex = (currentIndex + 1) % seasonOrder.length;\n        const previousSeason = this.currentSeason;\n        this.currentSeason = seasonOrder[nextIndex];\n        \n        this.addToGameLog(`The season has changed to ${this.formatSeason(this.currentSeason)}.`, true, 'phase', {\n          previousSeason: this.formatSeason(previousSeason),\n          newSeason: this.formatSeason(this.currentSeason),\n          turn: this.currentTurn\n        });\n        \n        // Process resource changes with seasonal transition\n        this.processSeasonalResourceChanges(previousSeason, this.currentSeason);\n        \n        // Apply season effects\n        const cardStore = useCardStore();\n        const seasonCard = cardStore.getSeasonById(this.currentSeason);\n        \n        if (seasonCard) {\n          this.addToGameLog(`${seasonCard.name}: ${seasonCard.description}`, false, 'system', {\n            seasonEffects: seasonCard.effects\n          });\n          \n          // Apply any immediate effects of the season\n          if (seasonCard.effects && seasonCard.effects.length > 0) {\n            seasonCard.effects.forEach(effect => {\n              const description = typeof effect.effect === 'string' ? effect.effect : `${effect.effect}`;\n              this.addToGameLog(`Season Effect: ${effect.name} - ${description}`, false, 'system', {\n                effectDetails: effect\n              });\n              // Here you would apply the actual effect logic\n            });\n          }\n        }\n      }\n    },\n    \n    setCurrentLandscape(landscapeId: string): void {\n      const previousLandscapeId = this.currentLandscapeId;\n      this.currentLandscapeId = landscapeId;\n      \n      // Add to visited landscapes if not already visited\n      if (!this.visitedLandscapes.includes(landscapeId)) {\n        this.addVisitedLandscape(landscapeId);\n      }\n      \n      const cardStore = useCardStore();\n      const landscape = cardStore.getLandscapeById(landscapeId);\n      \n      if (landscape) {\n        this.addToGameLog(`You have arrived at ${landscape.name}.`, true, 'action', {\n          previousLandscapeId,\n          newLandscapeId: landscapeId,\n          landscapeName: landscape.name,\n          availableResources: landscape.availableResources,\n          specialFeature: landscape.specialFeature,\n          providesShelter: landscape.providesShelter\n        });\n        \n        // Apply entry effects if any\n        if (landscape.entryEffect) {\n          this.addToGameLog(`${landscape.name} Entry Effect: ${landscape.entryEffect.description}`, false, 'system', {\n            entryEffect: landscape.entryEffect\n          });\n          // Here you would apply the actual entry effect logic\n        }\n        \n        // Check if we've traversed enough landscapes for victory condition\n        if (this.visitedLandscapes.length >= 10) {\n          this.victoryConditions.landscapesTraversed = true;\n          this.addToGameLog('You have traversed enough landscapes to complete your journey.', true, 'system', {\n            visitedLandscapes: this.visitedLandscapes.length,\n            requiredLandscapes: 10\n          });\n        }\n      }\n    },\n    \n    addVisitedLandscape(landscapeId: string): void {\n      if (!this.visitedLandscapes.includes(landscapeId)) {\n        this.visitedLandscapes.push(landscapeId);\n        \n        const cardStore = useCardStore();\n        const landscape = cardStore.getLandscapeById(landscapeId);\n        \n        if (landscape) {\n          this.addToGameLog(`${landscape.name} has been added to your journey path.`, false, 'system', {\n            landscapeId,\n            landscapeName: landscape.name,\n            visitedLandscapesCount: this.visitedLandscapes.length\n          });\n          \n          // Add to journey path for tracking\n          this.journeyPath.push(landscapeId);\n          \n          // Increase journey progress\n          this.advanceJourney(1);\n        }\n      }\n    },\n    \n    setCurrentChallenge(challengeId: string | null): void {\n      const previousChallengeId = this.currentChallenge;\n      this.currentChallenge = challengeId;\n      \n      if (challengeId) {\n        const cardStore = useCardStore();\n        const challenge = cardStore.getChallengeById(challengeId);\n        \n        if (challenge) {\n          // Extract challenge details for the log\n          const challengeName = challenge.name || `${this.currentLandscape?.name || 'Unknown'} Challenge`;\n          const challengeType = challenge.type || 'unknown';\n          const challengeDifficulty = challenge.difficulty || 5;\n          const challengeRewards = challenge.rewards || { resources: [], experience: 0 };\n          \n          this.addToGameLog(`You face a challenge: ${challengeName}`, true, 'challenge', {\n            previousChallengeId,\n            newChallengeId: challengeId,\n            challengeName: challengeName,\n            challengeType: challengeType,\n            challengeDifficulty: challengeDifficulty,\n            challengeRewards: challengeRewards\n          });\n        }\n      } else {\n        this.addToGameLog('The challenge has been cleared.', false, 'challenge', {\n          previousChallengeId\n        });\n      }\n    },\n    \n    advanceJourney(steps: number): void {\n      const previousProgress = this.journeyProgress;\n      this.journeyProgress += steps;\n      \n      this.addToGameLog(`Your journey has progressed by ${steps} steps.`, false, 'action', {\n        previousProgress,\n        newProgress: this.journeyProgress,\n        stepsAdded: steps\n      });\n      \n      // Check if journey is complete\n      if (this.journeyProgress >= 15) {\n        this.victoryConditions.journeyCompleted = true;\n        this.addToGameLog('You have completed your journey through the Celtic Realm!', true, 'system', {\n          journeyProgress: this.journeyProgress,\n          journeyCompleted: true\n        });\n        \n        // Check if we should end the game\n        if (this.checkVictoryConditions()) {\n          this.completeJourney(true);\n        }\n      }\n    },\n    \n    completeJourney(isVictory: boolean): void {\n      this.addToGameLog(\n        isVictory \n          ? 'Congratulations! You have successfully completed your journey through the Celtic Realm!' \n          : 'Your journey has come to an end, but not in victory.',\n        true,\n        'system',\n        {\n          isVictory,\n          journeyProgress: this.journeyProgress,\n          victoryConditions: { ...this.victoryConditions },\n          visitedLandscapes: this.visitedLandscapes.length,\n          currentTurn: this.currentTurn,\n          currentSeason: this.formatSeason(this.currentSeason)\n        }\n      );\n      \n      // End the game\n      this.endGame(isVictory);\n    },\n    \n    addToGameLog(\n      message: string, \n      highlight: boolean = false, \n      type: 'phase' | 'action' | 'challenge' | 'resource' | 'companion' | 'crafting' | 'system' | 'error' | 'debug' = 'system',\n      details: { [key: string]: any } = {}\n    ): void {\n      const entry: GameLogEntry = {\n        message,\n        timestamp: Date.now(),\n        highlight,\n        type,\n        details,\n        turn: this.currentTurn,\n        season: this.currentSeason\n      };\n      \n      // Add timestamp to the message for better readability\n      const time = new Date(entry.timestamp);\n      const timeString = `${time.getHours().toString().padStart(2, '0')}:${time.getMinutes().toString().padStart(2, '0')}:${time.getSeconds().toString().padStart(2, '0')}`;\n      \n      // Format the message with the type and time\n      entry.message = `[${timeString}][${type.toUpperCase()}] ${message}`;\n      \n      // Log to console for debugging\n      if (type === 'error') {\n        console.error(entry.message, details);\n      } else if (type === 'debug') {\n        console.debug(entry.message, details);\n      } else {\n        console.log(entry.message, details);\n      }\n      \n      this.gameLog.push(entry);\n      \n      // Keep the log from getting too large\n      if (this.gameLog.length > 100) {\n        this.gameLog.shift();\n      }\n    },\n    \n    checkVictoryConditions(): boolean {\n      const allConditionsMet = Object.values(this.victoryConditions).every(Boolean);\n      \n      if (allConditionsMet) {\n        this.endGame(true);\n      }\n      \n      return allConditionsMet;\n    },\n    \n    formatPhase(phase: GamePhase): string {\n      return phase.replace(/_/g, ' ').toLowerCase();\n    },\n    \n    formatSeason(season: Season): string {\n      return season.replace(/_/g, ' ').toLowerCase();\n    },\n    \n    // New methods for threat management\n    addThreatTokens(amount: number): number {\n      const oldThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      this.threatTokens += amount;\n      \n      const newThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      if (newThreatLevel > oldThreatLevel) {\n        this.addToGameLog(`The threat level has increased to ${newThreatLevel}!`, true);\n      }\n      \n      // Update victory condition for balance\n      this.victoryConditions.balanceMaintained = this.threatTokens < 6;\n      \n      return this.threatTokens;\n    },\n    \n    removeThreatTokens(amount: number): number {\n      const oldThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      this.threatTokens = Math.max(0, this.threatTokens - amount);\n      \n      const newThreatLevel = Math.floor(this.threatTokens / 3);\n      \n      if (newThreatLevel < oldThreatLevel) {\n        this.addToGameLog(`The threat level has decreased to ${newThreatLevel}.`, true);\n      }\n      \n      // Update victory condition for balance\n      this.victoryConditions.balanceMaintained = this.threatTokens < 6;\n      \n      return this.threatTokens;\n    },\n    \n    addTempEffect(effectId: string, name: string, description: string, strength: number, duration: number): void {\n      // Check if effect already exists\n      const existingEffectIndex = this.tempEffects.findIndex(effect => effect.id === effectId);\n      \n      if (existingEffectIndex !== -1) {\n        // Update existing effect\n        this.tempEffects[existingEffectIndex].strength = strength;\n        this.tempEffects[existingEffectIndex].duration = duration;\n      } else {\n        // Add new effect\n        this.tempEffects.push({\n          id: effectId,\n          name,\n          description,\n          strength,\n          duration\n        });\n        \n        this.addToGameLog(`New effect: ${name} - ${description}`, true);\n      }\n    },\n    \n    removeTempEffect(effectId: string): boolean {\n      const index = this.tempEffects.findIndex(effect => effect.id === effectId);\n      \n      if (index !== -1) {\n        const effect = this.tempEffects[index];\n        this.addToGameLog(`Effect ended: ${effect.name}`, true);\n        this.tempEffects.splice(index, 1);\n        return true;\n      }\n      \n      return false;\n    },\n    \n    processTempEffects(): void {\n      // Reduce duration of all temporary effects\n      this.tempEffects.forEach((effect, index) => {\n        if (effect.duration > 0) {\n          effect.duration--;\n          \n          if (effect.duration === 0) {\n            this.addToGameLog(`Effect ended: ${effect.name}`, true);\n            this.tempEffects.splice(index, 1);\n          }\n        }\n      });\n    },\n    \n    clearGameLog(): void {\n      this.gameLog = [];\n      this.addToGameLog('Game log cleared.', false, 'system', {\n        timestamp: Date.now()\n      });\n    },\n    \n    // Handle threat level check phase\n    handleThreatLevelCheck(): void {\n      const threatLevel = this.threatLevel;\n      this.addToGameLog(`Threat Level Check: Current threat level is ${threatLevel}.`, true);\n      \n      // Apply threat level effects to challenge difficulty\n      if (threatLevel > 0) {\n        this.addToGameLog(`Challenge difficulty increased by +${threatLevel} due to threat level.`);\n      }\n      \n      // Special events based on threat tokens\n      if (this.threatTokens >= 10) {\n        this.addToGameLog('DANGER: The otherworldly forces are manifesting! Rolling on the Otherworldly Manifestation table.', true, 'error');\n        this.triggerOtherworldlyManifestation();\n      } else if (this.threatTokens >= 5) {\n        this.addToGameLog('WARNING: The spiritual balance is disturbed. Drawing a random event.', true, 'challenge');\n        this.triggerRandomEvent();\n      }\n      \n      // Advance to next phase\n      this.advancePhase();\n    },\n    \n    // Random Event System\n    triggerRandomEvent(): void {\n      // Define possible random events\n      const randomEvents = [\n        {\n          id: 'sudden_storm',\n          name: 'Sudden Storm',\n          description: 'Dark clouds gather suddenly, bringing a fierce storm.',\n          effect: () => {\n            this.addToGameLog('The storm makes gathering resources more difficult. Resource capacity reduced by 1 temporarily.', true);\n            this.addTempEffect('storm', 'Sudden Storm', 'Resource capacity -1', 1, 2);\n            const playerStore = usePlayerStore();\n            playerStore.addEffect({\n              id: 'storm_effect',\n              name: 'Storm Hindrance',\n              description: 'Resource gathering diminished',\n              type: 'negative',\n              magnitude: -1,\n              duration: 2,\n              target: 'resourceCapacity'\n            });\n          }\n        },\n        {\n          id: 'animal_migration',\n          name: 'Animal Migration',\n          description: 'A sudden migration of animals passes through the area.',\n          effect: () => {\n            this.addToGameLog('The animal migration brings opportunity. Your next Animal Companion check gets +2.', true);\n            this.addTempEffect('migration', 'Animal Migration', 'Animal Companion checks +2', 2, 1);\n          }\n        },\n        {\n          id: 'ancient_memory',\n          name: 'Ancient Memory',\n          description: 'The land itself seems to remember ancient events, stirring old magics.',\n          effect: () => {\n            const playerStore = usePlayerStore();\n            playerStore.gainExperience(1);\n            this.addToGameLog('Ancient wisdom floods your mind. You gain 1 experience point.', true);\n          }\n        },\n        {\n          id: 'fae_mischief',\n          name: 'Fae Mischief',\n          description: 'The faerie folk play tricks on unwary travelers.',\n          effect: () => {\n            this.addToGameLog('Your supplies have been tampered with by mischievous fae.', true);\n            const playerStore = usePlayerStore();\n            playerStore.loseRandomResources(1);\n          }\n        },\n        {\n          id: 'spiritual_blessing',\n          name: 'Spiritual Blessing',\n          description: 'The ancestral spirits take notice of your journey and offer aid.',\n          effect: () => {\n            this.blessingTokens += 1;\n            this.addToGameLog('You receive a blessing from the spirits. +1 Blessing token.', true);\n          }\n        }\n      ];\n      \n      // Select random event\n      const randomEvent = randomEvents[Math.floor(Math.random() * randomEvents.length)];\n      \n      // Trigger the event\n      this.addToGameLog(`Random Event: ${randomEvent.name} - ${randomEvent.description}`, true);\n      randomEvent.effect();\n    },\n    \n    // Otherworldly Manifestation System\n    triggerOtherworldlyManifestation(): void {\n      // Define possible otherworldly manifestations\n      const manifestations = [\n        {\n          id: 'spirit_guardian',\n          name: 'Spirit Guardian',\n          description: 'A powerful guardian spirit manifests to test your worthiness.',\n          effect: () => {\n            this.addToGameLog('The spirit guardian challenges you to prove your worth!', true);\n            this.addTempEffect('guardian_challenge', 'Spirit Guardian Challenge', 'Must succeed on next 2 challenges or lose 2 health', 2, 2);\n            // Set up consequence if challenges are failed\n            this.addToGameLog('You must succeed on your next two challenges or suffer 2 health damage.', true);\n          }\n        },\n        {\n          id: 'reality_distortion',\n          name: 'Reality Distortion',\n          description: 'The boundaries between worlds thin, causing strange distortions in reality.',\n          effect: () => {\n            this.addToGameLog('Reality warps around you, changing your path!', true);\n            // Change the current landscape to a random one\n            const cardStore = useCardStore();\n            const landscapes = cardStore.landscapes;\n            const randomLandscape = landscapes[Math.floor(Math.random() * landscapes.length)];\n            this.setCurrentLandscape(randomLandscape.id);\n            this.addToGameLog(`You suddenly find yourself at ${randomLandscape.name}!`, true);\n          }\n        },\n        {\n          id: 'ancestral_curse',\n          name: 'Ancestral Curse',\n          description: 'Ancient spirits place a curse upon you for disturbing the balance.',\n          effect: () => {\n            this.addToGameLog('An ancestral curse falls upon you!', true);\n            const playerStore = usePlayerStore();\n            playerStore.addEffect({\n              id: 'ancestral_curse',\n              name: 'Ancestral Curse',\n              description: '-1 to all challenge rolls',\n              type: 'negative',\n              magnitude: -1,\n              duration: 3,\n              target: 'challengeRolls'\n            });\n            this.addToGameLog('You feel weakened. -1 to all challenge rolls for 3 turns.', true);\n          }\n        },\n        {\n          id: 'otherworld_portal',\n          name: 'Otherworld Portal',\n          description: 'A portal to the Otherworld opens, risking pulling you in.',\n          effect: () => {\n            this.addToGameLog('A swirling portal to the Otherworld appears before you!', true);\n            // Increase threat further\n            this.addThreatTokens(2);\n            this.addToGameLog('The portal\\'s energy increases the spiritual imbalance. +2 Threat tokens.', true);\n            \n            // But also offer a choice for reward\n            this.addToGameLog('You sense that reaching into the portal could yield a valuable resource, but at great risk...', true);\n            // This would trigger a choice in the UI\n            // For now, simulate a 50/50 chance of benefit vs. harm\n            if (Math.random() > 0.5) {\n              const playerStore = usePlayerStore();\n              const resource = ['silver_mistletoe', 'standing_stone_chips', 'amber_shards'][Math.floor(Math.random() * 3)];\n              playerStore.addResource(resource);\n              this.addToGameLog(`You reach into the portal and retrieve a rare resource: ${resource.replace('_', ' ')}!`, true);\n            } else {\n              const playerStore = usePlayerStore();\n              playerStore.loseHealth(2);\n              this.addToGameLog('The portal\\'s energy burns you as you reach in! You lose 2 health.', true);\n            }\n          }\n        },\n        {\n          id: 'time_anomaly',\n          name: 'Time Anomaly',\n          description: 'Time flows strangely, affecting your progress and abilities.',\n          effect: () => {\n            this.addToGameLog('Time becomes unstable around you!', true);\n            // 50% chance to advance or reverse season\n            if (Math.random() > 0.5) {\n              this.advanceSeason();\n              this.addToGameLog('Time accelerates, advancing the season prematurely!', true);\n            } else {\n              this.reverseSeason();\n              this.addToGameLog('Time flows backwards, returning to the previous season!', true);\n            }\n          }\n        }\n      ];\n      \n      // Select random manifestation\n      const manifestation = manifestations[Math.floor(Math.random() * manifestations.length)];\n      \n      // Trigger the manifestation\n      this.addToGameLog(`Otherworldly Manifestation: ${manifestation.name} - ${manifestation.description}`, true, 'error');\n      manifestation.effect();\n    },\n    \n    // Helper for Time Anomaly manifestation\n    reverseSeason(): void {\n      const seasonOrder = [\n        Season.SAMHAIN,\n        Season.WINTERS_DEPTH,\n        Season.IMBOLC,\n        Season.BELTANE,\n        Season.LUGHNASADH\n      ];\n      \n      const currentIndex = seasonOrder.indexOf(this.currentSeason);\n      if (currentIndex > 0) {\n        const previousSeason = seasonOrder[currentIndex - 1];\n        this.currentSeason = previousSeason;\n        this.addToGameLog(`The season has reversed to ${this.formatSeason(this.currentSeason)}.`, true);\n      } else {\n        this.addToGameLog('The season remains unchanged - you are already at the beginning of the cycle.', true);\n      }\n      \n      // Update the season card\n      this.updateSeasonCard();\n    },\n    \n    // Handle healing and recovery phase\n    handleHealingRecovery(): void {\n      const playerStore = usePlayerStore();\n      \n      // Basic healing opportunity each turn\n      const healingAmount = 1;\n      const currentSeason = this.currentSeasonCard;\n      \n      // Apply seasonal healing modifiers\n      let seasonalHealingModifier = 0;\n      if (currentSeason) {\n        if (this.currentSeason === Season.IMBOLC) {\n          seasonalHealingModifier = 1; // Imbolc provides +1 healing\n        } else if (this.currentSeason === Season.LUGHNASADH) {\n          seasonalHealingModifier = 0; // Lughnasadh doubles healing effectiveness\n          this.addToGameLog('The community support during Lughnasadh doubles your healing effectiveness.');\n        }\n      }\n      \n      const totalHealing = healingAmount + seasonalHealingModifier;\n      \n      if (playerStore.health < playerStore.maxHealth) {\n        playerStore.healHealth(totalHealing);\n        this.addToGameLog(`You recover ${totalHealing} health during the healing phase.`, true, 'system');\n      } else {\n        this.addToGameLog('You are already at full health.', false, 'system');\n      }\n      \n      // Special healing locations\n      if (this.currentLandscape && ['Sacred Oak Grove', 'Druid\\'s Sanctuary', 'Moonlit Loch'].includes(this.currentLandscape.name)) {\n        const specialHealing = 1;\n        playerStore.healHealth(specialHealing);\n        this.addToGameLog(`The spiritual energy at this ${this.currentLandscape.name} provides an additional ${specialHealing} healing.`, true);\n      }\n      \n      // Advance to next phase\n      this.advancePhase();\n    },\n    \n    // Process resource changes during seasonal transitions\n    processSeasonalResourceChanges(previousSeason: Season, newSeason: Season): void {\n      const playerStore = usePlayerStore();\n      const cardStore = useCardStore();\n      const resources = [...playerStore.resources]; // Create a copy to avoid modification during iteration\n      \n      this.addToGameLog(`Checking resources for seasonal changes...`, false, 'system');\n      \n      // Define which resources spoil during which seasonal transitions\n      const seasonalSpoilage = {\n        // From Samhain to Imbolc (early winter)\n        [`${Season.SAMHAIN}_${Season.WINTERS_DEPTH}`]: ['berries', 'mushrooms', 'fresh_herbs'],\n        [`${Season.WINTERS_DEPTH}_${Season.IMBOLC}`]: ['winter_roots', 'preserved_meats'],\n        \n        // From Imbolc to Beltane (spring)\n        [`${Season.IMBOLC}_${Season.BELTANE}`]: ['spring_flowers', 'birch_sap'],\n        \n        // From Beltane to Lughnasadh (summer)\n        [`${Season.BELTANE}_${Season.LUGHNASADH}`]: ['summer_fruits', 'fresh_water'],\n        \n        // From Lughnasadh to Samhain (autumn)\n        [`${Season.LUGHNASADH}_${Season.SAMHAIN}`]: ['summer_fruits', 'fresh_water']\n      };\n      \n      // Define which resources transform during seasonal transitions\n      const seasonalTransformations = {\n        // From Samhain to Imbolc\n        [`${Season.SAMHAIN}_${Season.WINTERS_DEPTH}`]: {\n          'acorns': 'winter_roots', // Acorns become more valuable in winter\n          'fresh_herbs': 'dried_herbs' // Fresh herbs dry out\n        },\n        \n        // From Imbolc to Beltane\n        [`${Season.WINTERS_DEPTH}_${Season.IMBOLC}`]: {\n          'snow_essence': 'spring_water', // Snow melts into spring water\n          'pine_needles': 'spring_flowers' // New growth replaces old\n        },\n        \n        // From Beltane to Lughnasadh\n        [`${Season.IMBOLC}_${Season.BELTANE}`]: {\n          'spring_flowers': 'summer_fruits', // Flowers become fruits\n          'birch_sap': 'sweet_syrup' // Sap concentrates in the heat\n        },\n        \n        // From Lughnasadh to Samhain\n        [`${Season.BELTANE}_${Season.LUGHNASADH}`]: {\n          'green_leaves': 'red_leaves', // Leaves change color\n          'summer_fruits': 'fermented_fruit' // Fruits ferment\n        }\n      };\n      \n      // Check for resources that spoil during this seasonal transition\n      const transitionKey = `${previousSeason}_${newSeason}`;\n      const spoilingResources = seasonalSpoilage[transitionKey] || [];\n      const transformingResources = seasonalTransformations[transitionKey] || {};\n      \n      // Process spoilage\n      resources.forEach(resourceId => {\n        // Check if this resource spoils\n        if (spoilingResources.includes(resourceId)) {\n          playerStore.removeResource(resourceId);\n          this.addToGameLog(`Your ${this.formatResourceName(resourceId)} has spoiled with the change to ${this.formatSeason(newSeason)}.`, true, 'resource');\n        }\n        \n        // Check if this resource transforms\n        if (resourceId in transformingResources) {\n          const newResourceId = transformingResources[resourceId];\n          playerStore.removeResource(resourceId);\n          playerStore.addResource(newResourceId);\n          \n          // Get resource names for better logging\n          const oldResource = cardStore.getResourceById(resourceId);\n          const newResource = cardStore.getResourceById(newResourceId);\n          \n          const oldName = oldResource ? oldResource.name : this.formatResourceName(resourceId);\n          const newName = newResource ? newResource.name : this.formatResourceName(newResourceId);\n          \n          this.addToGameLog(`Your ${oldName} has transformed into ${newName} with the change to ${this.formatSeason(newSeason)}.`, true, 'resource');\n        }\n      });\n      \n      // Update resource availability based on the new season\n      this.updateResourceAvailability();\n    },\n    \n    // Helper method to format resource ID to a friendly name\n    formatResourceName(resourceId: string): string {\n      return resourceId.replace(/_/g, ' ');\n    },\n    \n    // Update resource availability based on current season\n    updateResourceAvailability(): void {\n      // This would be implemented in the cardStore or another appropriate place\n      // It would adjust what resources are available in each landscape based on the season\n      \n      this.addToGameLog(`Resource availability has adjusted to the new season.`, false, 'system');\n      \n      // Here we would apply season-specific resource modifiers\n      // For example, some resources become more abundant in certain seasons\n    },\n    \n    // Method to perform a D8 dice roll (1-8)\n    rollD8(): number {\n      // Random number between 1 and 8\n      const roll = Math.floor(Math.random() * 8) + 1;\n      this.addToGameLog(`You rolled a ${roll} on a D8.`, true, 'system');\n      return roll;\n    },\n    \n    // Resolve a challenge based on roll and difficulty\n    resolveChallenge(totalRoll: number, difficulty: number): 'SUCCESS' | 'PARTIAL' | 'FAILURE' {\n      this.addToGameLog(`Challenge attempt: Roll ${totalRoll} vs Difficulty ${difficulty}`, true, 'challenge');\n      \n      // Natural 8 is always a success\n      if (totalRoll >= difficulty + 2) {\n        this.addToGameLog('Critical Success! You overcome the challenge with exceptional results.', true, 'challenge');\n        \n        // Add to challenge history\n        if (this.currentChallenge) {\n          this.challengeHistory.push({\n            id: this.currentChallenge,\n            outcome: 'SUCCESS',\n            turn: this.currentTurn\n          });\n        }\n        \n        // Remove threat tokens for successful challenge\n        this.removeThreatTokens(1);\n        \n        return 'SUCCESS';\n      } else if (totalRoll >= difficulty) {\n        this.addToGameLog('Success! You overcome the challenge.', true, 'challenge');\n        \n        // Add to challenge history\n        if (this.currentChallenge) {\n          this.challengeHistory.push({\n            id: this.currentChallenge,\n            outcome: 'SUCCESS',\n            turn: this.currentTurn\n          });\n        }\n        \n        return 'SUCCESS';\n      } else if (totalRoll >= difficulty - 2) {\n        this.addToGameLog('Partial Success. You manage to barely overcome parts of the challenge.', true, 'challenge');\n        \n        // Add to challenge history\n        if (this.currentChallenge) {\n          this.challengeHistory.push({\n            id: this.currentChallenge,\n            outcome: 'PARTIAL',\n            turn: this.currentTurn\n          });\n        }\n        \n        // Add threat tokens for partial success\n        this.addThreatTokens(1);\n        \n        return 'PARTIAL';\n      } else {\n        this.addToGameLog('Failure. The challenge proves too difficult for now.', true, 'challenge');\n        \n        // Add to challenge history\n        if (this.currentChallenge) {\n          this.challengeHistory.push({\n            id: this.currentChallenge,\n            outcome: 'FAILURE',\n            turn: this.currentTurn\n          });\n        }\n        \n        // Add threat tokens for failure\n        this.addThreatTokens(2);\n        \n        return 'FAILURE';\n      }\n    },\n    \n    // Perform a special action at a location\n    performSpecialAction(actionId: string): { success: boolean; message: string } {\n      const cardStore = useCardStore();\n      const playerStore = usePlayerStore();\n      \n      // Handle different special actions based on ID\n      switch (actionId) {\n        case 'standing_stones_ceremony':\n          // This is the final ceremony at the Great Standing Stones\n          this.ceremonyCompleted = true;\n          this.journeyComplete = true;\n          \n          // Add wisdom to player\n          playerStore.wisdom = (playerStore.wisdom || 0) + 5;\n          \n          // Log the result\n          this.addToGameLog('You have performed the ancient ceremony at the Standing Stones. Your journey is complete!', true, 'special');\n          \n          return {\n            success: true,\n            message: 'You have successfully completed the journey!'\n          };\n          \n        case 'heal_at_spring':\n          // Healing at the sacred spring\n          playerStore.healHealth(5);\n          \n          this.addToGameLog('You drink from the sacred spring and feel revitalized.', true, 'special');\n          \n          return {\n            success: true,\n            message: 'You feel refreshed and healed.'\n          };\n          \n        case 'meditation':\n          // Gaining wisdom through meditation\n          playerStore.wisdom = (playerStore.wisdom || 0) + 2;\n          \n          this.addToGameLog('You meditate peacefully, gaining insight and wisdom.', true, 'special');\n          \n          return {\n            success: true,\n            message: 'Your mind feels clearer and wiser.'\n          };\n          \n        default:\n          return {\n            success: false,\n            message: 'That action is not available at this location.'\n          };\n      }\n    },\n  }\n});\n","/**\n * Victory Service\n * Validates victory conditions based on game state\n */\nimport { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\n\nclass VictoryService {\n  /**\n   * Check all victory conditions\n   * @returns Object with victory status and individual conditions\n   */\n  checkVictoryConditions(): {\n    isVictory: boolean;\n    conditions: {\n      journeyCompleted: boolean;\n      balanceMaintained: boolean;\n      knowledgeAcquired: boolean;\n      bondsFormed: boolean;\n      questFulfilled: boolean;\n      landscapesTraversed: boolean;\n      seasonsExperienced: boolean;\n      challengesOvercome: boolean;\n    };\n  } {\n    const journeyCompleted = this.checkJourneyCompletion();\n    const balanceMaintained = this.checkBalanceMaintained();\n    const knowledgeAcquired = this.checkKnowledgeAcquired();\n    const bondsFormed = this.checkBondsFormed();\n    const questFulfilled = this.checkPersonalQuest();\n    \n    // Add the missing conditions\n    const landscapesTraversed = this.checkLandscapesTraversed();\n    const seasonsExperienced = this.checkSeasonsExperienced();\n    const challengesOvercome = this.checkChallengesOvercome();\n    \n    const conditions = {\n      journeyCompleted,\n      balanceMaintained,\n      knowledgeAcquired,\n      bondsFormed,\n      questFulfilled,\n      landscapesTraversed,\n      seasonsExperienced,\n      challengesOvercome\n    };\n    \n    const isVictory = Object.values(conditions).every(Boolean);\n    \n    // Update game state\n    const gameStore = useGameStore();\n    gameStore.victoryConditions = conditions;\n    \n    return {\n      isVictory,\n      conditions\n    };\n  }\n  \n  /**\n   * Check if journey is complete (all 15 landscapes visited)\n   * @returns True if journey is complete\n   */\n  checkJourneyCompletion(): boolean {\n    const gameStore = useGameStore();\n    \n    // Complete when all 15 landscapes have been visited\n    return gameStore.visitedLandscapes.length >= 15;\n  }\n  \n  /**\n   * Check if balance is maintained (fewer than 6 threat tokens)\n   * @returns True if balance is maintained\n   */\n  checkBalanceMaintained(): boolean {\n    const gameStore = useGameStore();\n    return gameStore.threatTokens < 6;\n  }\n  \n  /**\n   * Check if knowledge acquired (at least 2 crafted items)\n   * @returns True if knowledge is acquired\n   */\n  checkKnowledgeAcquired(): boolean {\n    const playerStore = usePlayerStore();\n    return playerStore.craftedItems.length >= 2;\n  }\n  \n  /**\n   * Check if bonds formed (at least one animal companion)\n   * @returns True if bonds are formed\n   */\n  checkBondsFormed(): boolean {\n    const playerStore = usePlayerStore();\n    return playerStore.animalCompanions.length >= 1;\n  }\n  \n  /**\n   * Check character-specific personal quest\n   * @returns True if personal quest is fulfilled\n   */\n  checkPersonalQuest(): boolean {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    const gameStore = useGameStore();\n    \n    const character = cardStore.getCharacterById(playerStore.characterId);\n    if (!character) {\n      return false;\n    }\n    \n    // Since we don't have access to the actual properties needed,\n    // we'll implement a simplified version based on the character's ID\n    switch (character.id) {\n      case 'giant_beastfriend':\n        // Bond with at least 4 different Animal Companions\n        // Using companionCount getter instead of animalCompanions array\n        return playerStore.companionCount >= 4;\n        \n      case 'hedge_witch':\n        // Create at least 3 different Crafted Items\n        // Using craftedItemCount getter instead of craftedItems array\n        return playerStore.craftedItemCount >= 3;\n        \n      case 'iron_crafter':\n        // Craft a Legendary Item\n        // Since hasCraftedLegendaryItem doesn't exist, we'll assume this is based on having enough crafted items\n        return playerStore.craftedItemCount >= 5;\n        \n      case 'druid_seer':\n        // Complete 3 Ritual Sites\n        // Since completedRitualSites doesn't exist, we'll assume this is based on visited landscapes\n        return gameStore.visitedLandscapes.length >= 10;\n        \n      case 'celtic_warrior':\n        // Defeat 5 Challenges with Strength\n        // Since we don't have a way to track this, we'll assume this is based on visited landscapes\n        return gameStore.visitedLandscapes.length >= 12;\n        \n      case 'forest_guardian':\n        // Maintain perfect balance (0 threat tokens) for 5 consecutive turns\n        // Since we can't track consecutive turns, we'll check if threat tokens are at 0\n        return gameStore.threatTokens === 0;\n        \n      default:\n        return false;\n    }\n  }\n  \n  /**\n   * Check if landscapes traversed (at least 10 landscapes visited)\n   * @returns True if landscapes traversed\n   */\n  checkLandscapesTraversed(): boolean {\n    const gameStore = useGameStore();\n    return gameStore.visitedLandscapes.length >= 10;\n  }\n  \n  /**\n   * Check if seasons experienced (at least 3 seasons experienced)\n   * @returns True if seasons experienced\n   */\n  checkSeasonsExperienced(): boolean {\n    const gameStore = useGameStore();\n    // Since experiencedSeasons doesn't exist, we'll assume this is always true for now\n    // In a real implementation, we would track the seasons experienced\n    return true;\n  }\n  \n  /**\n   * Check if challenges overcome (at least 5 challenges overcome)\n   * @returns True if challenges overcome\n   */\n  checkChallengesOvercome(): boolean {\n    const gameStore = useGameStore();\n    // Since overcomeChallenges doesn't exist, we'll assume this is always true for now\n    // In a real implementation, we would track the challenges overcome\n    return true;\n  }\n  \n  /**\n   * Process victory\n   */\n  processVictory(): void {\n    const gameStore = useGameStore();\n    \n    // Use the endGame method instead of directly modifying state properties\n    gameStore.endGame(true);\n    \n    // Add a victory message to the game log\n    gameStore.addToGameLog('Victory! You have completed your journey through the Celtic Realm.', true);\n  }\n  \n  /**\n   * Process defeat\n   * @param reason The reason for defeat\n   */\n  processDefeat(reason: string): void {\n    const gameStore = useGameStore();\n    \n    // Use the endGame method instead of directly modifying state properties\n    gameStore.endGame(false);\n    \n    // Add the defeat reason to the game log\n    gameStore.addToGameLog(`Defeat: ${reason}`, true);\n    \n    // We can't set gameStats directly as it doesn't exist in the store\n    // Instead, we'll log the stats to the game log\n    gameStore.addToGameLog(`Game Stats - Turns: ${gameStore.currentTurn}, Threat: ${gameStore.threatTokens}, Season: ${gameStore.currentSeason}`, false);\n  }\n  \n  /**\n   * Check for defeat conditions\n   * @returns Object with defeat status and reason\n   */\n  checkDefeatConditions(): {\n    isDefeat: boolean;\n    reason: string | null;\n  } {\n    const gameStore = useGameStore();\n    const playerStore = usePlayerStore();\n    \n    // Check health\n    if (playerStore.health <= 0) {\n      return {\n        isDefeat: true,\n        reason: 'Your journey has ended as your health has fallen to zero.'\n      };\n    }\n    \n    // Check threat level\n    if (gameStore.threatTokens >= 15) {\n      return {\n        isDefeat: true,\n        reason: 'The otherworldly forces have overwhelmed you as threat tokens reached 15.'\n      };\n    }\n    \n    // Check if exceeded maximum turns\n    if (gameStore.currentTurn >= 30) {\n      return {\n        isDefeat: true,\n        reason: 'Your journey has taken too long, and winter has claimed you.'\n      };\n    }\n    \n    return {\n      isDefeat: false,\n      reason: null\n    };\n  }\n}\n\nexport const victoryService = new VictoryService();\n","import { defineStore } from 'pinia';\nimport { PlayerState, PlayerEffect, CompanionState } from '@/models/types/player';\nimport { CharacterCard } from '@/models/types/cards';\nimport { useCardStore } from './cardStore';\nimport { useGameStore } from './gameStore';\nimport { victoryService } from '@/services/victoryService';\n\nexport const usePlayerStore = defineStore('player', {\n  state: (): PlayerState => ({\n    characterId: '',\n    health: 10,\n    maxHealth: 10,\n    resources: [],\n    resourceCapacity: 5,\n    animalCompanions: [],\n    craftedItems: [],\n    experience: 0,\n    knowledgeDiscovered: [],\n    specialAbilityUsed: false,\n    activeEffects: [],\n    hasCraftedLegendaryItem: false,\n    uniqueCraftedItemsCount: 0,\n    companionLoyalty: {},\n    wisdom: 0,  // Add missing wisdom property\n  }),\n  \n  getters: {\n    character(): CharacterCard | null {\n      const cardStore = useCardStore();\n      const character = cardStore.getCharacterById(this.characterId);\n      return character || null;\n    },\n    \n    resourceCount(): number {\n      return this.resources.length;\n    },\n    \n    isResourceCapacityReached(): boolean {\n      return this.resources.length >= this.resourceCapacity;\n    },\n    \n    companionCount(): number {\n      return this.animalCompanions.length;\n    },\n    \n    craftedItemCount(): number {\n      return this.craftedItems.length;\n    },\n    \n    experienceLevel(): number {\n      // Calculate level based on experience points\n      // Every 3 experience points = 1 level\n      return Math.floor(this.experience / 3) + 1;\n    },\n    \n    hasEffect(): (effectId: string) => boolean {\n      return (effectId: string) => {\n        return this.activeEffects.some(effect => effect.id === effectId && effect.duration > 0);\n      };\n    },\n    \n    getEffectStrength(): (effectId: string) => number {\n      return (effectId: string) => {\n        const effect = this.activeEffects.find(effect => effect.id === effectId && effect.duration > 0);\n        return effect ? effect.magnitude : 0;\n      };\n    }\n  },\n  \n  actions: {\n    setCharacter(characterId: string): void {\n      const cardStore = useCardStore();\n      const character = cardStore.getCharacterById(characterId);\n      \n      if (character) {\n        this.characterId = characterId;\n        this.health = character.healthPoints;\n        this.maxHealth = character.healthPoints;\n        this.resourceCapacity = character.resourceCapacity;\n        \n        // Add starting resources if any\n        if (character.startingResources) {\n          character.startingResources.forEach(resourceId => {\n            this.addResource(resourceId);\n          });\n        }\n        \n        // Add starting companions if any\n        if (character.startingCompanion) {\n          this.addAnimalCompanion(character.startingCompanion);\n        }\n        \n        if (character.startingCompanions) {\n          character.startingCompanions.forEach(companionId => {\n            this.addAnimalCompanion(companionId);\n          });\n        }\n      }\n    },\n    \n    selectCharacter(characterId: string): boolean {\n      this.setCharacter(characterId);\n      return true;\n    },\n    \n    addResource(resourceId: string) {\n      if (this.resources.length < this.resourceCapacity) {\n        this.resources.push(resourceId);\n        return true;\n      }\n      return false;\n    },\n    \n    removeResource(resourceId: string) {\n      const index = this.resources.indexOf(resourceId);\n      if (index !== -1) {\n        this.resources.splice(index, 1);\n        return true;\n      }\n      return false;\n    },\n    \n    addAnimalCompanion(companionId: string) {\n      if (!this.animalCompanions.includes(companionId)) {\n        this.animalCompanions.push(companionId);\n        \n        // Initialize companion loyalty status\n        this.companionLoyalty[companionId] = {\n          loyalty: 5, // Initial loyalty level (1-10 scale)\n          state: CompanionState.LOYAL,\n          turnsSinceLastFed: 0,\n          turnsWary: 0\n        };\n        \n        return true;\n      }\n      return false;\n    },\n    \n    removeAnimalCompanion(companionId: string) {\n      const index = this.animalCompanions.indexOf(companionId);\n      if (index !== -1) {\n        this.animalCompanions.splice(index, 1);\n        \n        // Clean up companion loyalty data\n        if (this.companionLoyalty[companionId]) {\n          delete this.companionLoyalty[companionId];\n        }\n        \n        return true;\n      }\n      return false;\n    },\n    \n    // Feed an animal companion\n    feedCompanion(companionId: string, resourceId: string): boolean {\n      // Check if the companion exists\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      // Check if the player has the resource\n      if (!this.resources.includes(resourceId)) {\n        return false;\n      }\n      \n      // Remove the resource\n      this.removeResource(resourceId);\n      \n      // Get companion status\n      const status = this.companionLoyalty[companionId];\n      if (!status) {\n        // Initialize if missing\n        this.companionLoyalty[companionId] = {\n          loyalty: 5,\n          state: CompanionState.LOYAL,\n          turnsSinceLastFed: 0,\n          turnsWary: 0\n        };\n      }\n      \n      // Update companion status\n      const updatedStatus = this.companionLoyalty[companionId];\n      \n      // Reset feeding counter\n      updatedStatus.turnsSinceLastFed = 0;\n      \n      // Increase loyalty (max 10)\n      updatedStatus.loyalty = Math.min(10, updatedStatus.loyalty + 1);\n      \n      // If companion was wary, restore to loyal state\n      if (updatedStatus.state === CompanionState.WARY) {\n        updatedStatus.state = CompanionState.LOYAL;\n        updatedStatus.turnsWary = 0;\n      }\n      \n      const gameStore = useGameStore();\n      gameStore.addToGameLog(`You fed your animal companion with ${gameStore.formatResourceName(resourceId)}.`, true, 'companion');\n      \n      return true;\n    },\n    \n    // Handle companions at end of turn\n    updateCompanionStatus(): void {\n      const gameStore = useGameStore();\n      const cardStore = useCardStore();\n      \n      // Iterate through all companions\n      this.animalCompanions.forEach(companionId => {\n        const status = this.companionLoyalty[companionId];\n        \n        // Skip if no status is recorded\n        if (!status) return;\n        \n        // Increment turns since last fed\n        status.turnsSinceLastFed++;\n        \n        // Get companion card for better logging\n        const companion = cardStore.getAnimalCompanionById(companionId);\n        const companionName = companion ? companion.name : 'Animal companion';\n        \n        // Check if companion should become wary (3 turns without food)\n        if (status.state === CompanionState.LOYAL && status.turnsSinceLastFed >= 3) {\n          status.state = CompanionState.WARY;\n          status.turnsWary = 0;\n          gameStore.addToGameLog(`${companionName} has become wary due to lack of food.`, true, 'companion');\n        }\n        \n        // If already wary, update wary counter\n        if (status.state === CompanionState.WARY) {\n          status.turnsWary++;\n          \n          // If wary for 2 turns, mark as leaving\n          if (status.turnsWary >= 2) {\n            status.state = CompanionState.LEAVING;\n            gameStore.addToGameLog(`${companionName} is leaving you due to continued neglect.`, true, 'companion');\n          }\n        }\n        \n        // If companion is marked as leaving, remove it\n        if (status.state === CompanionState.LEAVING) {\n          this.removeAnimalCompanion(companionId);\n          gameStore.addToGameLog(`${companionName} has left you.`, true, 'companion');\n        }\n      });\n    },\n    \n    // Check if a companion is in a specific state\n    isCompanionInState(companionId: string, state: CompanionState): boolean {\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      return status ? status.state === state : false;\n    },\n    \n    // Get all companions in a specific state\n    getCompanionsInState(state: CompanionState): string[] {\n      return this.animalCompanions.filter(id => {\n        const status = this.companionLoyalty[id];\n        return status && status.state === state;\n      });\n    },\n    \n    addCraftedItem(itemId: string) {\n      if (!this.craftedItems.includes(itemId)) {\n        this.craftedItems.push(itemId);\n        return true;\n      }\n      return false;\n    },\n    \n    removeCraftedItem(itemId: string) {\n      const index = this.craftedItems.indexOf(itemId);\n      if (index !== -1) {\n        this.craftedItems.splice(index, 1);\n        return true;\n      }\n      return false;\n    },\n    \n    // Add experience points to the player\n    addExperience(amount: number): number {\n      this.experience += amount;\n      return this.experience;\n    },\n    \n    // For backward compatibility with tests\n    gainExperience(amount: number): number {\n      return this.addExperience(amount);\n    },\n    \n    loseHealth(amount: number) {\n      this.health = Math.max(0, this.health - amount);\n      \n      // Check if player has died\n      if (this.health <= 0) {\n        // Check defeat conditions and get the reason\n        const defeatResult = victoryService.checkDefeatConditions();\n        \n        // Process defeat using the victory service\n        if (defeatResult.isDefeat) {\n          victoryService.processDefeat(defeatResult.reason || 'Your health has reached zero.');\n        }\n      }\n      \n      return this.health > 0;\n    },\n    \n    healHealth(amount: number) {\n      this.health = Math.min(this.maxHealth, this.health + amount);\n      return this.health;\n    },\n    \n    discoverKnowledge(knowledgeId: string) {\n      if (!this.knowledgeDiscovered.includes(knowledgeId)) {\n        this.knowledgeDiscovered.push(knowledgeId);\n        return true;\n      }\n      return false;\n    },\n    \n    useSpecialAbility() {\n      if (!this.specialAbilityUsed) {\n        this.specialAbilityUsed = true;\n        return true;\n      }\n      return false;\n    },\n    \n    resetSpecialAbility() {\n      this.specialAbilityUsed = false;\n      return true;\n    },\n    \n    resetPlayer() {\n      this.characterId = '';\n      this.health = 10;\n      this.maxHealth = 10;\n      this.resources = [];\n      this.resourceCapacity = 5;\n      this.animalCompanions = [];\n      this.craftedItems = [];\n      this.experience = 0;\n      this.knowledgeDiscovered = [];\n      this.specialAbilityUsed = false;\n      this.activeEffects = [];\n      this.hasCraftedLegendaryItem = false;\n      this.uniqueCraftedItemsCount = 0;\n      this.companionLoyalty = {};\n    },\n    \n    addCompanion(companionId: string) {\n      if (!this.animalCompanions.includes(companionId)) {\n        this.animalCompanions.push(companionId);\n        if (!this.companionLoyalty) {\n          this.companionLoyalty = {};\n        }\n        this.companionLoyalty[companionId] = 1;\n      }\n    },\n    \n    removeCompanion(companionId: string) {\n      this.animalCompanions = this.animalCompanions.filter(id => id !== companionId);\n      if (this.companionLoyalty && this.companionLoyalty[companionId]) {\n        delete this.companionLoyalty[companionId];\n      }\n    },\n    \n    setCompanionLoyalty(companionId: string, loyalty: number) {\n      if (!this.companionLoyalty) {\n        this.companionLoyalty = {};\n      }\n      this.companionLoyalty[companionId] = loyalty;\n    },\n    \n    // New methods for threat management\n    takeDamage(amount: number) {\n      const gameStore = useGameStore();\n      const alive = this.loseHealth(amount);\n      \n      gameStore.addToGameLog(`You take ${amount} damage. Health: ${this.health}/${this.maxHealth}`);\n      \n      if (!alive) {\n        gameStore.addToGameLog('You have been defeated!', true);\n        gameStore.endGame(false);\n      }\n      \n      return alive;\n    },\n    \n    loseRandomResources(amount: number) {\n      const gameStore = useGameStore();\n      let lostCount = 0;\n      \n      // Don't try to remove more resources than the player has\n      amount = Math.min(amount, this.resources.length);\n      \n      for (let i = 0; i < amount; i++) {\n        if (this.resources.length > 0) {\n          // Get a random resource index\n          const randomIndex = Math.floor(Math.random() * this.resources.length);\n          const resourceId = this.resources[randomIndex];\n          \n          // Get resource name for logging\n          const cardStore = useCardStore();\n          const resource = cardStore.getResourceById(resourceId);\n          \n          // Remove the resource\n          this.resources.splice(randomIndex, 1);\n          lostCount++;\n          \n          gameStore.addToGameLog(`You lost ${resource ? resource.name : 'a resource'}.`);\n        }\n      }\n      \n      return lostCount;\n    },\n    \n    addEffect(effect: PlayerEffect) {\n      const gameStore = useGameStore();\n      \n      // Check if effect already exists\n      const existingEffectIndex = this.activeEffects.findIndex(e => e.id === effect.id);\n      \n      if (existingEffectIndex !== -1) {\n        // Update existing effect\n        this.activeEffects[existingEffectIndex].magnitude = effect.magnitude;\n        this.activeEffects[existingEffectIndex].duration = effect.duration;\n        gameStore.addToGameLog(`Effect renewed: ${effect.name}`, true);\n      } else {\n        // Add new effect\n        this.activeEffects.push(effect);\n        gameStore.addToGameLog(`New effect gained: ${effect.name} - ${effect.description}`, true);\n      }\n      \n      return true;\n    },\n    \n    removeEffect(effectId: string) {\n      const gameStore = useGameStore();\n      const index = this.activeEffects.findIndex(effect => effect.id === effectId);\n      \n      if (index !== -1) {\n        const effect = this.activeEffects[index];\n        gameStore.addToGameLog(`Effect ended: ${effect.name}`, true);\n        this.activeEffects.splice(index, 1);\n        return true;\n      }\n      \n      return false;\n    },\n    \n    processEffects() {\n      // Reduce duration of all effects\n      this.activeEffects.forEach((effect, index) => {\n        if (effect.duration > 0) {\n          effect.duration--;\n          \n          if (effect.duration === 0) {\n            const gameStore = useGameStore();\n            gameStore.addToGameLog(`Effect ended: ${effect.name}`, true);\n            this.activeEffects.splice(index, 1);\n          }\n        }\n      });\n    },\n    \n    // Use a companion's special ability\n    useCompanionAbility(companionId: string): boolean {\n      // Check if the companion exists and is in a loyal state\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      if (!status || status.state !== CompanionState.LOYAL) {\n        return false;\n      }\n      \n      // Get companion info from card store to perform ability\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const companion = cardStore.getCompanionById(companionId);\n      \n      if (!companion) {\n        return false;\n      }\n      \n      gameStore.addToGameLog(`You use ${companion.name}'s special ability: ${companion.ability.description}`, true, 'companion');\n      \n      // Apply ability effects based on companion type\n      // (In a real implementation, this would have specific logic for each companion)\n      \n      return true;\n    },\n    \n    // Get the loyalty status of a companion\n    getCompanionStatus(companionId: string): CompanionState {\n      if (!this.animalCompanions.includes(companionId)) {\n        return CompanionState.LEAVING;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      if (!status) {\n        return CompanionState.LOYAL; // Default to loyal if no status is found\n      }\n      \n      return status.state;\n    },\n    \n    // Use a crafted item's effect\n    useCraftedItem(itemId: string): boolean {\n      // Check if the player has the item\n      if (!this.craftedItems.includes(itemId)) {\n        return false;\n      }\n      \n      // Get item details from card store\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const item = cardStore.getCraftedItemById(itemId);\n      \n      if (!item) {\n        return false;\n      }\n      \n      gameStore.addToGameLog(`You use ${item.name}: ${item.description}`, true, 'crafting');\n      \n      // Apply item effects based on the type\n      // (In a real implementation, this would have specific logic for each item)\n      \n      // Track item usage - some items might be single-use\n      // For now, we'll keep items after use\n      \n      return true;\n    },\n    \n    // Use a companion to help with a challenge\n    useCompanionForChallenge(companionId: string): boolean {\n      // Check if the companion exists and is in a loyal state\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      if (!status || status.state !== CompanionState.LOYAL) {\n        return false;\n      }\n      \n      // Get companion info from card store\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const companion = cardStore.getCompanionById(companionId);\n      \n      if (!companion) {\n        return false;\n      }\n      \n      gameStore.addToGameLog(`${companion.name} helps you with the challenge.`, true, 'companion');\n      \n      // In a real implementation, this could reduce companion loyalty or have other effects\n      \n      return true;\n    },\n    \n    // Use a companion to keep watch during the night\n    useCompanionForNight(companionId: string): boolean {\n      // Check if the companion exists and is in a loyal state\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      if (!status || status.state !== CompanionState.LOYAL) {\n        return false;\n      }\n      \n      // Get companion info from card store\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const companion = cardStore.getCompanionById(companionId);\n      \n      if (!companion) {\n        return false;\n      }\n      \n      gameStore.addToGameLog(`${companion.name} keeps watch over you during the night.`, true, 'companion');\n      \n      // In a real implementation, this could reduce companion loyalty or have other effects\n      \n      return true;\n    },\n    \n    // Get a list of items that can be crafted with current resources\n    getCraftableItems(): string[] {\n      const cardStore = useCardStore();\n      const allCraftableItems = cardStore.getAllCraftedItems().map(item => item.id);\n      const craftableItems: string[] = [];\n      \n      for (const itemId of allCraftableItems) {\n        const item = cardStore.getCraftedItemById(itemId);\n        if (!item || !item.requiredResources) continue;\n        \n        // Check if we have all the required resources\n        let canCraft = true;\n        for (const resourceId of item.requiredResources) {\n          if (!this.resources.includes(resourceId)) {\n            canCraft = false;\n            break;\n          }\n        }\n        \n        if (canCraft) {\n          craftableItems.push(itemId);\n        }\n      }\n      \n      return craftableItems;\n    },\n\n    // Craft an item from resources\n    craftItem(itemId: string): boolean {\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const item = cardStore.getCraftedItemById(itemId);\n      \n      if (!item || !item.requiredResources) {\n        return false;\n      }\n      \n      // Check if we have all the resources needed\n      for (const resourceId of item.requiredResources) {\n        if (!this.resources.includes(resourceId)) {\n          return false;\n        }\n      }\n      \n      // Remove resources used in crafting\n      for (const resourceId of item.requiredResources) {\n        this.removeResource(resourceId);\n      }\n      \n      // Add the crafted item\n      this.addCraftedItem(itemId);\n      \n      gameStore.addToGameLog(`You crafted ${item.name}.`, true, 'crafting');\n      \n      return true;\n    },\n\n    // Rest to recover health\n    rest(): boolean {\n      const gameStore = useGameStore();\n      \n      // Heal 1 health point when resting\n      this.healHealth(1);\n      \n      gameStore.addToGameLog(`You rest and recover. Health is now ${this.health}/${this.maxHealth}.`, true, 'system');\n      \n      return true;\n    },\n    \n    // Use a companion to help with gathering resources\n    useCompanionForGathering(companionId: string): boolean {\n      // Check if the companion exists and is in a loyal state\n      if (!this.animalCompanions.includes(companionId)) {\n        return false;\n      }\n      \n      const status = this.companionLoyalty[companionId];\n      if (!status || status.state !== CompanionState.LOYAL) {\n        return false;\n      }\n      \n      // Get companion info from card store\n      const cardStore = useCardStore();\n      const gameStore = useGameStore();\n      const companion = cardStore.getCompanionById(companionId);\n      \n      if (!companion) {\n        return false;\n      }\n      \n      gameStore.addToGameLog(`${companion.name} helps you gather resources.`, true, 'companion');\n      \n      // In a real implementation, this could reduce companion loyalty or have other effects\n      \n      return true;\n    },\n  }\n});\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, normalizeClass as _normalizeClass, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"game-setup\" }\nconst _hoisted_2 = { class: \"game-container\" }\nconst _hoisted_3 = { class: \"character-selection\" }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = { class: \"character-stats\" }\nconst _hoisted_6 = { class: \"stat\" }\nconst _hoisted_7 = { class: \"stat\" }\nconst _hoisted_8 = { class: \"character-abilities\" }\nconst _hoisted_9 = [\"onClick\"]\n\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useGameStore } from '@/stores/gameStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport type { CharacterCard } from '@/models/types/cards';\n\n// Initialize stores and router\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'GameSetupView',\n  setup(__props) {\n\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\n\n// Initialize state\nconst characters = ref<CharacterCard[]>([]);\nconst selectedCharacter = ref<CharacterCard | null>(null);\n\n// Load characters when component is mounted\nconst loadCharacters = () => {\n  if (!cardStore.initialized) {\n    cardStore.initializeCards();\n  }\n  characters.value = cardStore.characters;\n};\n\n// Select a character\nconst selectCharacter = (character: CharacterCard) => {\n  selectedCharacter.value = character;\n};\n\n// Get the ability name for a character\nconst getAbilityName = (character: CharacterCard) => {\n  return character.specialAbility?.name || '';\n};\n\n// Get the ability description for a character\nconst getAbilityDescription = (character: CharacterCard) => {\n  return character.specialAbility?.description || '';\n};\n\n// Start the game with the selected character\nconst startGame = (character: CharacterCard) => {\n  try {\n    console.log('Starting game with character:', character.name);\n    \n    // Set the player's character\n    playerStore.selectCharacter(character.id);\n    \n    // Initialize game state\n    gameStore.startGame();\n    gameStore.setPhase(GamePhase.SEASONAL_ASSESSMENT);\n    \n    // Add initial game log entry\n    gameStore.addToGameLog(`You begin your journey as ${character.name}.`, true, 'system');\n    \n    // Set initial landscape if not already set\n    if (!gameStore.currentLandscapeId) {\n      const landscapes = cardStore.landscapes;\n      if (landscapes.length > 0) {\n        const firstLandscape = landscapes[0];\n        gameStore.setCurrentLandscape(firstLandscape.id);\n        \n        // Set a challenge from this landscape\n        if (firstLandscape.challenges && firstLandscape.challenges.length > 0) {\n          const firstChallenge = firstLandscape.challenges[0];\n          gameStore.setCurrentChallenge(firstChallenge.id);\n          console.log('Set initial challenge:', firstChallenge.name);\n        }\n      }\n    }\n    \n    // Navigate to the game board - use a slight delay to ensure all state changes are processed\n    console.log('Navigating to game board');\n    setTimeout(() => {\n      router.push('/game');\n    }, 50);\n  } catch (error) {\n    console.error('Error starting game:', error);\n    alert('There was an error starting your adventure. Please try again.');\n  }\n};\n\n// Load characters when component is mounted\nloadCharacters();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[2] || (_cache[2] = _createStaticVNode(\"<div class=\\\"game-header\\\" data-v-77d55e09><h1 class=\\\"game-title\\\" data-v-77d55e09>Game Setup</h1><p class=\\\"game-subtitle\\\" data-v-77d55e09>Choose your character and begin your journey through the mystical Celtic landscape.</p></div><div class=\\\"celtic-quote\\\" data-v-77d55e09> &quot;The journey through the Celtic Realm is one of discovery, challenge, and transformation.&quot; </div><h2 data-v-77d55e09>Select Your Character</h2><p class=\\\"character-intro mb-4\\\" data-v-77d55e09> Each character brings unique abilities and challenges to your journey. Choose wisely, as your character&#39;s strengths and weaknesses will shape your path through the Celtic Realm. </p>\", 4)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(characters.value, (character) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: character.id,\n            class: _normalizeClass([\"character-card\", { 'selected': selectedCharacter.value && selectedCharacter.value.id === character.id }]),\n            onClick: ($event: any) => (selectCharacter(character))\n          }, [\n            _createElementVNode(\"h3\", null, _toDisplayString(character.name), 1),\n            _createElementVNode(\"p\", null, _toDisplayString(character.description), 1),\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createElementVNode(\"div\", _hoisted_6, [\n                _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"stat-label\" }, \"Health:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(character.healthPoints), 1)\n              ]),\n              _createElementVNode(\"div\", _hoisted_7, [\n                _cache[1] || (_cache[1] = _createElementVNode(\"span\", { class: \"stat-label\" }, \"Capacity:\", -1)),\n                _createTextVNode(\" \" + _toDisplayString(character.resourceCapacity), 1)\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_8, [\n              _createElementVNode(\"strong\", null, _toDisplayString(getAbilityName(character)) + \":\", 1),\n              _createTextVNode(\" \" + _toDisplayString(getAbilityDescription(character)), 1)\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"select-btn\",\n              onClick: _withModifiers(($event: any) => (startGame(character)), [\"stop\"])\n            }, \"Start Adventure\", 8, _hoisted_9)\n          ], 10, _hoisted_4))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"game-setup\">\n    <div class=\"game-container\">\n      <div class=\"game-header\">\n        <h1 class=\"game-title\">Game Setup</h1>\n        <p class=\"game-subtitle\">Choose your character and begin your journey through the mystical Celtic landscape.</p>\n      </div>\n      \n      <div class=\"celtic-quote\">\n        \"The journey through the Celtic Realm is one of discovery, challenge, and transformation.\"\n      </div>\n      \n      <h2>Select Your Character</h2>\n      <p class=\"character-intro mb-4\">\n        Each character brings unique abilities and challenges to your journey. Choose wisely, as your character's strengths and weaknesses will shape your path through the Celtic Realm.\n      </p>\n      \n      <div class=\"character-selection\">\n        <div v-for=\"character in characters\" :key=\"character.id\" class=\"character-card\" \n             :class=\"{ 'selected': selectedCharacter && selectedCharacter.id === character.id }\"\n             @click=\"selectCharacter(character)\">\n          <h3>{{ character.name }}</h3>\n          <p>{{ character.description }}</p>\n          \n          <div class=\"character-stats\">\n            <div class=\"stat\"><span class=\"stat-label\">Health:</span> {{ character.healthPoints }}</div>\n            <div class=\"stat\"><span class=\"stat-label\">Capacity:</span> {{ character.resourceCapacity }}</div>\n          </div>\n          \n          <div class=\"character-abilities\">\n            <strong>{{ getAbilityName(character) }}:</strong> {{ getAbilityDescription(character) }}\n          </div>\n          \n          <button class=\"select-btn\" @click.stop=\"startGame(character)\">Start Adventure</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useGameStore } from '@/stores/gameStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport type { CharacterCard } from '@/models/types/cards';\n\n// Initialize stores and router\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\n\n// Initialize state\nconst characters = ref<CharacterCard[]>([]);\nconst selectedCharacter = ref<CharacterCard | null>(null);\n\n// Load characters when component is mounted\nconst loadCharacters = () => {\n  if (!cardStore.initialized) {\n    cardStore.initializeCards();\n  }\n  characters.value = cardStore.characters;\n};\n\n// Select a character\nconst selectCharacter = (character: CharacterCard) => {\n  selectedCharacter.value = character;\n};\n\n// Get the ability name for a character\nconst getAbilityName = (character: CharacterCard) => {\n  return character.specialAbility?.name || '';\n};\n\n// Get the ability description for a character\nconst getAbilityDescription = (character: CharacterCard) => {\n  return character.specialAbility?.description || '';\n};\n\n// Start the game with the selected character\nconst startGame = (character: CharacterCard) => {\n  try {\n    console.log('Starting game with character:', character.name);\n    \n    // Set the player's character\n    playerStore.selectCharacter(character.id);\n    \n    // Initialize game state\n    gameStore.startGame();\n    gameStore.setPhase(GamePhase.SEASONAL_ASSESSMENT);\n    \n    // Add initial game log entry\n    gameStore.addToGameLog(`You begin your journey as ${character.name}.`, true, 'system');\n    \n    // Set initial landscape if not already set\n    if (!gameStore.currentLandscapeId) {\n      const landscapes = cardStore.landscapes;\n      if (landscapes.length > 0) {\n        const firstLandscape = landscapes[0];\n        gameStore.setCurrentLandscape(firstLandscape.id);\n        \n        // Set a challenge from this landscape\n        if (firstLandscape.challenges && firstLandscape.challenges.length > 0) {\n          const firstChallenge = firstLandscape.challenges[0];\n          gameStore.setCurrentChallenge(firstChallenge.id);\n          console.log('Set initial challenge:', firstChallenge.name);\n        }\n      }\n    }\n    \n    // Navigate to the game board - use a slight delay to ensure all state changes are processed\n    console.log('Navigating to game board');\n    setTimeout(() => {\n      router.push('/game');\n    }, 50);\n  } catch (error) {\n    console.error('Error starting game:', error);\n    alert('There was an error starting your adventure. Please try again.');\n  }\n};\n\n// Load characters when component is mounted\nloadCharacters();\n</script>\n\n<style lang=\"scss\" scoped>\n.game-setup {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n  \n  .game-container {\n    max-width: 1200px;\n    width: 100%;\n  }\n  \n  .game-header {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n  \n  .game-title {\n    font-size: 2.5rem;\n    color: #5c3d2e;\n    margin-bottom: 0.25rem;\n  }\n  \n  .game-subtitle {\n    font-size: 1.2rem;\n    color: #6a5d4d;\n  }\n  \n  .celtic-quote {\n    font-family: 'Tangerine', cursive;\n    font-size: 1.8rem;\n    text-align: center;\n    color: #5c3d2e;\n    margin: 1rem 0;\n    font-style: italic;\n  }\n  \n  h2 {\n    font-size: 1.8rem;\n    color: #5c3d2e;\n    text-align: center;\n    margin-bottom: 0.5rem;\n  }\n  \n  .character-intro {\n    text-align: center;\n    max-width: 800px;\n    margin: 0 auto;\n    color: #6a5d4d;\n  }\n  \n  .character-selection {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 1rem;\n    margin-top: 1rem;\n  }\n  \n  .character-card {\n    background-color: rgba(255, 255, 255, 0.8);\n    border: 2px solid #d9c5a0;\n    border-radius: 10px;\n    padding: 1rem;\n    transition: all 0.3s ease;\n    cursor: pointer;\n    width: 250px; /* Standard playing card width ratio */\n    height: 350px; /* Standard playing card height ratio */\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    overflow: hidden;\n    \n    &:hover {\n      transform: translateY(-5px);\n      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n      border-color: #b39b6f;\n    }\n    \n    &.selected {\n      border-color: #5c3d2e;\n      background-color: rgba(92, 61, 46, 0.1);\n    }\n    \n    h3 {\n      font-size: 1.3rem;\n      color: #5c3d2e;\n      margin-bottom: 0.25rem;\n      text-align: center;\n    }\n    \n    p {\n      color: #6a5d4d;\n      margin-bottom: 0.5rem;\n      line-height: 1.3;\n      font-size: 0.9rem;\n      flex-grow: 1;\n      overflow-y: auto;\n    }\n    \n    .character-stats {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 0.5rem;\n      \n      .stat {\n        background-color: rgba(92, 61, 46, 0.1);\n        padding: 0.3rem;\n        border-radius: 5px;\n        font-size: 0.85rem;\n        \n        .stat-label {\n          font-weight: bold;\n          color: #5c3d2e;\n        }\n      }\n    }\n    \n    .character-abilities {\n      margin-bottom: 0.75rem;\n      font-size: 0.85rem;\n      color: #6a5d4d;\n      \n      strong {\n        color: #5c3d2e;\n      }\n    }\n    \n    .select-btn {\n      background-color: #5c3d2e;\n      color: white;\n      border: none;\n      padding: 0.5rem 1rem;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s;\n      width: 100%;\n      margin-top: auto;\n      \n      &:hover {\n        background-color: darken(#5c3d2e, 10%);\n      }\n    }\n  }\n}\n</style>\n","import script from \"./GameSetupView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameSetupView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameSetupView.vue?vue&type=style&index=0&id=77d55e09&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-77d55e09\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withModifiers as _withModifiers } from \"vue\"\n\nconst _hoisted_1 = { class: \"companion-management\" }\nconst _hoisted_2 = { class: \"companion-management__header\" }\nconst _hoisted_3 = { class: \"companion-management__content\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_5 = {\n  key: 1,\n  class: \"companion-cards\"\n}\nconst _hoisted_6 = { class: \"available-companions\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_8 = {\n  key: 1,\n  class: \"companion-cards\"\n}\nconst _hoisted_9 = [\"onClick\"]\nconst _hoisted_10 = { class: \"available-companion-card__header\" }\nconst _hoisted_11 = { class: \"available-companion-card__content\" }\nconst _hoisted_12 = { class: \"companion-ability mt-2\" }\nconst _hoisted_13 = { class: \"ability-description\" }\nconst _hoisted_14 = { class: \"companion-seasons mt-2\" }\nconst _hoisted_15 = { class: \"season-tags\" }\nconst _hoisted_16 = { class: \"available-companion-card__footer\" }\nconst _hoisted_17 = [\"onClick\", \"disabled\"]\nconst _hoisted_18 = {\n  key: 0,\n  class: \"feed-dialog-overlay\"\n}\nconst _hoisted_19 = { class: \"feed-dialog\" }\nconst _hoisted_20 = { class: \"feed-dialog__header\" }\nconst _hoisted_21 = { class: \"feed-dialog__content\" }\nconst _hoisted_22 = { class: \"resource-list\" }\nconst _hoisted_23 = [\"onClick\"]\nconst _hoisted_24 = { class: \"feed-dialog__footer\" }\nconst _hoisted_25 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_CompanionCard = _resolveComponent(\"CompanionCard\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[4] || (_cache[4] = _createElementVNode(\"h2\", { class: \"companion-management__title\" }, \"Animal Companions\", -1)),\n      _createElementVNode(\"button\", {\n        class: \"btn btn--icon\",\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.emitClose && _ctx.emitClose(...args)))\n      }, \"×\")\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      (_ctx.playerCompanions.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[5] || (_cache[5] = [\n            _createElementVNode(\"p\", null, \"You haven't bonded with any animal companions yet.\", -1),\n            _createElementVNode(\"p\", null, \"Find a suitable companion and use a resource to form a bond.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.playerCompanions, (companionId) => {\n              return (_openBlock(), _createBlock(_component_CompanionCard, {\n                key: companionId,\n                companionId: companionId,\n                abilityUsed: _ctx.usedCompanionAbilities.includes(companionId),\n                canFeed: _ctx.hasCompatibleResources(companionId),\n                onSelect: _ctx.selectCompanion,\n                onFeed: _ctx.openFeedDialog,\n                onUseAbility: _ctx.useCompanionAbility\n              }, null, 8, [\"companionId\", \"abilityUsed\", \"canFeed\", \"onSelect\", \"onFeed\", \"onUseAbility\"]))\n            }), 128))\n          ]))\n    ]),\n    _cache[9] || (_cache[9] = _createElementVNode(\"h3\", { class: \"mt-4\" }, \"Available Companions\", -1)),\n    _createElementVNode(\"div\", _hoisted_6, [\n      (_ctx.availableCompanions.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[6] || (_cache[6] = [\n            _createElementVNode(\"p\", null, \"No companions are available in this area.\", -1),\n            _createElementVNode(\"p\", null, \"Continue exploring to find potential companions.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.availableCompanions, (companion) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: companion.id,\n                class: \"available-companion-card\",\n                onClick: ($event: any) => (_ctx.selectAvailableCompanion(companion.id))\n              }, [\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _createElementVNode(\"h4\", null, _toDisplayString(companion.name), 1)\n                ]),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _createElementVNode(\"p\", null, _toDisplayString(companion.description), 1),\n                  _createElementVNode(\"div\", _hoisted_12, [\n                    _createElementVNode(\"h5\", null, _toDisplayString(companion.ability.name), 1),\n                    _createElementVNode(\"p\", _hoisted_13, _toDisplayString(companion.ability.description), 1)\n                  ]),\n                  _createElementVNode(\"div\", _hoisted_14, [\n                    _cache[7] || (_cache[7] = _createElementVNode(\"h5\", null, \"Seasonal Affinity\", -1)),\n                    _createElementVNode(\"div\", _hoisted_15, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(companion.affinitySeasons, (season) => {\n                        return (_openBlock(), _createElementBlock(\"span\", {\n                          key: season,\n                          class: _normalizeClass([\"season-tag\", season.toLowerCase()])\n                        }, _toDisplayString(_ctx.formatSeasonName(season)), 3))\n                      }), 128))\n                    ])\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_16, [\n                  _createElementVNode(\"button\", {\n                    class: \"btn btn--primary\",\n                    onClick: _withModifiers(($event: any) => (_ctx.openBondDialog(companion.id)), [\"stop\"]),\n                    disabled: !_ctx.hasResourcesForBonding(companion.id)\n                  }, \" Bond \", 8, _hoisted_17)\n                ])\n              ], 8, _hoisted_9))\n            }), 128))\n          ]))\n    ]),\n    (_ctx.showBondDialog)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n          _createElementVNode(\"div\", _hoisted_19, [\n            _createElementVNode(\"div\", _hoisted_20, [\n              _createElementVNode(\"h3\", null, \"Bond with \" + _toDisplayString(_ctx.selectedCompanionName), 1),\n              _createElementVNode(\"button\", {\n                class: \"close-btn\",\n                onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.closeBondDialog && _ctx.closeBondDialog(...args)))\n              }, \"×\")\n            ]),\n            _createElementVNode(\"div\", _hoisted_21, [\n              _cache[8] || (_cache[8] = _createElementVNode(\"p\", null, \"Select a resource to form a bond:\", -1)),\n              _createElementVNode(\"div\", _hoisted_22, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.compatibleResources, (resource) => {\n                  return (_openBlock(), _createElementBlock(\"div\", {\n                    key: resource.id,\n                    class: _normalizeClass([\"resource-item\", { 'selected': _ctx.selectedResource === resource.id }]),\n                    onClick: ($event: any) => (_ctx.selectedResource = resource.id)\n                  }, [\n                    _createElementVNode(\"span\", null, _toDisplayString(resource.name), 1)\n                  ], 10, _hoisted_23))\n                }), 128))\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_24, [\n              _createElementVNode(\"button\", {\n                class: \"btn btn--primary\",\n                onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.bondWithCompanion && _ctx.bondWithCompanion(...args))),\n                disabled: !_ctx.selectedResource\n              }, \" Bond \", 8, _hoisted_25),\n              _createElementVNode(\"button\", {\n                class: \"btn btn--secondary\",\n                onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.closeBondDialog && _ctx.closeBondDialog(...args)))\n              }, \" Cancel \")\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div class=\"companion-management\">\n    <div class=\"companion-management__header\">\n      <h2 class=\"companion-management__title\">Animal Companions</h2>\n      <button class=\"btn btn--icon\" @click=\"emitClose\">&times;</button>\n    </div>\n    \n    <div class=\"companion-management__content\">\n      <div v-if=\"playerCompanions.length === 0\" class=\"empty-state\">\n        <p>You haven't bonded with any animal companions yet.</p>\n        <p>Find a suitable companion and use a resource to form a bond.</p>\n      </div>\n      \n      <div v-else class=\"companion-cards\">\n        <CompanionCard\n          v-for=\"companionId in playerCompanions\"\n          :key=\"companionId\"\n          :companionId=\"companionId\"\n          :abilityUsed=\"usedCompanionAbilities.includes(companionId)\"\n          :canFeed=\"hasCompatibleResources(companionId)\"\n          @select=\"selectCompanion\"\n          @feed=\"openFeedDialog\"\n          @use-ability=\"useCompanionAbility\"\n        />\n      </div>\n    </div>\n    \n    <h3 class=\"mt-4\">Available Companions</h3>\n    <div class=\"available-companions\">\n      <div v-if=\"availableCompanions.length === 0\" class=\"empty-state\">\n        <p>No companions are available in this area.</p>\n        <p>Continue exploring to find potential companions.</p>\n      </div>\n      \n      <div v-else class=\"companion-cards\">\n        <div\n          v-for=\"companion in availableCompanions\"\n          :key=\"companion.id\"\n          class=\"available-companion-card\"\n          @click=\"selectAvailableCompanion(companion.id)\"\n        >\n          <div class=\"available-companion-card__header\">\n            <h4>{{ companion.name }}</h4>\n          </div>\n          <div class=\"available-companion-card__content\">\n            <p>{{ companion.description }}</p>\n            <div class=\"companion-ability mt-2\">\n              <h5>{{ companion.ability.name }}</h5>\n              <p class=\"ability-description\">{{ companion.ability.description }}</p>\n            </div>\n            <div class=\"companion-seasons mt-2\">\n              <h5>Seasonal Affinity</h5>\n              <div class=\"season-tags\">\n                <span\n                  v-for=\"season in companion.affinitySeasons\"\n                  :key=\"season\"\n                  class=\"season-tag\"\n                  :class=\"season.toLowerCase()\"\n                >\n                  {{ formatSeasonName(season) }}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"available-companion-card__footer\">\n            <button \n              class=\"btn btn--primary\"\n              @click.stop=\"openBondDialog(companion.id)\"\n              :disabled=\"!hasResourcesForBonding(companion.id)\"\n            >\n              Bond\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Bond Dialog -->\n    <div class=\"feed-dialog-overlay\" v-if=\"showBondDialog\">\n      <div class=\"feed-dialog\">\n        <div class=\"feed-dialog__header\">\n          <h3>Bond with {{ selectedCompanionName }}</h3>\n          <button class=\"close-btn\" @click=\"closeBondDialog\">&times;</button>\n        </div>\n        \n        <div class=\"feed-dialog__content\">\n          <p>Select a resource to form a bond:</p>\n          \n          <div class=\"resource-list\">\n            <div \n              v-for=\"resource in compatibleResources\" \n              :key=\"resource.id\"\n              class=\"resource-item\"\n              :class=\"{ 'selected': selectedResource === resource.id }\"\n              @click=\"selectedResource = resource.id\"\n            >\n              <span>{{ resource.name }}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"feed-dialog__footer\">\n          <button \n            class=\"btn btn--primary\" \n            @click=\"bondWithCompanion\"\n            :disabled=\"!selectedResource\"\n          >\n            Bond\n          </button>\n          <button class=\"btn btn--secondary\" @click=\"closeBondDialog\">\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue';\nimport { useCardStore, usePlayerStore, useGameStore } from '@/stores';\nimport { companionService } from '@/services/companionService';\nimport CompanionCard from './CompanionCard.vue';\nimport { Season } from '@/models/enums/seasons';\n\nexport default defineComponent({\n  name: 'CompanionManagement',\n  components: {\n    CompanionCard\n  },\n  emits: ['close'],\n  setup(props, { emit }) {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n    \n    // Player companions\n    const playerCompanions = computed(() => playerStore.animalCompanions);\n    \n    // Available companions for bonding\n    const availableCompanions = computed(() => {\n      const allCompanions = cardStore.animalCompanions;\n      return allCompanions.filter(companion => \n        !playerCompanions.value.includes(companion.id) &&\n        isCompanionAvailableInSeason(companion)\n      );\n    });\n    \n    // Check if companion is available in current season\n    const isCompanionAvailableInSeason = (companion: any) => {\n      const currentSeason = gameStore.currentSeason;\n      return companion.affinitySeasons && companion.affinitySeasons.includes(currentSeason);\n    };\n    \n    // Format season name for display\n    const formatSeasonName = (season: Season) => {\n      return season.replace('_', ' ').split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ');\n    };\n    \n    // Tracking used abilities\n    const usedCompanionAbilities = ref<string[]>([]);\n    \n    // Selection state\n    const selectedCompanion = ref('');\n    const selectedAvailableCompanion = ref('');\n    \n    // Bond dialog state\n    const showBondDialog = ref(false);\n    const selectedResource = ref('');\n    \n    // Get resources compatible with a companion\n    const getCompatibleResources = (companionId: string) => {\n      return playerStore.resources.filter(resourceId => \n        companionService.isResourceSuitableForBonding(resourceId, companionId)\n      );\n    };\n    \n    // Check if player has compatible resources for a companion\n    const hasCompatibleResources = (companionId: string) => {\n      return getCompatibleResources(companionId).length > 0;\n    };\n    \n    // Check if player has resources for bonding with a companion\n    const hasResourcesForBonding = (companionId: string) => {\n      return playerStore.resources.some(resourceId => \n        companionService.isResourceSuitableForBonding(resourceId, companionId)\n      );\n    };\n    \n    // Get companion name\n    const selectedCompanionName = computed(() => {\n      const companion = cardStore.getCompanionById(selectedAvailableCompanion.value);\n      return companion ? companion.name : '';\n    });\n    \n    // Get compatible resources for the selected companion\n    const compatibleResources = computed(() => {\n      if (!selectedAvailableCompanion.value) return [];\n      \n      return playerStore.resources\n        .filter(resourceId => \n          companionService.isResourceSuitableForBonding(resourceId, selectedAvailableCompanion.value)\n        )\n        .map(resourceId => cardStore.getResourceById(resourceId))\n        .filter(resource => resource !== undefined) as any[];\n    });\n    \n    // Select a companion\n    const selectCompanion = (companionId: string) => {\n      selectedCompanion.value = companionId;\n    };\n    \n    // Select an available companion\n    const selectAvailableCompanion = (companionId: string) => {\n      selectedAvailableCompanion.value = companionId;\n    };\n    \n    // Open bond dialog\n    const openBondDialog = (companionId: string) => {\n      selectedAvailableCompanion.value = companionId;\n      const resources = getCompatibleResources(companionId);\n      \n      if (resources.length > 0) {\n        selectedResource.value = resources[0];\n        showBondDialog.value = true;\n      } else {\n        gameStore.addToGameLog('No compatible resources for bonding with this companion.');\n      }\n    };\n    \n    // Close bond dialog\n    const closeBondDialog = () => {\n      showBondDialog.value = false;\n      selectedResource.value = '';\n    };\n    \n    // Bond with a companion\n    const bondWithCompanion = () => {\n      if (!selectedAvailableCompanion.value || !selectedResource.value) {\n        closeBondDialog();\n        return;\n      }\n      \n      const success = companionService.bondWithCompanion(\n        selectedAvailableCompanion.value,\n        selectedResource.value\n      );\n      \n      if (success) {\n        const companion = cardStore.getCompanionById(selectedAvailableCompanion.value);\n        gameStore.addToGameLog(\n          `You've formed a bond with ${companion?.name}!`,\n          true,\n          'companion'\n        );\n      } else {\n        gameStore.addToGameLog('Failed to bond with the companion.');\n      }\n      \n      closeBondDialog();\n    };\n    \n    // Use companion ability\n    const useCompanionAbility = (companionId: string) => {\n      if (usedCompanionAbilities.value.includes(companionId)) {\n        return;\n      }\n      \n      const success = playerStore.useCompanionAbility(companionId);\n      \n      if (success) {\n        usedCompanionAbilities.value.push(companionId);\n        \n        const companion = cardStore.getCompanionById(companionId);\n        gameStore.addToGameLog(\n          `You used ${companion?.name}'s ability: ${companion?.ability.name}`,\n          true,\n          'companion'\n        );\n      } else {\n        gameStore.addToGameLog('You cannot use this companion\\'s ability right now.');\n      }\n    };\n    \n    // Reset used abilities when turn changes\n    gameStore.$subscribe((_, state) => {\n      if (state.currentTurn > 0) {\n        usedCompanionAbilities.value = [];\n      }\n    });\n    \n    // Open feed dialog - passes to CompanionCard\n    const openFeedDialog = (companionId: string) => {\n      console.log(`Open feed dialog for companion ${companionId}`);\n      // Handled by CompanionCard component\n    };\n    \n    // Emit close event to parent\n    const emitClose = () => {\n      emit('close');\n    };\n    \n    return {\n      playerCompanions,\n      availableCompanions,\n      usedCompanionAbilities,\n      selectedCompanion,\n      showBondDialog,\n      selectedResource,\n      selectedCompanionName,\n      compatibleResources,\n      selectCompanion,\n      selectAvailableCompanion,\n      openBondDialog,\n      closeBondDialog,\n      bondWithCompanion,\n      useCompanionAbility,\n      hasCompatibleResources,\n      hasResourcesForBonding,\n      formatSeasonName,\n      openFeedDialog,\n      emitClose\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.companion-management {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: $spacing-md;\n  }\n  \n  &__title {\n    margin: 0;\n    color: $primary-color;\n  }\n  \n  &__content {\n    margin-bottom: $spacing-lg;\n  }\n}\n\n.empty-state {\n  font-style: italic;\n  color: rgba($dark-color, 0.6);\n  padding: $spacing-md;\n  background-color: rgba($light-color, 0.5);\n  border-radius: $border-radius-md;\n  text-align: center;\n}\n\n.companion-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: $spacing-md;\n  margin-top: $spacing-sm;\n}\n\n.available-companion-card {\n  background-color: $light-color;\n  border: 2px solid $border-color;\n  border-radius: $border-radius-md;\n  box-shadow: $shadow-sm;\n  padding: $spacing-sm;\n  cursor: pointer;\n  transition: all $transition-normal;\n  position: relative;\n  min-height: 180px;\n  \n  // Card appearance\n  background-image: linear-gradient(to bottom, rgba(255,255,255,0.8) 0%, rgba(240,240,240,0.2) 100%);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 3px;\n    left: 3px;\n    right: 3px;\n    bottom: 3px;\n    border: 1px solid rgba(255,255,255,0.6);\n    border-radius: calc($border-radius-md - 3px);\n    pointer-events: none;\n  }\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: $shadow-md;\n  }\n  \n  &__header {\n    margin-bottom: $spacing-sm;\n    \n    h4 {\n      font-weight: bold;\n      margin: 0;\n      color: $primary-color;\n    }\n  }\n  \n  &__content {\n    font-size: $font-size-sm;\n    margin-bottom: $spacing-md;\n    \n    p {\n      margin-bottom: $spacing-sm;\n    }\n    \n    .companion-ability {\n      margin-top: $spacing-sm;\n      \n      h5 {\n        margin: 0 0 $spacing-xs 0;\n        font-size: $font-size-sm;\n      }\n      \n      .ability-description {\n        font-size: $font-size-xs;\n        color: rgba($dark-color, 0.7);\n      }\n    }\n    \n    .companion-seasons {\n      margin-top: $spacing-sm;\n      \n      h5 {\n        margin: 0 0 $spacing-xs 0;\n        font-size: $font-size-sm;\n      }\n    }\n  }\n  \n  &__footer {\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n\n.season-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $spacing-xs;\n  margin-top: $spacing-xs;\n}\n\n.season-tag {\n  font-size: $font-size-xs;\n  padding: $spacing-xs $spacing-sm;\n  border-radius: $border-radius-md;\n  color: $light-color;\n  \n  &.spring {\n    background-color: #7cb342;\n  }\n  \n  &.summer {\n    background-color: #f9a825;\n  }\n  \n  &.fall, &.autumn {\n    background-color: #ef6c00;\n  }\n  \n  &.winter {\n    background-color: #42a5f5;\n  }\n}\n\n// Feed/Bond Dialog styling from CompanionCard to maintain consistency\n.feed-dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba($dark-color, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.feed-dialog {\n  background-color: white;\n  padding: $spacing-lg;\n  border-radius: $border-radius-md;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  \n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: $spacing-md;\n    \n    h3 {\n      margin-top: 0;\n    }\n    \n    .close-btn {\n      font-size: 1.5rem;\n      cursor: pointer;\n    }\n  }\n  \n  &__content {\n    margin-bottom: $spacing-md;\n  }\n  \n  &__footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: $spacing-sm;\n  }\n}\n\n.resource-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $spacing-sm;\n  margin-top: $spacing-sm;\n}\n\n.resource-item {\n  padding: $spacing-sm;\n  border: 1px solid $border-color;\n  border-radius: $border-radius-md;\n  cursor: pointer;\n  transition: all $transition-normal;\n  \n  &:hover {\n    border-color: $accent-color;\n    background-color: rgba($accent-color, 0.1);\n  }\n  \n  &.selected {\n    border-color: $accent-color;\n    background-color: rgba($accent-color, 0.2);\n  }\n}\n</style>\n","/**\n * Companion Service\n * Handles animal companion bonding and management\n */\nimport { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { CompanionState } from '@/models/types/player';\n\nclass CompanionService {\n  /**\n   * Bond with a new companion\n   * @param companionId The ID of the companion to bond with\n   * @param resourceId The ID of the resource used for bonding\n   * @returns True if bonding was successful\n   */\n  bondWithCompanion(companionId: string, resourceId: string): boolean {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    \n    // Check if player already has this companion\n    if (playerStore.animalCompanions.includes(companionId)) {\n      return false;\n    }\n    \n    // Get companion card\n    const companion = cardStore.getCompanionById(companionId);\n    if (!companion) {\n      return false;\n    }\n    \n    // Check if resource is appropriate for bonding\n    if (!this.isResourceSuitableForBonding(resourceId, companionId)) {\n      return false;\n    }\n    \n    // Use the resource\n    if (!playerStore.removeResource(resourceId)) {\n      return false;\n    }\n    \n    // Add companion to player\n    playerStore.addCompanion(companionId);\n    \n    // Apply bonding effects\n    this.applyBondingEffects(companionId);\n    \n    return true;\n  }\n  \n  /**\n   * Check if a resource is suitable for bonding with a companion\n   * @param resourceId The ID of the resource\n   * @param companionId The ID of the companion\n   * @returns True if the resource is suitable\n   */\n  isResourceSuitableForBonding(resourceId: string, companionId: string): boolean {\n    const cardStore = useCardStore();\n    \n    const resource = cardStore.getResourceById(resourceId);\n    const companion = cardStore.getCompanionById(companionId);\n    \n    if (!resource || !companion) {\n      return false;\n    }\n    \n    // Check if resource is in companion's preferred resources\n    return companion.preferredResources && companion.preferredResources.includes(resourceId);\n  }\n  \n  /**\n   * Feed a companion to maintain loyalty\n   * @param companionId The ID of the companion to feed\n   * @param resourceId The ID of the resource to use\n   * @returns True if feeding was successful\n   */\n  feedCompanion(companionId: string, resourceId: string): boolean {\n    const playerStore = usePlayerStore();\n    \n    // Check if player has this companion\n    if (!playerStore.animalCompanions.includes(companionId)) {\n      return false;\n    }\n    \n    // Check if resource is suitable\n    if (!this.isResourceSuitableForBonding(resourceId, companionId)) {\n      return false;\n    }\n    \n    // Use the resource\n    if (!playerStore.removeResource(resourceId)) {\n      return false;\n    }\n    \n    // Increase companion loyalty\n    this.increaseLoyalty(companionId);\n    \n    return true;\n  }\n  \n  /**\n   * Get the current loyalty level of a companion\n   * @param companionId The ID of the companion\n   * @returns The loyalty level (0-5) or -1 if not found\n   */\n  getLoyalty(companionId: string): number {\n    const playerStore = usePlayerStore();\n    \n    // Check if the companion exists\n    if (!playerStore.animalCompanions.includes(companionId)) {\n      return 0;\n    }\n\n    // Get loyalty from player state\n    const status = playerStore.companionLoyalty[companionId];\n    return status && typeof status === 'object' && 'loyalty' in status ? status.loyalty : 0;\n  }\n  \n  /**\n   * Increase companion loyalty\n   * @param companionId Companion identifier\n   * @returns New loyalty level\n   */\n  increaseLoyalty(companionId: string): number {\n    const playerStore = usePlayerStore();\n    \n    // Check if the companion exists\n    if (!playerStore.animalCompanions.includes(companionId)) {\n      return 0;\n    }\n\n    // Get current loyalty\n    const status = playerStore.companionLoyalty[companionId];\n    const currentLoyalty = status && typeof status === 'object' && 'loyalty' in status ? status.loyalty : 0;\n\n    // Max loyalty is 5\n    const newLoyalty = Math.min(currentLoyalty + 1, 5);\n\n    // Update loyalty\n    playerStore.setCompanionLoyalty(companionId, newLoyalty);\n\n    // Apply loyalty effects\n    this.applyLoyaltyEffects(companionId, newLoyalty);\n    \n    return newLoyalty;\n  }\n  \n  /**\n   * Decrease companion loyalty (e.g., when not fed)\n   * @param companionId Companion identifier\n   * @returns New loyalty level\n   */\n  decreaseLoyalty(companionId: string): number {\n    const playerStore = usePlayerStore();\n    \n    // Check if the companion exists\n    if (!playerStore.animalCompanions.includes(companionId)) {\n      return 0;\n    }\n\n    // Get current loyalty\n    const status = playerStore.companionLoyalty[companionId];\n    const currentLoyalty = status && typeof status === 'object' && 'loyalty' in status ? status.loyalty : 0;\n\n    // Min loyalty is 0\n    const newLoyalty = Math.max(currentLoyalty - 1, 0);\n\n    // Update loyalty\n    playerStore.setCompanionLoyalty(companionId, newLoyalty);\n\n    // If loyalty reaches 0, companion leaves\n    if (newLoyalty === 0) {\n      playerStore.removeCompanion(companionId);\n      return -1;\n    }\n    \n    // Apply loyalty effects\n    this.applyLoyaltyEffects(companionId, newLoyalty);\n    \n    return newLoyalty;\n  }\n  \n  /**\n   * Get companions that provide bonuses for a specific challenge type\n   * @param challengeType The type of challenge\n   * @returns Array of companion IDs that provide bonuses\n   */\n  getCompanionsForChallengeType(challengeType: string): string[] {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    \n    return playerStore.animalCompanions.filter(companionId => {\n      const companion = cardStore.getCompanionById(companionId);\n      return companion && \n             companion.challengeBonuses && \n             companion.challengeBonuses[challengeType] > 0;\n    });\n  }\n  \n  /**\n   * Select a random companion from the available ones for the current landscape\n   * @returns A random companion ID or empty string if none available\n   */\n  selectRandomCompanion(): string {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n\n    // Get current location ID and season\n    const locationId = gameStore.currentLandscapeId;\n    const currentSeason = gameStore.currentSeason;\n    \n    if (!locationId || !currentSeason) {\n      return '';\n    }\n    \n    // Define which companions are available at which landscapes\n    const landscapeCompanions: { [key: string]: string[] } = {\n      'sacred_oak_grove': ['wolf', 'deer', 'bear', 'boar'],\n      'faerie_knoll': ['fox', 'hare'],\n      'moonlit_loch': ['salmon', 'owl'],\n      'whispering_heath': ['raven'],\n      'wild_horse_plain': ['horse']\n    };\n    \n    // Check if current landscape has any companions available\n    if (!landscapeCompanions[locationId]) {\n      return ''; // No companions available at this landscape\n    }\n    \n    // Get the companion IDs available at this landscape\n    const availableCompanionTypes = landscapeCompanions[locationId];\n    \n    // Get companions that match the landscape and the player doesn't already have\n    const availableCompanions = cardStore.animalCompanions.filter(companion => {\n      // Skip companions the player already has\n      if (playerStore.animalCompanions.includes(companion.id)) {\n        return false;\n      }\n      \n      // Check if companion type is available at this landscape\n      // Assuming companion IDs contain the animal type (e.g., \"wolf_companion\")\n      const companionType = companion.id.split('_')[0].toLowerCase();\n      return availableCompanionTypes.includes(companionType);\n    });\n    \n    // Return a random companion ID or empty string if none available\n    return availableCompanions.length > 0 \n      ? availableCompanions[Math.floor(Math.random() * availableCompanions.length)].id \n      : '';\n  }\n\n  /**\n   * Check if a companion is in a wary state\n   * @param companionId The ID of the companion\n   * @returns True if the companion is wary\n   */\n  isCompanionWary(companionId: string): boolean {\n    const playerStore = usePlayerStore();\n    \n    // Check if the companion exists\n    if (!playerStore.animalCompanions.includes(companionId)) {\n      return false;\n    }\n\n    // Get companion state\n    const status = playerStore.companionLoyalty[companionId];\n    return status && \n           typeof status === 'object' && \n           'state' in status && \n           status.state === CompanionState.WARY;\n  }\n  \n  /**\n   * Apply effects when bonding with a companion\n   * @param companionId The ID of the companion\n   */\n  private applyBondingEffects(companionId: string): void {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    \n    const companion = cardStore.getCompanionById(companionId);\n    if (!companion || !companion.bondingEffect) {\n      return;\n    }\n    \n    // Apply bonding effect\n    companion.bondingEffect(playerStore);\n  }\n  \n  /**\n   * Apply effects based on companion loyalty level\n   * @param companionId The ID of the companion\n   * @param loyaltyLevel The loyalty level\n   */\n  private applyLoyaltyEffects(companionId: string, loyaltyLevel: number): void {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    \n    const companion = cardStore.getCompanionById(companionId);\n    if (!companion || !companion.loyaltyEffects) {\n      return;\n    }\n    \n    // Apply loyalty effect for this level\n    const effect = companion.loyaltyEffects[loyaltyLevel];\n    if (effect) {\n      effect(playerStore);\n    }\n  }\n}\n\nexport const companionService = new CompanionService();\n","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"companion-card__content\" }\nconst _hoisted_2 = { class: \"companion-loyalty mt-3\" }\nconst _hoisted_3 = { class: \"loyalty-meter\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"companion-ability mt-3\"\n}\nconst _hoisted_5 = { class: \"ability-effect\" }\nconst _hoisted_6 = {\n  key: 1,\n  class: \"companion-seasons mt-3\"\n}\nconst _hoisted_7 = { class: \"season-tags\" }\nconst _hoisted_8 = { class: \"companion-card__actions\" }\nconst _hoisted_9 = [\"disabled\"]\nconst _hoisted_10 = {\n  key: 0,\n  class: \"feed-dialog-overlay\"\n}\nconst _hoisted_11 = { class: \"feed-dialog\" }\nconst _hoisted_12 = { class: \"feed-dialog__header\" }\nconst _hoisted_13 = { class: \"feed-dialog__content\" }\nconst _hoisted_14 = { class: \"resource-list\" }\nconst _hoisted_15 = [\"onClick\"]\nconst _hoisted_16 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_17 = { class: \"feed-dialog__footer\" }\nconst _hoisted_18 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_GameCard = _resolveComponent(\"GameCard\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_GameCard, {\n      title: _ctx.companion?.name || 'Unknown Companion',\n      subtitle: 'Animal Companion',\n      cardType: _ctx.CardType.ANIMAL_COMPANION,\n      class: _normalizeClass([\"companion-card\", { 'wary': _ctx.isCompanionWary }]),\n      onClick: _ctx.selectCompanion,\n      style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n    }, {\n      footer: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_8, [\n          (_ctx.canFeed)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                class: \"btn btn--primary\",\n                onClick: _cache[0] || (_cache[0] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.openFeedDialog && _ctx.openFeedDialog(...args)), [\"stop\"]))\n              }, \" Feed Companion \"))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"button\", {\n            class: \"btn btn--secondary\",\n            onClick: _cache[1] || (_cache[1] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.useAbility && _ctx.useAbility(...args)), [\"stop\"])),\n            disabled: _ctx.abilityUsed || _ctx.isCompanionWary\n          }, _toDisplayString(_ctx.isCompanionWary ? 'Wary' : (_ctx.abilityUsed ? 'Ability Used' : 'Use Ability')), 9, _hoisted_9)\n        ])\n      ]),\n      default: _withCtx(() => [\n        _cache[6] || (_cache[6] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"CompanionCard\", -1)),\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createElementVNode(\"p\", null, _toDisplayString(_ctx.companion?.description || 'No description available'), 1),\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"h5\", null, \"Loyalty Level: \" + _toDisplayString(_ctx.loyalty), 1),\n            _createElementVNode(\"div\", _hoisted_3, [\n              _createElementVNode(\"div\", {\n                class: \"loyalty-bar\",\n                style: _normalizeStyle(_ctx.loyaltyBarStyle)\n              }, null, 4)\n            ])\n          ]),\n          (_ctx.companion?.ability)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                _createElementVNode(\"h5\", null, _toDisplayString(_ctx.companion.ability.name), 1),\n                _createElementVNode(\"p\", null, _toDisplayString(_ctx.companion.ability.description), 1),\n                _createElementVNode(\"p\", _hoisted_5, _toDisplayString(_ctx.companion.ability.effect), 1)\n              ]))\n            : _createCommentVNode(\"\", true),\n          (_ctx.companion?.affinitySeasons)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                _cache[5] || (_cache[5] = _createElementVNode(\"h5\", null, \"Seasonal Affinity\", -1)),\n                _createElementVNode(\"div\", _hoisted_7, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.companion.affinitySeasons, (season) => {\n                    return (_openBlock(), _createElementBlock(\"span\", {\n                      key: season,\n                      class: _normalizeClass([\"season-tag\", season.toLowerCase()])\n                    }, _toDisplayString(_ctx.formatSeasonName(season)), 3))\n                  }), 128))\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _: 1\n    }, 8, [\"title\", \"cardType\", \"class\", \"onClick\"]),\n    (_ctx.showFeedDialog)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n          _createElementVNode(\"div\", _hoisted_11, [\n            _createElementVNode(\"div\", _hoisted_12, [\n              _createElementVNode(\"h3\", null, \"Feed \" + _toDisplayString(_ctx.companion?.name), 1),\n              _createElementVNode(\"button\", {\n                class: \"close-btn\",\n                onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.closeFeedDialog && _ctx.closeFeedDialog(...args)))\n              }, \"×\")\n            ]),\n            _createElementVNode(\"div\", _hoisted_13, [\n              _cache[7] || (_cache[7] = _createElementVNode(\"p\", null, \"Select a resource to feed your companion:\", -1)),\n              _createElementVNode(\"div\", _hoisted_14, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.compatibleResources, (resource) => {\n                  return (_openBlock(), _createElementBlock(\"div\", {\n                    key: resource.id,\n                    class: _normalizeClass([\"resource-item\", { 'selected': _ctx.selectedResource === resource.id }]),\n                    onClick: ($event: any) => (_ctx.selectedResource = resource.id)\n                  }, [\n                    _createElementVNode(\"span\", null, _toDisplayString(resource.name), 1)\n                  ], 10, _hoisted_15))\n                }), 128)),\n                (_ctx.compatibleResources.length === 0)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, \" No compatible resources available. \"))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_17, [\n              _createElementVNode(\"button\", {\n                class: \"btn btn--primary\",\n                onClick: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.feedCompanion && _ctx.feedCompanion(...args))),\n                disabled: !_ctx.selectedResource || _ctx.compatibleResources.length === 0\n              }, \" Feed \", 8, _hoisted_18),\n              _createElementVNode(\"button\", {\n                class: \"btn btn--secondary\",\n                onClick: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.closeFeedDialog && _ctx.closeFeedDialog(...args)))\n              }, \" Cancel \")\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","<template>\n  <GameCard \n    :title=\"companion?.name || 'Unknown Companion'\" \n    :subtitle=\"'Animal Companion'\" \n    :cardType=\"CardType.ANIMAL_COMPANION\"\n    class=\"companion-card\"\n    :class=\"{ 'wary': isCompanionWary }\"\n    @click=\"selectCompanion\"\n    style=\"border: 2px solid lightblue; position: relative;\"\n  >\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">CompanionCard</div>\n    <div class=\"companion-card__content\">\n      <p>{{ companion?.description || 'No description available' }}</p>\n      \n      <div class=\"companion-loyalty mt-3\">\n        <h5>Loyalty Level: {{ loyalty }}</h5>\n        <div class=\"loyalty-meter\">\n          <div class=\"loyalty-bar\" :style=\"loyaltyBarStyle\"></div>\n        </div>\n      </div>\n      \n      <div class=\"companion-ability mt-3\" v-if=\"companion?.ability\">\n        <h5>{{ companion.ability.name }}</h5>\n        <p>{{ companion.ability.description }}</p>\n        <p class=\"ability-effect\">{{ companion.ability.effect }}</p>\n      </div>\n      \n      <div class=\"companion-seasons mt-3\" v-if=\"companion?.affinitySeasons\">\n        <h5>Seasonal Affinity</h5>\n        <div class=\"season-tags\">\n          <span \n            v-for=\"season in companion.affinitySeasons\" \n            :key=\"season\"\n            class=\"season-tag\"\n            :class=\"season.toLowerCase()\"\n          >\n            {{ formatSeasonName(season) }}\n          </span>\n        </div>\n      </div>\n    </div>\n    \n    <template #footer>\n      <div class=\"companion-card__actions\">\n        <button \n          v-if=\"canFeed\"\n          class=\"btn btn--primary\"\n          @click.stop=\"openFeedDialog\"\n        >\n          Feed Companion\n        </button>\n        <button \n          class=\"btn btn--secondary\"\n          @click.stop=\"useAbility\"\n          :disabled=\"abilityUsed || isCompanionWary\"\n        >\n          {{ isCompanionWary ? 'Wary' : (abilityUsed ? 'Ability Used' : 'Use Ability') }}\n        </button>\n      </div>\n    </template>\n  </GameCard>\n\n  <!-- Feed Dialog -->\n  <div class=\"feed-dialog-overlay\" v-if=\"showFeedDialog\">\n    <div class=\"feed-dialog\">\n      <div class=\"feed-dialog__header\">\n        <h3>Feed {{ companion?.name }}</h3>\n        <button class=\"close-btn\" @click=\"closeFeedDialog\">&times;</button>\n      </div>\n      \n      <div class=\"feed-dialog__content\">\n        <p>Select a resource to feed your companion:</p>\n        \n        <div class=\"resource-list\">\n          <div \n            v-for=\"resource in compatibleResources\" \n            :key=\"resource.id\"\n            class=\"resource-item\"\n            :class=\"{ 'selected': selectedResource === resource.id }\"\n            @click=\"selectedResource = resource.id\"\n          >\n            <span>{{ resource.name }}</span>\n          </div>\n          <div v-if=\"compatibleResources.length === 0\" class=\"empty-state\">\n            No compatible resources available.\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"feed-dialog__footer\">\n        <button \n          class=\"btn btn--primary\" \n          @click=\"feedCompanion\"\n          :disabled=\"!selectedResource || compatibleResources.length === 0\"\n        >\n          Feed\n        </button>\n        <button class=\"btn btn--secondary\" @click=\"closeFeedDialog\">\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, PropType } from 'vue';\nimport { CardType } from '@/models/enums/cardTypes';\nimport { Season } from '@/models/enums/seasons';\nimport GameCard from '@/components/core/GameCard.vue';\nimport { useCardStore, usePlayerStore, useGameStore } from '@/stores';\nimport { companionService } from '@/services/companionService';\nimport { AnimalCompanionCard, ResourceCard } from '@/models/types/cards';\n\nexport default defineComponent({\n  name: 'CompanionCard',\n  components: {\n    GameCard\n  },\n  props: {\n    companionId: {\n      type: String,\n      required: true\n    },\n    selected: {\n      type: Boolean,\n      default: false\n    },\n    abilityUsed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['select', 'use-ability', 'feed'],\n  setup(props, { emit }) {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n    \n    const showFeedDialog = ref(false);\n    const selectedResource = ref('');\n    \n    // Get companion data\n    const companion = computed(() => {\n      return cardStore.getCompanionById(props.companionId);\n    });\n    \n    // Get companion loyalty\n    const loyalty = computed(() => {\n      return companionService.getLoyalty(props.companionId);\n    });\n    \n    // Loyalty bar style\n    const loyaltyBarStyle = computed(() => {\n      const percentage = (loyalty.value / 5) * 100;\n      return {\n        width: `${percentage}%`,\n        backgroundColor: getLoyaltyColor(loyalty.value)\n      };\n    });\n    \n    // Compatible resources for feeding\n    const compatibleResources = computed(() => {\n      // Get all player resources\n      const playerResourceIds = playerStore.resources;\n      \n      // Filter resources that are suitable for the companion\n      return playerResourceIds\n        .map(id => cardStore.getResourceById(id))\n        .filter(resource => resource && companionService.isResourceSuitableForBonding(resource.id, props.companionId)) as ResourceCard[];\n    });\n    \n    // Check if player has resources to feed companion\n    const canFeed = computed(() => {\n      return compatibleResources.value.length > 0;\n    });\n    \n    // Check if companion is wary\n    const isCompanionWary = computed(() => {\n      return companionService.isCompanionWary(props.companionId);\n    });\n    \n    // Format season name for display\n    const formatSeasonName = (season: Season) => {\n      return season.replace('_', ' ').split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ');\n    };\n    \n    // Get color based on loyalty level\n    const getLoyaltyColor = (loyalty: number) => {\n      if (loyalty <= 1) return '#FF5252'; // Danger - Red\n      if (loyalty <= 3) return '#FFC107'; // Warning - Yellow\n      return '#4CAF50'; // Success - Green\n    };\n    \n    // Select this companion\n    const selectCompanion = () => {\n      emit('select', props.companionId);\n    };\n    \n    // Open feed dialog\n    const openFeedDialog = () => {\n      showFeedDialog.value = true;\n      selectedResource.value = compatibleResources.value.length > 0 ? \n        compatibleResources.value[0].id : '';\n    };\n    \n    // Close feed dialog\n    const closeFeedDialog = () => {\n      showFeedDialog.value = false;\n      selectedResource.value = '';\n    };\n    \n    // Feed companion with selected resource\n    const feedCompanion = () => {\n      if (!selectedResource.value) return;\n      \n      const success = companionService.feedCompanion(\n        props.companionId,\n        selectedResource.value\n      );\n      \n      if (success) {\n        const resource = cardStore.getResourceById(selectedResource.value);\n        gameStore.addToGameLog(\n          `You fed your ${companion.value?.name} with ${resource?.name}.`, \n          true, \n          'companion'\n        );\n        emit('feed', props.companionId);\n      } else {\n        gameStore.addToGameLog('Failed to feed your companion.');\n      }\n      \n      closeFeedDialog();\n    };\n    \n    // Use companion ability\n    const useAbility = () => {\n      if (props.abilityUsed || isCompanionWary.value) return;\n      emit('use-ability', props.companionId);\n    };\n    \n    return {\n      companion,\n      loyalty,\n      loyaltyBarStyle,\n      compatibleResources,\n      canFeed,\n      showFeedDialog,\n      selectedResource,\n      selectCompanion,\n      openFeedDialog,\n      closeFeedDialog,\n      feedCompanion,\n      useAbility,\n      formatSeasonName,\n      CardType,\n      isCompanionWary\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.companion-card {\n  transition: transform 0.2s, box-shadow 0.2s;\n  cursor: pointer;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  }\n  \n  &__content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n  }\n  \n  &__actions {\n    display: flex;\n    justify-content: space-between;\n    \n    button {\n      flex: 1;\n      margin: 0 $spacing-xs;\n      \n      &:first-child {\n        margin-left: 0;\n      }\n      \n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n  \n  &.wary {\n    background-color: rgba($warning-color, 0.1);\n    border: 1px solid $warning-color;\n  }\n}\n\n.companion-loyalty {\n  margin-bottom: $spacing-md;\n  \n  h5 {\n    margin-bottom: $spacing-sm;\n  }\n}\n\n.loyalty-meter {\n  height: 10px;\n  background-color: #eee;\n  border-radius: 5px;\n  overflow: hidden;\n}\n\n.loyalty-bar {\n  height: 100%;\n  transition: width 0.3s, background-color 0.3s;\n}\n\n.companion-ability {\n  margin-bottom: $spacing-md;\n  \n  h5 {\n    margin-bottom: $spacing-xs;\n  }\n  \n  .ability-effect {\n    font-style: italic;\n    color: $primary-color;\n    margin-top: $spacing-xs;\n  }\n}\n\n.season-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $spacing-xs;\n  \n  .season-tag {\n    display: inline-block;\n    padding: 2px 8px;\n    border-radius: 12px;\n    font-size: 0.8rem;\n    color: white;\n    \n    &.samhain {\n      background-color: $samhain-color;\n    }\n    \n    &.winters_depth {\n      background-color: $winter-color;\n    }\n    \n    &.imbolc {\n      background-color: $imbolc-color;\n    }\n    \n    &.beltane {\n      background-color: $beltane-color;\n    }\n    \n    &.lughnasadh {\n      background-color: $lughnasadh-color;\n    }\n  }\n}\n\n// Feed Dialog\n.feed-dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.feed-dialog {\n  background-color: white;\n  padding: $spacing-lg;\n  border-radius: $border-radius-md;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  \n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: $spacing-md;\n    \n    h3 {\n      margin-top: 0;\n    }\n    \n    .close-btn {\n      font-size: 1.5rem;\n      cursor: pointer;\n    }\n  }\n  \n  &__content {\n    margin-bottom: $spacing-md;\n  }\n  \n  &__footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: $spacing-sm;\n  }\n}\n\n.resource-list {\n  margin: $spacing-md 0;\n  max-height: 200px;\n  overflow-y: auto;\n  border: 1px solid #eee;\n  border-radius: $border-radius-sm;\n}\n\n.resource-item {\n  padding: $spacing-sm;\n  border-bottom: 1px solid #eee;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  &:hover {\n    background-color: rgba($primary-color, 0.1);\n  }\n  \n  &.selected {\n    background-color: rgba($primary-color, 0.2);\n  }\n}\n\n.empty-state {\n  padding: $spacing-md;\n  text-align: center;\n  color: rgba($dark-color, 0.6);\n  font-style: italic;\n}\n</style>\n","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { style: {\"position\":\"absolute\",\"top\":\"5px\",\"left\":\"5px\",\"font-size\":\"0.8rem\",\"font-weight\":\"bold\",\"text-transform\":\"uppercase\"} }\nconst _hoisted_2 = { style: {\"font-size\":\"1rem\",\"margin-top\":\"2px\"} }\nconst _hoisted_3 = { style: {\"position\":\"absolute\",\"bottom\":\"5px\",\"right\":\"5px\",\"font-size\":\"0.8rem\",\"font-weight\":\"bold\",\"text-transform\":\"uppercase\",\"transform\":\"rotate(180deg)\"} }\nconst _hoisted_4 = { style: {\"font-size\":\"1rem\",\"margin-top\":\"2px\"} }\nconst _hoisted_5 = {\n  class: \"game-card__header\",\n  style: {\"border-top-left-radius\":\"12px\",\"border-top-right-radius\":\"12px\",\"padding\":\"10px\",\"text-align\":\"center\"}\n}\nconst _hoisted_6 = { style: {\"margin\":\"0\",\"font-size\":\"1.2rem\",\"text-transform\":\"capitalize\"} }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"game-card__subtitle\",\n  style: {\"font-size\":\"0.8rem\",\"opacity\":\"0.8\"}\n}\nconst _hoisted_8 = { style: {\"position\":\"absolute\",\"top\":\"50%\",\"left\":\"50%\",\"transform\":\"translate(-50%, -50%)\",\"font-size\":\"3rem\",\"opacity\":\"0.1\",\"pointer-events\":\"none\"} }\nconst _hoisted_9 = {\n  class: \"game-card__body\",\n  style: {\"flex-grow\":\"1\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\",\"text-align\":\"center\",\"padding\":\"15px\",\"z-index\":\"1\"}\n}\nconst _hoisted_10 = {\n  key: 0,\n  class: \"game-card__footer\",\n  style: {\"border-bottom-left-radius\":\"12px\",\"border-bottom-right-radius\":\"12px\",\"padding\":\"10px\",\"text-align\":\"center\"}\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"game-card\", _ctx.cardTypeClass]),\n    onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('click', $event))),\n    style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\",\"border-radius\":\"12px\",\"aspect-ratio\":\"2.5/3.5\",\"display\":\"flex\",\"flex-direction\":\"column\",\"box-shadow\":\"3px 3px 8px rgba(0,0,0,0.2)\",\"background-color\":\"#f8f8f8\",\"overflow\":\"hidden\"}\n  }, [\n    _cache[1] || (_cache[1] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"GameCard\", -1)),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createTextVNode(_toDisplayString(_ctx.title.charAt(0)) + \" \", 1),\n      _createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.getSuitSymbol()), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createTextVNode(_toDisplayString(_ctx.title.charAt(0)) + \" \", 1),\n      _createElementVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.getSuitSymbol()), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _createElementVNode(\"h3\", _hoisted_6, _toDisplayString(_ctx.title), 1),\n      (_ctx.subtitle)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString(_ctx.subtitle), 1))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _cache[2] || (_cache[2] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"40px\",\"left\":\"0\",\"right\":\"0\",\"bottom\":\"40px\",\"border\":\"1px dashed rgba(0,0,0,0.1)\",\"border-radius\":\"8px\",\"margin\":\"8px\",\"pointer-events\":\"none\"} }, null, -1)),\n    _createElementVNode(\"div\", _hoisted_8, _toDisplayString(_ctx.getSuitSymbol()), 1),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n    ]),\n    (_ctx.$slots.footer)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n          _renderSlot(_ctx.$slots, \"footer\", {}, undefined, true)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 2))\n}","<template>\n  <div \n    class=\"game-card\" \n    :class=\"cardTypeClass\"\n    @click=\"$emit('click', $event)\"\n    style=\"border: 2px solid lightblue; position: relative; border-radius: 12px; aspect-ratio: 2.5/3.5; display: flex; flex-direction: column; box-shadow: 3px 3px 8px rgba(0,0,0,0.2); background-color: #f8f8f8; overflow: hidden;\"\n  >\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">GameCard</div>\n    \n    <!-- Card corner decoration (top left) -->\n    <div style=\"position: absolute; top: 5px; left: 5px; font-size: 0.8rem; font-weight: bold; text-transform: uppercase;\">\n      {{ title.charAt(0) }}\n      <div style=\"font-size: 1rem; margin-top: 2px;\">{{ getSuitSymbol() }}</div>\n    </div>\n    \n    <!-- Card corner decoration (bottom right) -->\n    <div style=\"position: absolute; bottom: 5px; right: 5px; font-size: 0.8rem; font-weight: bold; text-transform: uppercase; transform: rotate(180deg);\">\n      {{ title.charAt(0) }}\n      <div style=\"font-size: 1rem; margin-top: 2px;\">{{ getSuitSymbol() }}</div>\n    </div>\n    \n    <div class=\"game-card__header\" style=\"border-top-left-radius: 12px; border-top-right-radius: 12px; padding: 10px; text-align: center;\">\n      <h3 style=\"margin: 0; font-size: 1.2rem; text-transform: capitalize;\">{{ title }}</h3>\n      <div v-if=\"subtitle\" class=\"game-card__subtitle\" style=\"font-size: 0.8rem; opacity: 0.8;\">{{ subtitle }}</div>\n    </div>\n    \n    <!-- Card border decoration -->\n    <div style=\"position: absolute; top: 40px; left: 0; right: 0; bottom: 40px; border: 1px dashed rgba(0,0,0,0.1); border-radius: 8px; margin: 8px; pointer-events: none;\"></div>\n    \n    <!-- Center suit symbol -->\n    <div style=\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 3rem; opacity: 0.1; pointer-events: none;\">\n      {{ getSuitSymbol() }}\n    </div>\n    \n    <div class=\"game-card__body\" style=\"flex-grow: 1; display: flex; align-items: center; justify-content: center; text-align: center; padding: 15px; z-index: 1;\">\n      <slot></slot>\n    </div>\n    \n    <div v-if=\"$slots.footer\" class=\"game-card__footer\" style=\"border-bottom-left-radius: 12px; border-bottom-right-radius: 12px; padding: 10px; text-align: center;\">\n      <slot name=\"footer\"></slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue';\nimport { CardType } from '@/models/enums/cardTypes';\nimport { Season } from '@/models/enums/seasons';\n\nexport default defineComponent({\n  name: 'GameCard',\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    subtitle: {\n      type: String,\n      default: ''\n    },\n    cardType: {\n      type: String as PropType<CardType>,\n      required: true,\n      validator: (value: string) => {\n        return Object.values(CardType).includes(value as CardType);\n      }\n    },\n    season: {\n      type: String as PropType<Season | null>,\n      default: null,\n      validator: (value: string) => {\n        return value === null || Object.values(Season).includes(value as Season);\n      }\n    }\n  },\n  computed: {\n    cardTypeClass() {\n      if (!this.cardType) return {};\n      \n      const cardTypeValue = this.cardType.toLowerCase();\n      const classes = {\n        [`game-card--${cardTypeValue.replace(/_/g, '-')}`]: true\n      };\n      \n      if (this.cardType === CardType.SEASON && this.season) {\n        classes[this.season.toLowerCase()] = true;\n      }\n      \n      return classes;\n    }\n  },\n  methods: {\n    getSuitSymbol() {\n      // Return different suit symbols based on card type\n      switch(this.cardType) {\n        case CardType.LANDSCAPE:\n          return '♣'; // clubs\n        case CardType.ANIMAL_COMPANION:\n          return '♥'; // hearts\n        case CardType.RESOURCE:\n          return '♦'; // diamonds\n        case CardType.CRAFTED_ITEM:\n          return '♠'; // spades\n        case CardType.SEASON:\n          return '★'; // star\n        case CardType.CHARACTER:\n          return '✦'; // diamond star\n        default:\n          return '•'; // bullet\n      }\n    }\n  },\n  emits: ['click']\n});\n</script>\n\n<style lang=\"scss\" scoped>\n// Styles are in the main.scss file\n</style>\n","import { render } from \"./GameCard.vue?vue&type=template&id=0ed5819c&scoped=true&ts=true\"\nimport script from \"./GameCard.vue?vue&type=script&lang=ts\"\nexport * from \"./GameCard.vue?vue&type=script&lang=ts\"\n\nimport \"./GameCard.vue?vue&type=style&index=0&id=0ed5819c&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0ed5819c\"]])\n\nexport default __exports__","import { render } from \"./CompanionCard.vue?vue&type=template&id=46699847&scoped=true&ts=true\"\nimport script from \"./CompanionCard.vue?vue&type=script&lang=ts\"\nexport * from \"./CompanionCard.vue?vue&type=script&lang=ts\"\n\nimport \"./CompanionCard.vue?vue&type=style&index=0&id=46699847&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-46699847\"]])\n\nexport default __exports__","import { render } from \"./CompanionManagement.vue?vue&type=template&id=0df5c584&scoped=true&ts=true\"\nimport script from \"./CompanionManagement.vue?vue&type=script&lang=ts\"\nexport * from \"./CompanionManagement.vue?vue&type=script&lang=ts\"\n\nimport \"./CompanionManagement.vue?vue&type=style&index=0&id=0df5c584&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0df5c584\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withModifiers as _withModifiers } from \"vue\"\n\nconst _hoisted_1 = { class: \"animal-companion-selection\" }\nconst _hoisted_2 = { class: \"animal-companion-selection__content\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_4 = {\n  key: 1,\n  class: \"companion-grid\"\n}\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = { class: \"companion-card__header\" }\nconst _hoisted_7 = { class: \"season-affinity\" }\nconst _hoisted_8 = { class: \"companion-card__body\" }\nconst _hoisted_9 = { class: \"companion-ability\" }\nconst _hoisted_10 = { class: \"companion-card__footer\" }\nconst _hoisted_11 = [\"onClick\", \"disabled\"]\nconst _hoisted_12 = {\n  key: 0,\n  class: \"bond-dialog-overlay\"\n}\nconst _hoisted_13 = { class: \"bond-dialog\" }\nconst _hoisted_14 = { class: \"bond-dialog__header\" }\nconst _hoisted_15 = { class: \"bond-dialog__content\" }\nconst _hoisted_16 = { class: \"resource-list\" }\nconst _hoisted_17 = [\"onClick\"]\nconst _hoisted_18 = { class: \"resource-description\" }\nconst _hoisted_19 = { class: \"bond-dialog__footer\" }\nconst _hoisted_20 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[5] || (_cache[5] = _createElementVNode(\"h2\", { class: \"animal-companion-selection__title\" }, \"Available Companions\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_ctx.availableCompanions.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[3] || (_cache[3] = [\n            _createElementVNode(\"p\", null, \"No animal companions are available in this area.\", -1),\n            _createElementVNode(\"p\", null, \"Continue your journey to find potential companions.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.availableCompanions, (companion) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: companion.id,\n                class: \"companion-card\",\n                onClick: ($event: any) => (_ctx.selectCompanion(companion.id))\n              }, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _createElementVNode(\"h3\", null, _toDisplayString(companion.name), 1),\n                  _createElementVNode(\"div\", _hoisted_7, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(companion.affinitySeasons, (season) => {\n                      return (_openBlock(), _createElementBlock(\"span\", {\n                        key: season,\n                        class: _normalizeClass([\"season-tag\", season.toLowerCase()])\n                      }, _toDisplayString(_ctx.formatSeasonName(season)), 3))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _createElementVNode(\"p\", null, _toDisplayString(companion.description), 1),\n                  _createElementVNode(\"div\", _hoisted_9, [\n                    _createElementVNode(\"h4\", null, _toDisplayString(companion.ability.name), 1),\n                    _createElementVNode(\"p\", null, _toDisplayString(companion.ability.description), 1)\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _createElementVNode(\"button\", {\n                    class: \"btn btn--primary\",\n                    onClick: _withModifiers(($event: any) => (_ctx.bondWithCompanion(companion.id)), [\"stop\"]),\n                    disabled: !_ctx.hasCompatibleResources(companion.id)\n                  }, \" Bond \", 8, _hoisted_11)\n                ])\n              ], 8, _hoisted_5))\n            }), 128))\n          ]))\n    ]),\n    (_ctx.showBondDialog)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n          _createElementVNode(\"div\", _hoisted_13, [\n            _createElementVNode(\"div\", _hoisted_14, [\n              _createElementVNode(\"h3\", null, \"Bond with \" + _toDisplayString(_ctx.selectedCompanionName), 1),\n              _createElementVNode(\"button\", {\n                class: \"close-btn\",\n                onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.closeBondDialog && _ctx.closeBondDialog(...args)))\n              }, \"×\")\n            ]),\n            _createElementVNode(\"div\", _hoisted_15, [\n              _cache[4] || (_cache[4] = _createElementVNode(\"p\", null, \"Select a resource to form a bond:\", -1)),\n              _createElementVNode(\"div\", _hoisted_16, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.compatibleResources, (resource) => {\n                  return (_openBlock(), _createElementBlock(\"div\", {\n                    key: resource.id,\n                    class: _normalizeClass([\"resource-item\", { 'selected': _ctx.selectedResource === resource.id }]),\n                    onClick: ($event: any) => (_ctx.selectedResource = resource.id)\n                  }, [\n                    _createElementVNode(\"span\", null, _toDisplayString(resource.name), 1),\n                    _createElementVNode(\"p\", _hoisted_18, _toDisplayString(resource.description), 1)\n                  ], 10, _hoisted_17))\n                }), 128))\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_19, [\n              _createElementVNode(\"button\", {\n                class: \"btn btn--primary\",\n                onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.confirmBond && _ctx.confirmBond(...args))),\n                disabled: !_ctx.selectedResource\n              }, \" Bond \", 8, _hoisted_20),\n              _createElementVNode(\"button\", {\n                class: \"btn btn--secondary\",\n                onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.closeBondDialog && _ctx.closeBondDialog(...args)))\n              }, \" Cancel \")\n            ])\n          ])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","<template>\n  <div class=\"animal-companion-selection\">\n    <h2 class=\"animal-companion-selection__title\">Available Companions</h2>\n    \n    <div class=\"animal-companion-selection__content\">\n      <div v-if=\"availableCompanions.length === 0\" class=\"empty-state\">\n        <p>No animal companions are available in this area.</p>\n        <p>Continue your journey to find potential companions.</p>\n      </div>\n      \n      <div v-else class=\"companion-grid\">\n        <div \n          v-for=\"companion in availableCompanions\" \n          :key=\"companion.id\"\n          class=\"companion-card\"\n          @click=\"selectCompanion(companion.id)\"\n        >\n          <div class=\"companion-card__header\">\n            <h3>{{ companion.name }}</h3>\n            <div class=\"season-affinity\">\n              <span \n                v-for=\"season in companion.affinitySeasons\" \n                :key=\"season\"\n                class=\"season-tag\"\n                :class=\"season.toLowerCase()\"\n              >\n                {{ formatSeasonName(season) }}\n              </span>\n            </div>\n          </div>\n          \n          <div class=\"companion-card__body\">\n            <p>{{ companion.description }}</p>\n            <div class=\"companion-ability\">\n              <h4>{{ companion.ability.name }}</h4>\n              <p>{{ companion.ability.description }}</p>\n            </div>\n          </div>\n          \n          <div class=\"companion-card__footer\">\n            <button \n              class=\"btn btn--primary\"\n              @click.stop=\"bondWithCompanion(companion.id)\"\n              :disabled=\"!hasCompatibleResources(companion.id)\"\n            >\n              Bond\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Bond Dialog -->\n    <div class=\"bond-dialog-overlay\" v-if=\"showBondDialog\">\n      <div class=\"bond-dialog\">\n        <div class=\"bond-dialog__header\">\n          <h3>Bond with {{ selectedCompanionName }}</h3>\n          <button class=\"close-btn\" @click=\"closeBondDialog\">&times;</button>\n        </div>\n        \n        <div class=\"bond-dialog__content\">\n          <p>Select a resource to form a bond:</p>\n          \n          <div class=\"resource-list\">\n            <div \n              v-for=\"resource in compatibleResources\" \n              :key=\"resource.id\"\n              class=\"resource-item\"\n              :class=\"{ 'selected': selectedResource === resource.id }\"\n              @click=\"selectedResource = resource.id\"\n            >\n              <span>{{ resource.name }}</span>\n              <p class=\"resource-description\">{{ resource.description }}</p>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"bond-dialog__footer\">\n          <button \n            class=\"btn btn--primary\" \n            @click=\"confirmBond\"\n            :disabled=\"!selectedResource\"\n          >\n            Bond\n          </button>\n          <button class=\"btn btn--secondary\" @click=\"closeBondDialog\">\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted } from 'vue';\nimport { useCardStore, usePlayerStore, useGameStore } from '@/stores';\nimport { companionService } from '@/services/companionService';\nimport { Season } from '@/models/enums/seasons';\n\nexport default defineComponent({\n  name: 'AnimalCompanionSelection',\n  emits: ['select-companion'],\n  setup(props, { emit }) {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n    \n    // Format season name for display\n    const formatSeasonName = (season: Season): string => {\n      return season.replace('_', ' ').split(' ')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ');\n    };\n    \n    // Get available companions for current location\n    const availableCompanions = computed(() => {\n      // Get current location ID and season\n      const locationId = gameStore.currentLandscapeId;\n      \n      if (!locationId) {\n        return [];\n      }\n      \n      // Define which companions are available at which landscapes (based on game rules)\n      const landscapeCompanions: { [key: string]: string[] } = {\n        'sacred_oak_grove': ['wolf', 'deer', 'bear', 'boar'],\n        'faerie_knoll': ['fox', 'hare'],\n        'moonlit_loch': ['salmon', 'owl'],\n        'whispering_heath': ['raven'],\n        'wild_horse_plain': ['horse']\n      };\n      \n      // Check if current landscape has any companions available\n      if (!landscapeCompanions[locationId]) {\n        return []; // No companions available at this landscape\n      }\n      \n      // Get the companion IDs available at this landscape\n      const availableCompanionTypes = landscapeCompanions[locationId];\n      \n      // Get companions that match the location and the player doesn't already have\n      return cardStore.animalCompanions.filter(companion => {\n        // Skip companions the player already has\n        if (playerStore.animalCompanions.includes(companion.id)) {\n          return false;\n        }\n        \n        // Check if companion type is available at this landscape\n        // Assuming companion IDs contain the animal type (e.g., \"wolf_companion\")\n        const companionType = companion.id.split('_')[0].toLowerCase();\n        return availableCompanionTypes.includes(companionType);\n      });\n    });\n    \n    // Bond dialog state\n    const showBondDialog = ref(false);\n    const selectedCompanion = ref('');\n    const selectedResource = ref('');\n    \n    // Select a random companion on component mount\n    onMounted(() => {\n      const randomCompanionId = companionService.selectRandomCompanion();\n      if (randomCompanionId) {\n        selectedCompanion.value = randomCompanionId;\n        // Auto-open bond dialog if we have compatible resources\n        if (hasCompatibleResources(randomCompanionId)) {\n          bondWithCompanion(randomCompanionId);\n        }\n      }\n    });\n    \n    // Get companion name for display\n    const selectedCompanionName = computed(() => {\n      const companion = cardStore.getCompanionById(selectedCompanion.value);\n      return companion ? companion.name : '';\n    });\n    \n    // Get compatible resources for the selected companion\n    const compatibleResources = computed(() => {\n      if (!selectedCompanion.value) return [];\n      \n      return playerStore.resources\n        .filter(resourceId => \n          companionService.isResourceSuitableForBonding(resourceId, selectedCompanion.value)\n        )\n        .map(resourceId => cardStore.getResourceById(resourceId))\n        .filter(resource => resource !== undefined) as any[];\n    });\n    \n    // Check if player has compatible resources for a companion\n    const hasCompatibleResources = (companionId: string): boolean => {\n      return playerStore.resources.some(resourceId => \n        companionService.isResourceSuitableForBonding(resourceId, companionId)\n      );\n    };\n    \n    // Select a companion for detail view\n    const selectCompanion = (companionId: string) => {\n      emit('select-companion', companionId);\n    };\n    \n    // Open bond dialog\n    const bondWithCompanion = (companionId: string) => {\n      selectedCompanion.value = companionId;\n      const resources = playerStore.resources.filter(resourceId => \n        companionService.isResourceSuitableForBonding(resourceId, companionId)\n      );\n      \n      if (resources.length > 0) {\n        selectedResource.value = resources[0];\n        showBondDialog.value = true;\n      } else {\n        gameStore.addToGameLog('No compatible resources available for bonding with this companion.');\n      }\n    };\n    \n    // Close bond dialog\n    const closeBondDialog = () => {\n      showBondDialog.value = false;\n      selectedResource.value = '';\n    };\n    \n    // Confirm bonding with companion\n    const confirmBond = () => {\n      if (!selectedCompanion.value || !selectedResource.value) {\n        closeBondDialog();\n        return;\n      }\n      \n      const success = companionService.bondWithCompanion(\n        selectedCompanion.value,\n        selectedResource.value\n      );\n      \n      if (success) {\n        const companion = cardStore.getCompanionById(selectedCompanion.value);\n        gameStore.addToGameLog(\n          `You've bonded with ${companion?.name}!`,\n          true,\n          'companion'\n        );\n        \n        // After bonding, select this companion\n        selectCompanion(selectedCompanion.value);\n      } else {\n        gameStore.addToGameLog('Failed to bond with the companion.');\n      }\n      \n      closeBondDialog();\n    };\n    \n    return {\n      formatSeasonName,\n      availableCompanions,\n      showBondDialog,\n      selectedCompanion,\n      selectedResource,\n      selectedCompanionName,\n      compatibleResources,\n      hasCompatibleResources,\n      selectCompanion,\n      bondWithCompanion,\n      closeBondDialog,\n      confirmBond\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.animal-companion-selection {\n  &__title {\n    margin-bottom: $spacing-md;\n    color: $primary-color;\n  }\n  \n  &__content {\n    margin-bottom: $spacing-lg;\n  }\n}\n\n.empty-state {\n  font-style: italic;\n  color: rgba($dark-color, 0.6);\n  padding: $spacing-md;\n  background-color: rgba($light-color, 0.5);\n  border-radius: $border-radius-md;\n  text-align: center;\n}\n\n.companion-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: $spacing-md;\n}\n\n.companion-card {\n  background-color: $light-color;\n  border: 2px solid $border-color;\n  border-radius: $border-radius-md;\n  box-shadow: $shadow-sm;\n  padding: $spacing-md;\n  transition: all $transition-normal;\n  position: relative;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  \n  // Card appearance\n  background-image: linear-gradient(to bottom, rgba(255,255,255,0.8) 0%, rgba(240,240,240,0.2) 100%);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 3px;\n    left: 3px;\n    right: 3px;\n    bottom: 3px;\n    border: 1px solid rgba(255,255,255,0.6);\n    border-radius: calc($border-radius-md - 3px);\n    pointer-events: none;\n  }\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: $shadow-md;\n  }\n  \n  &__header {\n    margin-bottom: $spacing-md;\n    \n    h3 {\n      margin: 0 0 $spacing-sm 0;\n      color: $primary-color;\n    }\n  }\n  \n  &__body {\n    flex: 1;\n    \n    p {\n      margin-bottom: $spacing-md;\n    }\n    \n    .companion-ability {\n      margin-top: $spacing-md;\n      padding-top: $spacing-md;\n      border-top: 1px solid rgba($dark-color, 0.1);\n      \n      h4 {\n        margin: 0 0 $spacing-xs 0;\n        font-size: $font-size-md;\n      }\n      \n      p {\n        font-size: $font-size-sm;\n        color: rgba($dark-color, 0.7);\n        margin-bottom: 0;\n      }\n    }\n  }\n  \n  &__footer {\n    margin-top: $spacing-md;\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n\n.season-affinity {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $spacing-xs;\n  margin-top: $spacing-xs;\n}\n\n.season-tag {\n  font-size: $font-size-xs;\n  padding: $spacing-xs $spacing-sm;\n  border-radius: $border-radius-md;\n  color: $light-color;\n  \n  &.spring {\n    background-color: #7cb342;\n  }\n  \n  &.summer {\n    background-color: #f9a825;\n  }\n  \n  &.fall, &.autumn {\n    background-color: #ef6c00;\n  }\n  \n  &.winter {\n    background-color: #42a5f5;\n  }\n}\n\n.bond-dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba($dark-color, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.bond-dialog {\n  background-color: white;\n  padding: $spacing-lg;\n  border-radius: $border-radius-md;\n  width: 90%;\n  max-width: 500px;\n  max-height: 90vh;\n  overflow-y: auto;\n  \n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: $spacing-md;\n    \n    h3 {\n      margin-top: 0;\n    }\n    \n    .close-btn {\n      font-size: 1.5rem;\n      cursor: pointer;\n    }\n  }\n  \n  &__content {\n    margin-bottom: $spacing-md;\n  }\n  \n  &__footer {\n    display: flex;\n    justify-content: flex-end;\n    gap: $spacing-sm;\n  }\n}\n\n.resource-list {\n  display: flex;\n  flex-direction: column;\n  gap: $spacing-sm;\n  margin-top: $spacing-sm;\n}\n\n.resource-item {\n  padding: $spacing-sm;\n  border: 1px solid $border-color;\n  border-radius: $border-radius-md;\n  cursor: pointer;\n  transition: all $transition-normal;\n  \n  span {\n    display: block;\n    font-weight: bold;\n    margin-bottom: $spacing-xs;\n  }\n  \n  .resource-description {\n    font-size: $font-size-xs;\n    color: rgba($dark-color, 0.7);\n    margin: 0;\n  }\n  \n  &:hover {\n    border-color: $accent-color;\n    background-color: rgba($accent-color, 0.1);\n  }\n  \n  &.selected {\n    border-color: $accent-color;\n    background-color: rgba($accent-color, 0.2);\n  }\n}\n</style>\n","import { render } from \"./AnimalCompanionSelection.vue?vue&type=template&id=26ff0409&scoped=true&ts=true\"\nimport script from \"./AnimalCompanionSelection.vue?vue&type=script&lang=ts\"\nexport * from \"./AnimalCompanionSelection.vue?vue&type=script&lang=ts\"\n\nimport \"./AnimalCompanionSelection.vue?vue&type=style&index=0&id=26ff0409&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-26ff0409\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"player-dashboard\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = { class: \"player-info\" }\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { class: \"player-stats\" }\nconst _hoisted_5 = { class: \"stat\" }\nconst _hoisted_6 = { class: \"stat-value\" }\nconst _hoisted_7 = { class: \"stat\" }\nconst _hoisted_8 = { class: \"stat-value\" }\nconst _hoisted_9 = { class: \"resources-section\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_11 = {\n  key: 1,\n  class: \"resource-list\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[3] || (_cache[3] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"PlayerDashboard\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_ctx.character)\n        ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_3, _toDisplayString(_ctx.character.name), 1))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_4, [\n        _createElementVNode(\"div\", _hoisted_5, [\n          _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"stat-label\" }, \"Health:\", -1)),\n          _createElementVNode(\"span\", _hoisted_6, _toDisplayString(_ctx.playerStore.health) + \"/\" + _toDisplayString(_ctx.playerStore.maxHealth), 1)\n        ]),\n        _createElementVNode(\"div\", _hoisted_7, [\n          _cache[1] || (_cache[1] = _createElementVNode(\"span\", { class: \"stat-label\" }, \"Experience:\", -1)),\n          _createElementVNode(\"span\", _hoisted_8, _toDisplayString(_ctx.playerStore.experience), 1)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"Resources\", -1)),\n      (_ctx.playerStore.resources.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"No resources collected yet\"))\n        : (_openBlock(), _createElementBlock(\"ul\", _hoisted_11, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.playerStore.resources, (resourceId) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: resourceId,\n                class: \"resource-list__item\"\n              }, _toDisplayString(_ctx.getResourceName(resourceId)), 1))\n            }), 128))\n          ]))\n    ])\n  ]))\n}","<template>\n  <div class=\"player-dashboard\" style=\"border: 2px solid lightblue; position: relative;\">\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">PlayerDashboard</div>\n    <div class=\"player-info\">\n      <h2 v-if=\"character\">{{ character.name }}</h2>\n      <div class=\"player-stats\">\n        <div class=\"stat\">\n          <span class=\"stat-label\">Health:</span> \n          <span class=\"stat-value\">{{ playerStore.health }}/{{ playerStore.maxHealth }}</span>\n        </div>\n        <div class=\"stat\">\n          <span class=\"stat-label\">Experience:</span> \n          <span class=\"stat-value\">{{ playerStore.experience }}</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"resources-section\">\n      <h3>Resources</h3>\n      <div v-if=\"playerStore.resources.length === 0\" class=\"empty-state\">No resources collected yet</div>\n      <ul v-else class=\"resource-list\">\n        <li v-for=\"resourceId in playerStore.resources\" :key=\"resourceId\" class=\"resource-list__item\">\n          {{ getResourceName(resourceId) }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\n\nexport default defineComponent({\n  name: 'PlayerDashboard',\n  \n  setup() {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    \n    const character = computed(() => {\n      if (!playerStore.characterId) return null;\n      return cardStore.getCharacterById(playerStore.characterId);\n    });\n    \n    const getResourceName = (resourceId: string) => {\n      const resource = cardStore.getResourceById(resourceId);\n      return resource ? resource.name : 'Unknown Resource';\n    };\n    \n    return {\n      playerStore,\n      character,\n      getResourceName\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.empty-state {\n  font-style: italic;\n  color: rgba($dark-color, 0.6);\n  margin-bottom: $spacing-md;\n}\n\n.wary-status {\n  font-size: $font-size-sm;\n  color: $warning-color;\n  font-style: italic;\n}\n\n.uses-remaining {\n  font-size: $font-size-sm;\n  color: $accent-color;\n}\n\n.resource-list__item,\n.companion-list__item,\n.crafted-items-list__item {\n  margin-bottom: $spacing-sm;\n  padding: $spacing-xs;\n  border-radius: $border-radius-md;\n  background-color: rgba($light-color, 0.6);\n}\n\n.player-dashboard {\n  width: 100%;\n  padding: $spacing-md;\n  background-color: rgba($light-color, 0.8);\n  border-radius: $border-radius-md;\n  box-shadow: 0 2px 4px rgba($dark-color, 0.2);\n  \n  .player-info {\n    margin-bottom: $spacing-md;\n    \n    h2 {\n      margin-top: 0;\n      margin-bottom: $spacing-sm;\n      color: $primary-color;\n    }\n  }\n  \n  .player-stats {\n    display: flex;\n    flex-wrap: wrap;\n    gap: $spacing-sm;\n    \n    .stat {\n      padding: $spacing-xs $spacing-sm;\n      background-color: rgba($dark-color, 0.1);\n      border-radius: $border-radius-md;\n      \n      .stat-label {\n        font-weight: bold;\n        margin-right: $spacing-xs;\n      }\n    }\n  }\n  \n  .resources-section,\n  .companions-section,\n  .crafted-items-section {\n    margin-top: $spacing-lg;\n    \n    h3 {\n      margin-top: 0;\n      margin-bottom: $spacing-sm;\n      border-bottom: 1px solid $border-color;\n      padding-bottom: $spacing-xs;\n    }\n  }\n  \n  .resource-list,\n  .companion-list,\n  .crafted-items-list {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n}\n\n.feed-dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba($dark-color, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.feed-dialog {\n  background-color: $light-color;\n  padding: $spacing-md;\n  border-radius: $border-radius-md;\n  box-shadow: $shadow-md;\n  width: 400px;\n}\n\n.feed-dialog__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: $spacing-sm;\n}\n\n.feed-dialog__body {\n  margin-bottom: $spacing-md;\n}\n\n.feed-dialog__footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.close-btn {\n  font-size: $font-size-lg;\n  cursor: pointer;\n  margin-left: $spacing-sm;\n}\n\n.resource-options {\n  display: flex;\n  flex-wrap: wrap;\n  gap: $spacing-sm;\n}\n\n.resource-option {\n  padding: $spacing-sm;\n  border: 1px solid $border-color;\n  border-radius: $border-radius-md;\n  cursor: pointer;\n  \n  &.selected {\n    background-color: $accent-color;\n    color: $light-color;\n  }\n}\n\n.companion-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: $spacing-md;\n}\n\n.companion-card {\n  background-color: $light-color;\n  border: 2px solid $border-color;\n  border-radius: $border-radius-md;\n  box-shadow: $shadow-md;\n  padding: $spacing-sm;\n  cursor: pointer;\n  transition: all $transition-normal;\n  position: relative;\n  min-height: 180px;\n  \n  // Card appearance\n  background-image: linear-gradient(to bottom, rgba(255,255,255,0.8) 0%, rgba(240,240,240,0.2) 100%);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 3px;\n    left: 3px;\n    right: 3px;\n    bottom: 3px;\n    border: 1px solid rgba(255,255,255,0.6);\n    border-radius: calc($border-radius-md - 3px);\n    pointer-events: none;\n  }\n  \n  &.selected {\n    transform: translateY(-5px);\n    border-color: $accent-color;\n    box-shadow: $shadow-md;\n  }\n  \n  &.wary {\n    border-color: $warning-color;\n    \n    &::after {\n      content: \"Wary\";\n      position: absolute;\n      top: $spacing-sm;\n      right: $spacing-sm;\n      background-color: $warning-color;\n      color: $light-color;\n      padding: $spacing-xs $spacing-sm;\n      border-radius: $border-radius-md;\n      font-size: $font-size-xs;\n      font-weight: bold;\n      transform: rotate(10deg);\n    }\n  }\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: $shadow-md;\n  }\n  \n  &__header {\n    margin-bottom: $spacing-sm;\n    \n    .companion-name {\n      font-weight: bold;\n      font-size: $font-size-md;\n      margin-bottom: $spacing-xs;\n    }\n    \n    .companion-loyalty {\n      display: flex;\n      align-items: center;\n      margin-top: $spacing-xs;\n      \n      .loyalty-label {\n        margin-right: $spacing-xs;\n        font-size: $font-size-sm;\n      }\n      \n      .loyalty-meter {\n        flex-grow: 1;\n        height: 8px;\n        background-color: rgba($dark-color, 0.1);\n        border-radius: $border-radius-md;\n        overflow: hidden;\n        \n        .loyalty-bar {\n          height: 100%;\n          background-color: $primary-color;\n          transition: width $transition-normal;\n        }\n      }\n    }\n  }\n  \n  &__body {\n    font-size: $font-size-sm;\n    margin-bottom: $spacing-sm;\n    \n    .companion-ability {\n      margin-top: $spacing-sm;\n      padding-top: $spacing-sm;\n      border-top: 1px solid rgba($dark-color, 0.1);\n      \n      h5 {\n        margin: 0 0 $spacing-xs 0;\n        font-size: $font-size-sm;\n      }\n      \n      .ability-description {\n        font-size: $font-size-xs;\n        color: rgba($dark-color, 0.7);\n      }\n    }\n  }\n  \n  &__footer {\n    display: flex;\n    justify-content: space-between;\n    margin-top: $spacing-sm;\n    \n    button {\n      flex: 1;\n      margin: 0 $spacing-xs;\n      \n      &:first-child {\n        margin-left: 0;\n      }\n      \n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n}\n</style>\n","import { render } from \"./PlayerDashboard.vue?vue&type=template&id=79cdc1e7&scoped=true&ts=true\"\nimport script from \"./PlayerDashboard.vue?vue&type=script&lang=ts\"\nexport * from \"./PlayerDashboard.vue?vue&type=script&lang=ts\"\n\nimport \"./PlayerDashboard.vue?vue&type=style&index=0&id=79cdc1e7&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-79cdc1e7\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"crafting-station\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = {\n  key: 0,\n  class: \"crafting-station__inactive\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"crafting-station__active\"\n}\nconst _hoisted_4 = { class: \"crafting-station__recipes\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"empty-state\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"recipe-list\"\n}\nconst _hoisted_7 = [\"onClick\"]\nconst _hoisted_8 = { class: \"recipe-complexity\" }\nconst _hoisted_9 = { class: \"recipe-resources\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"crafting-station__details\"\n}\nconst _hoisted_11 = { class: \"item-ability mt-3\" }\nconst _hoisted_12 = { class: \"ability-description\" }\nconst _hoisted_13 = {\n  key: 0,\n  class: \"item-drawback mt-3\"\n}\nconst _hoisted_14 = { class: \"drawback-description\" }\nconst _hoisted_15 = { class: \"item-resources mt-3\" }\nconst _hoisted_16 = { class: \"resource-requirements\" }\nconst _hoisted_17 = { class: \"resource-status\" }\nconst _hoisted_18 = { class: \"crafting-actions mt-4\" }\nconst _hoisted_19 = [\"disabled\"]\nconst _hoisted_20 = {\n  key: 1,\n  class: \"crafting-station__placeholder\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[8] || (_cache[8] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"CraftingStation\", -1)),\n    _cache[9] || (_cache[9] = _createElementVNode(\"h3\", { class: \"crafting-station__title\" }, \"Crafting Station\", -1)),\n    (_ctx.currentPhase !== _ctx.GamePhase.CRAFTING)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[2] || (_cache[2] = [\n          _createElementVNode(\"p\", null, \"Crafting is not available during the current phase.\", -1)\n        ])))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"div\", _hoisted_4, [\n            _cache[4] || (_cache[4] = _createElementVNode(\"h4\", null, \"Available Recipes\", -1)),\n            (_ctx.availableRecipes.length === 0)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" You don't have enough resources to craft any items. \"))\n              : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.availableRecipes, (item) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: item.id,\n                      class: _normalizeClass([\"recipe-list__item\", { 'selected': _ctx.selectedRecipe?.id === item.id }]),\n                      onClick: ($event: any) => (_ctx.selectRecipe(item))\n                    }, [\n                      _createElementVNode(\"h5\", null, _toDisplayString(item.name), 1),\n                      _createElementVNode(\"div\", _hoisted_8, \"Complexity: \" + _toDisplayString(item.complexity), 1),\n                      _createElementVNode(\"div\", _hoisted_9, [\n                        _cache[3] || (_cache[3] = _createElementVNode(\"div\", null, \"Required Resources:\", -1)),\n                        _createElementVNode(\"ul\", null, [\n                          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.requiredResources, (resourceId) => {\n                            return (_openBlock(), _createElementBlock(\"li\", { key: resourceId }, [\n                              _createTextVNode(_toDisplayString(_ctx.getResourceName(resourceId)) + \" \", 1),\n                              _createElementVNode(\"span\", {\n                                class: _normalizeClass([\"resource-status\", { 'available': _ctx.hasResource(resourceId), 'missing': !_ctx.hasResource(resourceId) }])\n                              }, _toDisplayString(_ctx.hasResource(resourceId) ? '✓' : '✗'), 3)\n                            ]))\n                          }), 128))\n                        ])\n                      ])\n                    ], 10, _hoisted_7))\n                  }), 128))\n                ]))\n          ]),\n          (_ctx.selectedRecipe)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                _createElementVNode(\"h4\", null, _toDisplayString(_ctx.selectedRecipe.name), 1),\n                _createElementVNode(\"p\", null, _toDisplayString(_ctx.selectedRecipe.description), 1),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _createElementVNode(\"h5\", null, \"Ability: \" + _toDisplayString(_ctx.selectedRecipe.ability.name), 1),\n                  _createElementVNode(\"p\", _hoisted_12, _toDisplayString(_ctx.selectedRecipe.ability.description), 1)\n                ]),\n                (_ctx.selectedRecipe.drawback)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                      _cache[5] || (_cache[5] = _createElementVNode(\"h5\", null, \"Drawback\", -1)),\n                      _createElementVNode(\"p\", _hoisted_14, _toDisplayString(_ctx.selectedRecipe.drawback.description), 1)\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_15, [\n                  _cache[6] || (_cache[6] = _createElementVNode(\"h5\", null, \"Required Resources\", -1)),\n                  _createElementVNode(\"ul\", _hoisted_16, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedRecipe.requiredResources, (resourceId) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: resourceId,\n                        class: _normalizeClass({ 'available': _ctx.hasResource(resourceId), 'missing': !_ctx.hasResource(resourceId) })\n                      }, [\n                        _createTextVNode(_toDisplayString(_ctx.getResourceName(resourceId)) + \" \", 1),\n                        _createElementVNode(\"span\", _hoisted_17, _toDisplayString(_ctx.hasResource(resourceId) ? '✓' : '✗'), 1)\n                      ], 2))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_18, [\n                  _createElementVNode(\"button\", {\n                    class: \"btn btn--primary\",\n                    onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.craftItem && _ctx.craftItem(...args))),\n                    disabled: !_ctx.canCraftSelectedRecipe\n                  }, \" Craft Item \", 8, _hoisted_19),\n                  _createElementVNode(\"button\", {\n                    class: \"btn btn--secondary ml-2\",\n                    onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.cancelCrafting && _ctx.cancelCrafting(...args)))\n                  }, \" Cancel \")\n                ])\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_20, _cache[7] || (_cache[7] = [\n                _createElementVNode(\"p\", null, \"Select a recipe to view details and craft an item.\", -1)\n              ])))\n        ]))\n  ]))\n}","<template>\n  <div class=\"crafting-station\" style=\"border: 2px solid lightblue; position: relative;\">\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">CraftingStation</div>\n    <h3 class=\"crafting-station__title\">Crafting Station</h3>\n    \n    <div v-if=\"currentPhase !== GamePhase.CRAFTING\" class=\"crafting-station__inactive\">\n      <p>Crafting is not available during the current phase.</p>\n    </div>\n    \n    <div v-else class=\"crafting-station__active\">\n      <div class=\"crafting-station__recipes\">\n        <h4>Available Recipes</h4>\n        <div v-if=\"availableRecipes.length === 0\" class=\"empty-state\">\n          You don't have enough resources to craft any items.\n        </div>\n        <div v-else class=\"recipe-list\">\n          <div \n            v-for=\"item in availableRecipes\" \n            :key=\"item.id\"\n            class=\"recipe-list__item\"\n            :class=\"{ 'selected': selectedRecipe?.id === item.id }\"\n            @click=\"selectRecipe(item)\"\n          >\n            <h5>{{ item.name }}</h5>\n            <div class=\"recipe-complexity\">Complexity: {{ item.complexity }}</div>\n            <div class=\"recipe-resources\">\n              <div>Required Resources:</div>\n              <ul>\n                <li v-for=\"resourceId in item.requiredResources\" :key=\"resourceId\">\n                  {{ getResourceName(resourceId) }}\n                  <span \n                    class=\"resource-status\"\n                    :class=\"{ 'available': hasResource(resourceId), 'missing': !hasResource(resourceId) }\"\n                  >\n                    {{ hasResource(resourceId) ? '✓' : '✗' }}\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <div v-if=\"selectedRecipe\" class=\"crafting-station__details\">\n        <h4>{{ selectedRecipe.name }}</h4>\n        <p>{{ selectedRecipe.description }}</p>\n        \n        <div class=\"item-ability mt-3\">\n          <h5>Ability: {{ selectedRecipe.ability.name }}</h5>\n          <p class=\"ability-description\">{{ selectedRecipe.ability.description }}</p>\n        </div>\n        \n        <div v-if=\"selectedRecipe.drawback\" class=\"item-drawback mt-3\">\n          <h5>Drawback</h5>\n          <p class=\"drawback-description\">{{ selectedRecipe.drawback.description }}</p>\n        </div>\n        \n        <div class=\"item-resources mt-3\">\n          <h5>Required Resources</h5>\n          <ul class=\"resource-requirements\">\n            <li \n              v-for=\"resourceId in selectedRecipe.requiredResources\" \n              :key=\"resourceId\"\n              :class=\"{ 'available': hasResource(resourceId), 'missing': !hasResource(resourceId) }\"\n            >\n              {{ getResourceName(resourceId) }}\n              <span class=\"resource-status\">\n                {{ hasResource(resourceId) ? '✓' : '✗' }}\n              </span>\n            </li>\n          </ul>\n        </div>\n        \n        <div class=\"crafting-actions mt-4\">\n          <button \n            class=\"btn btn--primary\" \n            @click=\"craftItem\"\n            :disabled=\"!canCraftSelectedRecipe\"\n          >\n            Craft Item\n          </button>\n          <button class=\"btn btn--secondary ml-2\" @click=\"cancelCrafting\">\n            Cancel\n          </button>\n        </div>\n      </div>\n      \n      <div v-else class=\"crafting-station__placeholder\">\n        <p>Select a recipe to view details and craft an item.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, onMounted } from 'vue';\nimport { GamePhase } from '@/models/enums/phases';\nimport { useCardStore, usePlayerStore, useGameStore } from '@/stores';\nimport { CraftedItemCard } from '@/models/types/cards';\nimport { CraftingService } from '@/services/craftingService';\n\nexport default defineComponent({\n  name: 'CraftingStation',\n  setup() {\n    const cardStore = useCardStore();\n    const playerStore = usePlayerStore();\n    const gameStore = useGameStore();\n    \n    const craftingService = ref<CraftingService | null>(null);\n    const selectedRecipe = ref<CraftedItemCard | null>(null);\n    \n    onMounted(() => {\n      try {\n        craftingService.value = new CraftingService();\n        console.log('CraftingStation: CraftingService initialized successfully');\n      } catch (error) {\n        console.error('CraftingStation: Error initializing CraftingService:', error);\n      }\n    });\n    \n    const currentPhase = computed(() => {\n      return gameStore.currentPhase;\n    });\n    \n    const playerResources = computed(() => {\n      return playerStore.resources;\n    });\n    \n    const availableRecipes = computed(() => {\n      // Filter craftable items based on resources the player has\n      return cardStore.craftedItems.filter(item => {\n        // Check if the player has at least one of the required resources\n        return item.requiredResources.some(resourceId => \n          playerResources.value.includes(resourceId)\n        );\n      });\n    });\n    \n    const canCraftSelectedRecipe = computed(() => {\n      if (!selectedRecipe.value) return false;\n      \n      // Use craftingService if available, otherwise fallback to simple resource check\n      if (craftingService.value) {\n        const result = craftingService.value.canCraftItem(selectedRecipe.value.id);\n        return result.canCraft;\n      }\n      \n      // Fallback: Check if the player has all required resources\n      return selectedRecipe.value.requiredResources.every(resourceId => \n        playerResources.value.includes(resourceId)\n      );\n    });\n    \n    const getResourceName = (resourceId: string) => {\n      const resource = cardStore.getResourceById(resourceId);\n      return resource ? resource.name : 'Unknown Resource';\n    };\n    \n    const hasResource = (resourceId: string) => {\n      return playerResources.value.includes(resourceId);\n    };\n    \n    const selectRecipe = (recipe: CraftedItemCard) => {\n      selectedRecipe.value = recipe;\n    };\n    \n    const craftItem = () => {\n      if (!selectedRecipe.value || !canCraftSelectedRecipe.value) return;\n      \n      if (craftingService.value) {\n        // Use the crafting service if available\n        const result = craftingService.value.craftItem(selectedRecipe.value.id);\n        if (!result) {\n          console.error('Failed to craft item');\n          return;\n        }\n      } else {\n        // Fallback: Remove resources used for crafting\n        selectedRecipe.value.requiredResources.forEach(resourceId => {\n          playerStore.removeResource(resourceId);\n        });\n      }\n      \n      // Add the crafted item to the player's inventory\n      playerStore.addCraftedItem(selectedRecipe.value.id);\n      \n      // Add experience for crafting\n      playerStore.gainExperience(1);\n      \n      // Log the crafting\n      gameStore.addToGameLog(`You crafted a ${selectedRecipe.value.name}!`);\n      \n      // Reset selection\n      selectedRecipe.value = null;\n      \n      // Move to the next phase\n      gameStore.advancePhase();\n    };\n    \n    const cancelCrafting = () => {\n      selectedRecipe.value = null;\n      \n      // Skip crafting and move to the next phase\n      gameStore.advancePhase();\n    };\n    \n    return {\n      currentPhase,\n      availableRecipes,\n      selectedRecipe,\n      canCraftSelectedRecipe,\n      getResourceName,\n      hasResource,\n      selectRecipe,\n      craftItem,\n      cancelCrafting,\n      GamePhase\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.crafting-station {\n  background-color: white;\n  border-radius: $border-radius-md;\n  box-shadow: $shadow-md;\n  padding: $spacing-md;\n  \n  &__title {\n    margin-top: 0;\n    margin-bottom: $spacing-md;\n    padding-bottom: $spacing-sm;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  }\n  \n  &__inactive {\n    text-align: center;\n    padding: $spacing-lg;\n    color: rgba($dark-color, 0.6);\n    font-style: italic;\n  }\n  \n  &__active {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: $spacing-lg;\n    \n    @media (max-width: $breakpoint-md) {\n      grid-template-columns: 1fr;\n    }\n  }\n  \n  &__placeholder {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 200px;\n    background-color: rgba(0, 0, 0, 0.02);\n    border-radius: $border-radius-md;\n    padding: $spacing-md;\n    text-align: center;\n    color: rgba($dark-color, 0.6);\n  }\n}\n\n.recipe-list {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: $spacing-md;\n  max-height: 400px;\n  overflow-y: auto;\n  \n  &__item {\n    background-color: rgba(0, 0, 0, 0.02);\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    border-radius: $border-radius-md;\n    padding: $spacing-md;\n    cursor: pointer;\n    transition: all $transition-fast;\n    \n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n      transform: translateY(-2px);\n    }\n    \n    &.selected {\n      border-color: $accent-color;\n      background-color: rgba($accent-color, 0.05);\n    }\n    \n    h5 {\n      margin-top: 0;\n      margin-bottom: $spacing-xs;\n    }\n  }\n}\n\n.recipe-complexity {\n  font-size: $font-size-sm;\n  color: $accent-color;\n  margin-bottom: $spacing-xs;\n}\n\n.recipe-resources {\n  font-size: $font-size-sm;\n  \n  ul {\n    list-style-type: none;\n    padding-left: $spacing-md;\n    margin-top: $spacing-xs;\n  }\n}\n\n.resource-requirements {\n  list-style-type: none;\n  padding-left: 0;\n  \n  li {\n    padding: $spacing-xs $spacing-sm;\n    margin-bottom: $spacing-xs;\n    border-radius: $border-radius-sm;\n    display: flex;\n    justify-content: space-between;\n    \n    &.available {\n      background-color: rgba($success-color, 0.1);\n    }\n    \n    &.missing {\n      background-color: rgba($danger-color, 0.1);\n    }\n  }\n}\n\n.resource-status {\n  font-weight: bold;\n  \n  &.available {\n    color: $success-color;\n  }\n  \n  &.missing {\n    color: $danger-color;\n  }\n}\n\n.empty-state {\n  text-align: center;\n  padding: $spacing-lg;\n  color: rgba($dark-color, 0.6);\n  font-style: italic;\n}\n</style>\n","import { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { TempEffect } from '@/models/types/game';\nimport { PlayerEffect } from '@/models/types/player';\nimport { Season } from '@/models/enums/seasons';\n\n// Threat manifestation types\nexport enum ThreatManifestationType {\n  RESOURCE_LOSS = 'RESOURCE_LOSS',\n  HEALTH_LOSS = 'HEALTH_LOSS',\n  CHALLENGE_DIFFICULTY = 'CHALLENGE_DIFFICULTY',\n  COMPANION_EFFECT = 'COMPANION_EFFECT',\n  LANDSCAPE_EFFECT = 'LANDSCAPE_EFFECT',\n  SEASONAL_SHIFT = 'SEASONAL_SHIFT'\n}\n\n// Threat event types\nexport enum ThreatEventType {\n  MINOR = 'MINOR',\n  MODERATE = 'MODERATE',\n  MAJOR = 'MAJOR'\n}\n\n// Otherworldly manifestation types - Aligned with game requirements\nexport enum OtherworldlyManifestationType {\n  MIST_WRAITH = 'MIST_WRAITH',\n  BARROW_WIGHT = 'BARROW_WIGHT',\n  FAERIE_ENTICEMENT = 'FAERIE_ENTICEMENT',\n  WILD_HUNT = 'WILD_HUNT',\n  ANCIENT_GUARDIAN = 'ANCIENT_GUARDIAN',\n  BOUNDARY_COLLAPSE = 'BOUNDARY_COLLAPSE',\n  SPIRIT_POSSESSION = 'SPIRIT_POSSESSION',\n  COSMIC_IMBALANCE = 'COSMIC_IMBALANCE'\n}\n\n// Interface for threat events\nexport interface ThreatEvent {\n  id: string;\n  name: string;\n  description: string;\n  type: ThreatEventType;\n  manifestation: ThreatManifestationType;\n  strength: number;\n  duration: number;\n}\n\n/**\n * Service for managing threat tokens and their effects in the game\n */\nexport class ThreatService {\n  private gameStore = useGameStore();\n  private playerStore = usePlayerStore();\n  private cardStore = useCardStore();\n  \n  // Track threat reduction per turn\n  private threatReductionThisTurn = 0;\n  \n  // Maximum threat reduction allowed per turn\n  private readonly MAX_THREAT_REDUCTION_PER_TURN = 3;\n  \n  // Sacred sites for threat reduction\n  private readonly SACRED_SITES = {\n    MOONLIT_LOCH: 'moonlit_loch',\n    DRUIDS_SANCTUARY: 'druids_sanctuary'\n  };\n  \n  // Resources that can affect threat\n  private readonly THREAT_RESOURCES = {\n    SACRED_WATER: 'sacred_water',\n    ROWAN_WOOD: 'rowan_wood'\n  };\n  \n  // Track if seasonal ritual has been performed\n  private hasPerformedSeasonalRitual = false;\n  \n  // Predefined threat events\n  private threatEvents: ThreatEvent[] = [\n    // Minor threat events\n    {\n      id: 'threat_event_1',\n      name: 'Unsettling Whispers',\n      description: 'Strange whispers echo through the landscape, causing unease.',\n      type: ThreatEventType.MINOR,\n      manifestation: ThreatManifestationType.CHALLENGE_DIFFICULTY,\n      strength: 1,\n      duration: 2\n    },\n    {\n      id: 'threat_event_2',\n      name: 'Sudden Chill',\n      description: 'A bone-deep chill sets in, making it harder to perform tasks.',\n      type: ThreatEventType.MINOR,\n      manifestation: ThreatManifestationType.HEALTH_LOSS,\n      strength: 1,\n      duration: 1\n    },\n    {\n      id: 'threat_event_3',\n      name: 'Misplaced Supplies',\n      description: 'Some of your resources have mysteriously gone missing.',\n      type: ThreatEventType.MINOR,\n      manifestation: ThreatManifestationType.RESOURCE_LOSS,\n      strength: 1,\n      duration: 1\n    },\n    \n    // Moderate threat events\n    {\n      id: 'threat_event_4',\n      name: 'Otherworldly Fog',\n      description: 'A thick, unnatural fog descends, obscuring paths and hiding dangers.',\n      type: ThreatEventType.MODERATE,\n      manifestation: ThreatManifestationType.LANDSCAPE_EFFECT,\n      strength: 2,\n      duration: 3\n    },\n    {\n      id: 'threat_event_5',\n      name: 'Animal Unrest',\n      description: 'Animals in the area become agitated and difficult to approach.',\n      type: ThreatEventType.MODERATE,\n      manifestation: ThreatManifestationType.COMPANION_EFFECT,\n      strength: 2,\n      duration: 2\n    },\n    {\n      id: 'threat_event_6',\n      name: 'Weakening Boundaries',\n      description: 'The veil between worlds thins, allowing strange energies to seep through.',\n      type: ThreatEventType.MODERATE,\n      manifestation: ThreatManifestationType.CHALLENGE_DIFFICULTY,\n      strength: 2,\n      duration: 3\n    },\n    \n    // Major threat events\n    {\n      id: 'threat_event_7',\n      name: 'Seasonal Disruption',\n      description: 'The natural cycle of seasons is disrupted, causing environmental chaos.',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.SEASONAL_SHIFT,\n      strength: 3,\n      duration: 4\n    },\n    {\n      id: 'threat_event_8',\n      name: 'Otherworldly Manifestation',\n      description: 'A powerful entity from beyond manifests, draining life force from all it encounters.',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.HEALTH_LOSS,\n      strength: 3,\n      duration: 3\n    },\n    {\n      id: 'threat_event_9',\n      name: 'Resource Blight',\n      description: 'A mysterious blight affects resources in the area, causing them to wither or spoil.',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.RESOURCE_LOSS,\n      strength: 3,\n      duration: 4\n    }\n  ];\n  \n  // Predefined otherworldly manifestations - Aligned with game requirements\n  private otherworldlyManifestations: (ThreatEvent & {\n    counterResource?: string;\n    requiresChallenge?: boolean;\n    challengeType?: string;\n    requiresOffering?: boolean;\n  })[] = [\n    {\n      id: 'manifestation_1',\n      name: 'Mist Wraith',\n      description: 'Obscures path, requires Amber Shards to banish',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.LANDSCAPE_EFFECT,\n      strength: 2,\n      duration: 3,\n      counterResource: 'amber_shards'\n    },\n    {\n      id: 'manifestation_2',\n      name: 'Barrow Wight',\n      description: 'Drains health each turn, must outrun or confront',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.HEALTH_LOSS,\n      strength: 2,\n      duration: 3,\n      requiresChallenge: true\n    },\n    {\n      id: 'manifestation_3',\n      name: 'Faerie Enticement',\n      description: 'Attempts to lead you astray, requires willpower challenge',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.CHALLENGE_DIFFICULTY,\n      strength: 2,\n      duration: 2,\n      challengeType: 'mental'\n    },\n    {\n      id: 'manifestation_4',\n      name: 'Wild Hunt',\n      description: 'Pursues you for 1d4 turns, must hide or join the hunt',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.CHALLENGE_DIFFICULTY,\n      strength: 3,\n      duration: Math.floor(Math.random() * 4) + 1, // 1d4 turns\n      challengeType: 'physical'\n    },\n    {\n      id: 'manifestation_5',\n      name: 'Ancient Guardian',\n      description: 'Blocks path, requires specific offering or riddling',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.LANDSCAPE_EFFECT,\n      strength: 3,\n      duration: 2,\n      requiresOffering: true\n    },\n    {\n      id: 'manifestation_6',\n      name: 'Boundary Collapse',\n      description: 'Seasons blur, unpredictable effects each turn',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.SEASONAL_SHIFT,\n      strength: 3,\n      duration: 4\n    },\n    {\n      id: 'manifestation_7',\n      name: 'Spirit Possession',\n      description: 'Animal Companion turns against you',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.COMPANION_EFFECT,\n      strength: 3,\n      duration: 3\n    },\n    {\n      id: 'manifestation_8',\n      name: 'Cosmic Imbalance',\n      description: 'All challenges +2 difficulty until balance restored',\n      type: ThreatEventType.MAJOR,\n      manifestation: ThreatManifestationType.CHALLENGE_DIFFICULTY,\n      strength: 2,\n      duration: 4\n    }\n  ];\n  \n  /**\n   * Add threat tokens to the game state\n   * @param amount Number of threat tokens to add\n   * @returns Current number of threat tokens\n   */\n  public addThreatTokens(amount: number): number {\n    return this.gameStore.addThreatTokens(amount);\n  }\n  \n  /**\n   * Remove threat tokens from the game state\n   * @param amount Number of threat tokens to remove\n   * @returns Current number of threat tokens\n   */\n  public removeThreatTokens(amount: number): number {\n    // Enforce maximum threat reduction per turn\n    const remainingReduction = this.MAX_THREAT_REDUCTION_PER_TURN - this.threatReductionThisTurn;\n    if (remainingReduction <= 0) {\n      this.gameStore.addToGameLog('Maximum threat reduction reached for this turn.', true);\n      return this.gameStore.threatTokens;\n    }\n    \n    // Adjust amount if it would exceed the maximum\n    const actualAmount = Math.min(amount, remainingReduction);\n    \n    // Update the reduction tracker\n    this.threatReductionThisTurn += actualAmount;\n    \n    // Log the reduction\n    if (actualAmount < amount) {\n      this.gameStore.addToGameLog(`Reduced ${actualAmount} threat tokens (limit reached for this turn).`, true);\n    }\n    \n    return this.gameStore.removeThreatTokens(actualAmount);\n  }\n  \n  /**\n   * Reset the threat reduction tracker for a new turn\n   */\n  public resetThreatReductionTracker(): void {\n    this.threatReductionThisTurn = 0;\n  }\n  \n  /**\n   * Get the current threat level (1 level per 3 tokens)\n   * @returns Current threat level\n   */\n  public getThreatLevel(): number {\n    return Math.floor(this.gameStore.threatTokens / 3);\n  }\n  \n  /**\n   * Check if the player has an effect that prevents threat\n   * @returns True if player has threat prevention effect\n   */\n  public hasThreatPrevention(): boolean {\n    return this.playerStore.hasEffect('threat_prevention');\n  }\n  \n  /**\n   * Generate a random threat event based on current threat level\n   * @returns A random threat event\n   */\n  public generateRandomThreatEvent(): ThreatEvent | null {\n    const threatLevel = this.getThreatLevel();\n    \n    // No events if threat level is 0\n    if (threatLevel === 0) {\n      return null;\n    }\n    \n    // Filter events based on threat level\n    let eligibleEvents: ThreatEvent[] = [];\n    \n    if (threatLevel === 1) {\n      eligibleEvents = this.threatEvents.filter(event => event.type === ThreatEventType.MINOR);\n    } else if (threatLevel === 2) {\n      eligibleEvents = this.threatEvents.filter(event => \n        event.type === ThreatEventType.MINOR || event.type === ThreatEventType.MODERATE\n      );\n    } else {\n      // All events are eligible at threat level 3+\n      eligibleEvents = this.threatEvents;\n    }\n    \n    // Return random event from eligible events\n    if (eligibleEvents.length > 0) {\n      const randomIndex = Math.floor(Math.random() * eligibleEvents.length);\n      return eligibleEvents[randomIndex];\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Apply a threat event to the game state\n   * @param event The threat event to apply\n   */\n  public applyThreatEvent(event: ThreatEvent): void {\n    // Skip if player has threat prevention\n    if (this.hasThreatPrevention()) {\n      this.gameStore.addToGameLog(`${event.name} was prevented by your protective effects!`, true);\n      return;\n    }\n    \n    // Add effect to game state\n    this.gameStore.addToGameLog(`Threat manifests: ${event.name} - ${event.description}`, true);\n    \n    // Apply immediate effects based on manifestation type\n    switch (event.manifestation) {\n      case ThreatManifestationType.HEALTH_LOSS:\n        this.playerStore.takeDamage(event.strength);\n        this.gameStore.addToGameLog(`You lose ${event.strength} health from the threat.`);\n        break;\n        \n      case ThreatManifestationType.RESOURCE_LOSS:\n        this.playerStore.loseRandomResources(event.strength);\n        this.gameStore.addToGameLog(`You lose ${event.strength} random resources from the threat.`);\n        break;\n        \n      case ThreatManifestationType.CHALLENGE_DIFFICULTY:\n        // Add temporary effect to increase challenge difficulty\n        this.gameStore.addTempEffect(\n          'threat_challenge_difficulty',\n          'Increased Challenge Difficulty',\n          `Challenges are ${event.strength} points more difficult due to threat.`,\n          event.strength,\n          event.duration\n        );\n        break;\n        \n      case ThreatManifestationType.COMPANION_EFFECT:\n        // Add temporary effect to reduce companion effectiveness\n        this.gameStore.addTempEffect(\n          'threat_companion_effect',\n          'Companion Unrest',\n          `Animal companions are less effective due to threat.`,\n          event.strength,\n          event.duration\n        );\n        break;\n        \n      case ThreatManifestationType.LANDSCAPE_EFFECT:\n        // Add temporary effect to reduce resource gathering\n        this.gameStore.addTempEffect(\n          'threat_landscape_effect',\n          'Landscape Disruption',\n          `Resource gathering is reduced due to threat.`,\n          event.strength,\n          event.duration\n        );\n        break;\n        \n      case ThreatManifestationType.SEASONAL_SHIFT:\n        // Add temporary effect to disrupt seasonal benefits\n        this.gameStore.addTempEffect(\n          'threat_seasonal_shift',\n          'Seasonal Disruption',\n          `Seasonal benefits are reduced due to threat.`,\n          event.strength,\n          event.duration\n        );\n        \n        // Advance the season if this is a major event\n        if (event.type === ThreatEventType.MAJOR) {\n          this.gameStore.advanceSeason();\n        }\n        break;\n    }\n  }\n  \n  /**\n   * Generate and apply a random threat manifestation based on current threat level\n   * @returns The applied threat event, or null if none was applied\n   */\n  public manifestThreat(): ThreatEvent | null {\n    // Check if player has threat prevention\n    if (this.hasThreatPrevention()) {\n      this.gameStore.addToGameLog('Your protective effects prevented a threat manifestation!', true);\n      return null;\n    }\n    \n    // Generate random event\n    const event = this.generateRandomThreatEvent();\n    \n    // Apply the event if one was generated\n    if (event) {\n      this.applyThreatEvent(event);\n      return event;\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Check if a threat manifestation should occur based on current threat level\n   * Higher threat levels have higher chance of manifestation\n   * @returns True if a manifestation should occur\n   */\n  public shouldManifestThreat(): boolean {\n    const threatLevel = this.getThreatLevel();\n    \n    // No manifestations at threat level 0\n    if (threatLevel === 0) {\n      return false;\n    }\n    \n    // Probability increases with threat level\n    const manifestationChance = threatLevel * 0.15; // 15% per threat level\n    return Math.random() < manifestationChance;\n  }\n  \n  /**\n   * Add a threat prevention effect to the player\n   * @param duration Duration of the effect in turns\n   * @param strength Strength of the effect (higher values prevent stronger threats)\n   */\n  public addThreatPreventionEffect(duration: number, strength: number = 1): void {\n    const effect: PlayerEffect = {\n      id: 'threat_prevention',\n      name: 'Threat Prevention',\n      description: 'Prevents threat manifestations from affecting you.',\n      magnitude: strength,\n      duration,\n      type: 'protection',\n      target: 'player'\n    };\n    \n    this.playerStore.addEffect(effect);\n    this.gameStore.addToGameLog(`You are now protected from threats for ${duration} turns.`, true);\n  }\n  \n  /**\n   * Process threat-related effects at the end of a turn\n   * This includes checking for new manifestations and updating existing effects\n   */\n  public processThreatEffects(): void {\n    // Reset threat reduction tracker for the new turn\n    this.resetThreatReductionTracker();\n    \n    // Check if a new threat should manifest\n    if (this.shouldManifestThreat()) {\n      this.manifestThreat();\n    }\n    \n    // Roll for otherworldly manifestation if threat is high\n    if (this.gameStore.threatTokens >= 10) {\n      this.rollForOtherworldlyManifestation();\n    }\n    \n    // Process existing effects (already handled by game and player stores)\n  }\n  \n  /**\n   * Use a sacred site to reduce threat\n   * @param landscapeId ID of the current landscape\n   * @returns Number of threat tokens removed, or 0 if not a sacred site\n   */\n  public useSacredSiteForThreatReduction(landscapeId: string): number {\n    if (landscapeId === this.SACRED_SITES.MOONLIT_LOCH) {\n      // Moonlit Loch: Remove 1-3 tokens through purification ritual\n      const reduction = Math.floor(Math.random() * 3) + 1; // 1-3 tokens\n      this.gameStore.addToGameLog(`You performed a purification ritual at the Moonlit Loch, reducing threat by ${reduction}.`, true);\n      return this.removeThreatTokens(reduction);\n    } \n    else if (landscapeId === this.SACRED_SITES.DRUIDS_SANCTUARY) {\n      // Druid's Sanctuary: Remove 2 tokens through meditation\n      this.gameStore.addToGameLog('You meditated at the Druid\\'s Sanctuary, reducing threat by 2.', true);\n      return this.removeThreatTokens(2);\n    }\n    \n    return 0;\n  }\n  \n  /**\n   * Use a resource to reduce or prevent threat\n   * @param resourceId ID of the resource to use\n   * @returns True if the resource was used successfully for threat reduction\n   */\n  public useResourceForThreatReduction(resourceId: string): boolean {\n    const playerStore = usePlayerStore();\n    \n    if (resourceId === this.THREAT_RESOURCES.SACRED_WATER) {\n      // Sacred Water: Remove 1 token when used\n      if (this.removeThreatTokens(1) > 0) {\n        playerStore.removeResource(resourceId);\n        this.gameStore.addToGameLog('You used Sacred Water to purify and reduce threat by 1.', true);\n        return true;\n      }\n    } \n    else if (resourceId === this.THREAT_RESOURCES.ROWAN_WOOD) {\n      // Rowan Wood: Prevent 1 token accumulation when used\n      playerStore.removeResource(resourceId);\n      \n      // Add a temporary effect to prevent the next threat token accumulation\n      this.gameStore.addTempEffect(\n        'threat_prevention_rowan',\n        'Rowan Protection',\n        'Protected from threat accumulation by Rowan Wood.',\n        1,\n        1\n      );\n      \n      this.gameStore.addToGameLog('You used Rowan Wood to ward against the next threat accumulation.', true);\n      return true;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Perform a seasonal purification ritual\n   * @returns Number of threat tokens removed\n   */\n  public performSeasonalPurificationRitual(): number {\n    const gameStore = this.gameStore;\n    const currentSeason = gameStore.currentSeason;\n    \n    // Check if ritual already performed this season\n    if (this.hasPerformedSeasonalRitual) {\n      gameStore.addToGameLog('You have already performed a purification ritual this season.', true);\n      return 0;\n    }\n    \n    // Different ritual effectiveness based on season\n    let reduction = 1;\n    let ritualName = '';\n    \n    switch (currentSeason) {\n      case Season.IMBOLC:\n        ritualName = 'Imbolc Purification';\n        reduction = 3;\n        break;\n      case Season.BELTANE:\n        ritualName = 'Spring Renewal Ritual';\n        reduction = 2;\n        break;\n      case Season.LUGHNASADH:\n        ritualName = 'Summer Solstice Ceremony';\n        reduction = 3;\n        break;\n      case Season.SAMHAIN:\n        ritualName = 'Autumn Harvest Offering';\n        reduction = 2;\n        break;\n      case Season.WINTERS_DEPTH:\n        ritualName = 'Winter Solstice Vigil';\n        reduction = 1;\n        break;\n    }\n    \n    // Mark ritual as performed this season\n    this.hasPerformedSeasonalRitual = true;\n    \n    gameStore.addToGameLog(`You performed the ${ritualName}, reducing threat by ${reduction}.`, true);\n    return this.removeThreatTokens(reduction);\n  }\n  \n  /**\n   * Reset the seasonal ritual tracker when season changes\n   */\n  public resetSeasonalRitualTracker(): void {\n    this.hasPerformedSeasonalRitual = false;\n  }\n  \n  /** \n   * Roll for an otherworldly manifestation (when threat is high)\n   * @returns The manifestation that occurred, or null if none\n   */\n  public rollForOtherworldlyManifestation(): any {\n    if (this.gameStore.threatTokens < 10) {\n      return null;\n    }\n    \n    // Roll 1d8 for manifestation type\n    const roll = Math.floor(Math.random() * 8) + 1;\n    const manifestation = this.otherworldlyManifestations[roll - 1];\n    \n    this.gameStore.addToGameLog(`Otherworldly Manifestation: ${manifestation.name} - ${manifestation.description}`, true);\n    \n    // Apply the manifestation effects\n    this.applyThreatEvent(manifestation);\n    \n    return manifestation;\n  }\n  \n  /**\n   * Check if the current landscape is a sacred site for threat reduction\n   * @param landscapeId ID of the landscape to check\n   * @returns True if the landscape is a sacred site\n   */\n  public isSacredSite(landscapeId: string): boolean {\n    return landscapeId === this.SACRED_SITES.MOONLIT_LOCH || \n           landscapeId === this.SACRED_SITES.DRUIDS_SANCTUARY;\n  }\n  \n  /**\n   * Check if a resource can be used for threat reduction\n   * @param resourceId ID of the resource to check\n   * @returns True if the resource can reduce threat\n   */\n  public isResourceUsefulForThreat(resourceId: string): boolean {\n    return resourceId === this.THREAT_RESOURCES.SACRED_WATER || \n           resourceId === this.THREAT_RESOURCES.ROWAN_WOOD;\n  }\n  \n  /**\n   * Get threat accumulation for crafting a powerful item\n   * @param itemId ID of the crafted item\n   * @returns Number of threat tokens to add (0 if none)\n   */\n  public getThreatForCraftedItem(itemId: string): number {\n    const item = this.cardStore.getCraftedItemById(itemId);\n    \n    if (!item) return 0;\n    \n    // Default threat costs based on complexity\n    if (item.complexity) {\n      const complexityValue = typeof item.complexity === 'number' \n        ? item.complexity \n        : this.getComplexityValue(item.complexity);\n        \n      // Higher complexity means more threat\n      if (complexityValue >= 4) {\n        return 3; // LEGENDARY\n      } else if (complexityValue >= 3) {\n        return 2; // ADVANCED\n      } else if (complexityValue >= 2) {\n        return 1; // COMPLEX\n      }\n    }\n    \n    return 0;\n  }\n  \n  /**\n   * Get numeric value for complexity string\n   * @param complexity Complexity as string\n   * @returns Numeric value\n   */\n  private getComplexityValue(complexity: string): number {\n    switch (complexity) {\n      case 'LEGENDARY': return 4;\n      case 'ADVANCED': return 3;\n      case 'COMPLEX': return 2;\n      case 'SIMPLE': \n      default: return 1;\n    }\n  }\n  \n  /**\n   * Add threat for seasonal crossing\n   * @returns Number of threat tokens added\n   */\n  public addThreatForSeasonalCrossing(): number {\n    return this.addThreatTokens(2);\n  }\n  \n  /**\n   * Add threat for disrespecting a sacred site\n   * @param landscapeId ID of the landscape\n   * @param severity How severe the disrespect was (1-3)\n   * @returns Number of threat tokens added\n   */\n  public addThreatForSacredSiteDisrespect(landscapeId: string, severity: number = 1): number {\n    // Only add threat if it's a sacred site\n    if (this.isSacredSite(landscapeId)) {\n      // Ensure severity is within bounds\n      const threatAmount = Math.max(1, Math.min(3, severity));\n      this.gameStore.addToGameLog(`Your actions have disrespected a sacred site, increasing threat by ${threatAmount}.`, true);\n      return this.addThreatTokens(threatAmount);\n    }\n    \n    return 0;\n  }\n  \n  /**\n   * Process threat system on season change\n   * @param oldSeason Previous season\n   * @param newSeason Current season\n   */\n  public handleSeasonChange(oldSeason: Season, newSeason: Season): void {\n    // Reset the seasonal ritual tracker\n    this.resetSeasonalRitualTracker();\n    \n    // Add threat for seasonal crossing if player is unprepared\n    const playerStore = this.playerStore;\n    \n    // Check if player has necessary preparation for the season\n    let isPrepared = false;\n    \n    // Check for seasonal preparation items or effects\n    if (newSeason === Season.WINTERS_DEPTH) {\n      isPrepared = playerStore.resources.some(r => ['woven_reeds', 'forge_cinders'].includes(r));\n    } else if (newSeason === Season.IMBOLC) {\n      isPrepared = playerStore.resources.some(r => ['rowan_wood', 'silver_mistletoe'].includes(r));\n    } else if (newSeason === Season.BELTANE) {\n      isPrepared = playerStore.resources.some(r => ['oak_galls', 'amber_shards'].includes(r));\n    } else if (newSeason === Season.LUGHNASADH) {\n      isPrepared = playerStore.resources.some(r => ['sacred_water', 'horse_hair'].includes(r));\n    } else if (newSeason === Season.SAMHAIN) {\n      isPrepared = playerStore.resources.some(r => ['barrow_dust', 'ogham_sticks'].includes(r));\n    }\n    \n    // Add threat if unprepared\n    if (!isPrepared) {\n      this.addThreatForSeasonalCrossing();\n      this.gameStore.addToGameLog(`You were unprepared for the transition to ${newSeason}, increasing threat by 2.`, true);\n    } else {\n      this.gameStore.addToGameLog(`Your preparations have eased the transition to ${newSeason}.`, true);\n    }\n  }\n  \n  /**\n   * Process threat system at the end of a turn\n   * Handles threat accumulation, manifestations, and other threat-related effects\n   */\n  public processEndOfTurn(): void {\n    // Process threat effects\n    this.processThreatEffects();\n    \n    // Check current landscape for any threat-related effects\n    const currentLandscapeId = this.gameStore.currentLandscapeId;\n    if (this.isSacredSite(currentLandscapeId)) {\n      this.gameStore.addToGameLog(`You are at a sacred site (${currentLandscapeId}). You may perform a ritual to reduce threat.`, false);\n    }\n    \n    // Apply any pending threat effects from crafted items\n    // This would be handled elsewhere when crafting occurs\n  }\n  \n  /**\n   * Integrate with the resource service to handle resource usage for threat reduction\n   * @param resourceId ID of the resource to use\n   * @returns True if the resource was used for threat reduction\n   */\n  public processResourceUse(resourceId: string): boolean {\n    if (this.isResourceUsefulForThreat(resourceId)) {\n      return this.useResourceForThreatReduction(resourceId);\n    }\n    return false;\n  }\n}\n","/**\n * Crafting Service\n * Handles crafting mechanics and resource requirements\n */\nimport { useGameStore } from '@/stores/gameStore';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { ThreatService } from '@/services/threatService';\n\n// Define interfaces to extend existing types\ninterface ExtendedLandscape {\n  hasCraftingFacilities?: boolean;\n  craftingBonuses?: Record<string, number>;\n  specialCraftingCapabilities?: number;\n}\n\n// Complexity tiers with their numeric values for difficulty calculation\nconst COMPLEXITY_TIERS = {\n  SIMPLE: 1,\n  COMPLEX: 2,\n  ADVANCED: 3,\n  LEGENDARY: 4\n};\n\n// Map string complexity values to numeric tier values\nconst getComplexityValue = (complexity: string | number): number => {\n  // If it's already a number, return it\n  if (typeof complexity === 'number') {\n    return complexity;\n  }\n  \n  switch(complexity.toLowerCase()) {\n    case 'simple': return COMPLEXITY_TIERS.SIMPLE;\n    case 'complex': return COMPLEXITY_TIERS.COMPLEX;\n    case 'advanced': return COMPLEXITY_TIERS.ADVANCED;\n    case 'legendary': return COMPLEXITY_TIERS.LEGENDARY;\n    default: return COMPLEXITY_TIERS.SIMPLE;\n  }\n};\n\nclass CraftingService {\n  private gameStore = useGameStore();\n  private playerStore = usePlayerStore();\n  private cardStore = useCardStore();\n  private threatService = new ThreatService();\n  \n  /**\n   * Check if player can craft an item\n   * @param itemId The ID of the item to craft\n   * @returns Object with canCraft flag and missing resources\n   */\n  canCraftItem(itemId: string): {\n    canCraft: boolean;\n    missingResources: string[];\n    landscapeSupported: boolean;\n    playerSkill: boolean;\n  } {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    const gameStore = useGameStore();\n    \n    // Get crafted item\n    const item = cardStore.getCraftedItemById(itemId);\n    if (!item) {\n      return { canCraft: false, missingResources: [], landscapeSupported: false, playerSkill: false };\n    }\n    \n    // Check if player already has this item\n    if (playerStore.craftedItems.includes(itemId)) {\n      return { canCraft: false, missingResources: [], landscapeSupported: false, playerSkill: false };\n    }\n    \n    // Check required resources\n    const missingResources = [];\n    for (const resourceId of item.requiredResources) {\n      if (!playerStore.resources.includes(resourceId)) {\n        missingResources.push(resourceId);\n      }\n    }\n    \n    // Check if current landscape supports crafting this item complexity\n    const landscapeSupported = this.isComplexitySupportedByLandscape(\n      getComplexityValue(item.complexity),\n      gameStore.currentLandscapeId\n    );\n    \n    // Check if player has sufficient skill level for this item\n    const playerSkill = this.playerHasSkillForComplexity(\n      getComplexityValue(item.complexity)\n    );\n    \n    return {\n      canCraft: missingResources.length === 0 && landscapeSupported && playerSkill,\n      missingResources,\n      landscapeSupported,\n      playerSkill\n    };\n  }\n  \n  /**\n   * Check if the current landscape supports crafting at the given complexity tier\n   * @param complexityTier The numeric complexity tier value\n   * @param landscapeId The current landscape ID\n   * @returns True if the landscape supports this complexity\n   */\n  isComplexitySupportedByLandscape(complexityTier: number, landscapeId: string): boolean {\n    const cardStore = useCardStore();\n    const landscape = cardStore.getLandscapeById(landscapeId) as unknown as ExtendedLandscape;\n    \n    if (!landscape) {\n      return false;\n    }\n    \n    // Basic landscapes may only support simple crafting\n    if (!landscape.hasCraftingFacilities && complexityTier > COMPLEXITY_TIERS.SIMPLE) {\n      return false;\n    }\n    \n    // Specialized crafting landscapes (with facilities) support up to complex items\n    if (landscape.hasCraftingFacilities && complexityTier <= COMPLEXITY_TIERS.COMPLEX) {\n      return true;\n    }\n    \n    // Check for special crafting landscapes that support advanced or legendary\n    if (landscape.specialCraftingCapabilities) {\n      return complexityTier <= landscape.specialCraftingCapabilities;\n    }\n    \n    // Default case: simple items can be crafted anywhere\n    return complexityTier === COMPLEXITY_TIERS.SIMPLE;\n  }\n  \n  /**\n   * Check if player has sufficient skill for crafting at the given complexity tier\n   * @param complexityTier The numeric complexity tier value\n   * @returns True if player has the necessary skill\n   */\n  playerHasSkillForComplexity(complexityTier: number): boolean {\n    const playerStore = usePlayerStore();\n    \n    // Number of crafted items can indicate skill level\n    const craftedItemCount = playerStore.craftedItemCount;\n    \n    // Simple items require no prior crafting\n    if (complexityTier === COMPLEXITY_TIERS.SIMPLE) {\n      return true;\n    }\n    \n    // Complex items require at least 1 prior crafted item\n    if (complexityTier === COMPLEXITY_TIERS.COMPLEX) {\n      return craftedItemCount >= 1;\n    }\n    \n    // Advanced items require at least 3 prior crafted items\n    if (complexityTier === COMPLEXITY_TIERS.ADVANCED) {\n      return craftedItemCount >= 3;\n    }\n    \n    // Legendary items require at least 5 prior crafted items\n    if (complexityTier === COMPLEXITY_TIERS.LEGENDARY) {\n      return craftedItemCount >= 5;\n    }\n    \n    return false;\n  }\n  \n  /**\n   * Craft an item if possible\n   * @param itemId ID of the item to craft\n   * @returns True if the item was crafted, false otherwise\n   */\n  public craftItem(itemId: string): boolean {\n    const { canCraft, missingResources, landscapeSupported, playerSkill } = this.canCraftItem(itemId);\n    \n    if (!canCraft) {\n      if (missingResources.length > 0) {\n        this.gameStore.addToGameLog(`Cannot craft item: missing resources - ${missingResources.join(', ')}`, true);\n      } else if (!landscapeSupported) {\n        this.gameStore.addToGameLog('Cannot craft item: current landscape does not support this complexity of crafting', true);\n      } else if (!playerSkill) {\n        this.gameStore.addToGameLog('Cannot craft item: insufficient crafting experience', true);\n      } else {\n        this.gameStore.addToGameLog('Cannot craft item: unknown reason', true);\n      }\n      return false;\n    }\n    \n    const item = this.cardStore.getCraftedItemById(itemId);\n    if (!item) {\n      this.gameStore.addToGameLog(`Cannot craft item: item with ID ${itemId} not found`, true);\n      return false;\n    }\n    \n    // Validate each required resource exists in the game data\n    const invalidResources = [];\n    for (const resourceId of item.requiredResources) {\n      if (!this.cardStore.getResourceById(resourceId)) {\n        invalidResources.push(resourceId);\n      }\n    }\n    \n    if (invalidResources.length > 0) {\n      this.gameStore.addToGameLog(`Crafting failed: invalid resource references - ${invalidResources.join(', ')}`, true);\n      return false;\n    }\n    \n    // Remove required resources\n    for (const resourceId of item.requiredResources) {\n      this.playerStore.removeResource(resourceId);\n    }\n    \n    // Add the crafted item to inventory\n    this.playerStore.addCraftedItem(itemId);\n    \n    // Update unique crafted items count for skill progression\n    if (!this.playerStore.craftedItems.includes(itemId)) {\n      this.playerStore.uniqueCraftedItemsCount++;\n    }\n    \n    // Check for legendary item\n    if (item.isLegendary) {\n      this.playerStore.hasCraftedLegendaryItem = true;\n    }\n    \n    // Apply threat cost based on item complexity\n    const threatCost = this.threatService.getThreatForCraftedItem(itemId);\n    if (threatCost > 0) {\n      this.threatService.addThreatTokens(threatCost);\n      this.gameStore.addToGameLog(`Crafting this powerful item has increased threat by ${threatCost}.`, true);\n    }\n    \n    this.gameStore.addToGameLog(`Successfully crafted ${item.name}!`, true);\n    return true;\n  }\n  \n  /**\n   * Calculate crafting difficulty for an item\n   * @param itemId The ID of the item to craft\n   * @returns The calculated difficulty\n   */\n  calculateCraftingDifficulty(itemId: string): number {\n    const cardStore = useCardStore();\n    const gameStore = useGameStore();\n    \n    // Get crafted item\n    const item = cardStore.getCraftedItemById(itemId);\n    if (!item) {\n      return 0;\n    }\n    \n    // Get the complexity tier numeric value\n    const complexityValue = getComplexityValue(item.complexity);\n    \n    // Base difficulty from item\n    // Use item complexity as the base if no specific difficulty is defined\n    const baseDifficulty = typeof item['difficulty'] === 'number' ? item['difficulty'] : 3;\n    let difficulty = baseDifficulty * complexityValue;\n    \n    // Apply location bonus/penalty\n    const locationBonus = this.getLocationCraftingBonus(itemId, gameStore.currentLandscapeId);\n    difficulty -= locationBonus * 2; // Increase the impact of location bonuses\n    \n    // Apply seasonal effects\n    const seasonalModifier = this.getSeasonalCraftingModifier(gameStore.currentSeason);\n    difficulty += seasonalModifier;\n    \n    // Apply threat level effects\n    const threatLevel = Math.floor(gameStore.threatTokens / 3);\n    difficulty += threatLevel;\n    \n    // Apply player's crafting experience bonus\n    const playerStore = usePlayerStore();\n    const experienceBonus = Math.floor(playerStore.craftedItemCount / 2);\n    difficulty -= experienceBonus;\n    \n    // Ensure minimum difficulty of 1\n    return Math.max(1, difficulty);\n  }\n  \n  /**\n   * Get crafting bonus for current location\n   * @param itemId The ID of the item to craft\n   * @param locationId The ID of the current location\n   * @returns The location bonus (positive is beneficial)\n   */\n  getLocationCraftingBonus(itemId: string, locationId: string): number {\n    const cardStore = useCardStore();\n    \n    const item = cardStore.getCraftedItemById(itemId);\n    const landscape = cardStore.getLandscapeById(locationId) as unknown as ExtendedLandscape;\n    \n    if (!item || !landscape) {\n      return 0;\n    }\n    \n    // Check if location has crafting facilities\n    if (landscape.hasCraftingFacilities) {\n      return 1;\n    }\n    \n    // Check if location has special bonus for this item type\n    if (landscape.craftingBonuses && item.type && landscape.craftingBonuses[item.type]) {\n      return landscape.craftingBonuses[item.type];\n    }\n    \n    // Check if landscape has special affinity for the item's complexity\n    if (landscape.specialCraftingCapabilities && \n        getComplexityValue(item.complexity) <= landscape.specialCraftingCapabilities) {\n      return 2; // Bigger bonus for specialized crafting locations\n    }\n    \n    return 0;\n  }\n  \n  /**\n   * Get seasonal modifier for crafting\n   * @param season The current season\n   * @returns The seasonal modifier (negative is beneficial)\n   */\n  getSeasonalCraftingModifier(season: string): number {\n    // Define seasonal crafting modifiers\n    const seasonalModifiers: Record<string, number> = {\n      'SAMHAIN': 0,\n      'WINTERS_DEPTH': 1, // Harder to craft in winter\n      'IMBOLC': 0,\n      'BELTANE': -1, // Easier to craft in spring\n      'LUGHNASADH': -1 // Easier to craft in harvest season\n    };\n    \n    return seasonalModifiers[season] || 0;\n  }\n  \n  /**\n   * Get recipe suggestions based on available resources\n   * @returns Array of craftable item IDs\n   */\n  getRecipeSuggestions(): string[] {\n    const cardStore = useCardStore();\n    const craftableItems = cardStore.getAllCraftedItems();\n    \n    // Filter to items that can be crafted\n    return craftableItems\n      .filter(item => item.requiredResources && item.requiredResources.length > 0)\n      .map(item => item.id);\n  }\n  \n  /**\n   * Get recipe suggestions filtered by complexity (number of required resources)\n   * @param maxComplexity The maximum number of resources required for a recipe\n   * @returns An array of item IDs for craftable items that meet the complexity requirement\n   */\n  getRecipeSuggestionsByComplexity(maxComplexity: number): string[] {\n    const cardStore = useCardStore();\n    const craftableItems = cardStore.getAllCraftedItems();\n    \n    // Filter to items that can be crafted and match complexity\n    return craftableItems\n      .filter(item => \n        item.requiredResources && \n        item.requiredResources.length > 0 && \n        item.requiredResources.length <= maxComplexity\n      )\n      .map(item => item.id);\n  }\n  \n  /**\n   * Get detailed crafting requirements and restrictions for an item\n   * @param itemId The ID of the item to check\n   * @returns Detailed crafting requirements object\n   */\n  getCraftingRequirements(itemId: string): {\n    item: any,\n    requiredResources: string[],\n    missingResources: string[],\n    landscapeSupported: boolean,\n    playerSkill: boolean,\n    difficulty: number,\n    locationBonus: number,\n    seasonalModifier: number\n  } | null {\n    const cardStore = useCardStore();\n    const gameStore = useGameStore();\n    const playerStore = usePlayerStore();\n    \n    const item = cardStore.getCraftedItemById(itemId);\n    if (!item) {\n      return null;\n    }\n    \n    const { missingResources, landscapeSupported, playerSkill } = this.canCraftItem(itemId);\n    const difficulty = this.calculateCraftingDifficulty(itemId);\n    const locationBonus = this.getLocationCraftingBonus(itemId, gameStore.currentLandscapeId);\n    const seasonalModifier = this.getSeasonalCraftingModifier(gameStore.currentSeason);\n    \n    return {\n      item,\n      requiredResources: item.requiredResources,\n      missingResources,\n      landscapeSupported,\n      playerSkill,\n      difficulty,\n      locationBonus,\n      seasonalModifier\n    };\n  }\n  \n  /**\n   * Apply effects when an item is crafted\n   * @param itemId The ID of the crafted item\n   */\n  applyItemEffect(itemId: string) {\n    const playerStore = usePlayerStore();\n    const cardStore = useCardStore();\n    \n    const item = cardStore.getCraftedItemById(itemId);\n    if (!item || !item.ability || typeof item.ability !== 'object') {\n      return;\n    }\n    \n    // Apply the item's ability effects based on its type\n    // In a real implementation, this would include specific logic for each item\n    \n    if (item.ability.type === 'healing') {\n      // Example: Healing items restore health\n      playerStore.healHealth(2);\n    } else if (item.ability.type === 'protection') {\n      // Example: Protection items add temporary effects\n      const gameStore = useGameStore();\n      gameStore.addTempEffect(\n        `${itemId}_protection`,\n        `${item.name} Protection`,\n        item.ability.description || '',\n        2,\n        3\n      );\n    }\n    \n    // If the item has a drawback, apply it\n    if (item.drawback) {\n      // Example: Some drawbacks could reduce health or add threat\n      const gameStore = useGameStore();\n      gameStore.addThreatTokens(1);\n    }\n  }\n  \n  /**\n   * Check if crafting this item satisfies any victory conditions\n   */\n  private checkCraftingVictoryConditions(): void {\n    const playerStore = usePlayerStore();\n    \n    // Example: Check if player has crafted a legendary item\n    const cardStore = useCardStore();\n    const hasLegendaryItem = playerStore.craftedItems.some(itemId => {\n      const item = cardStore.getCraftedItemById(itemId);\n      return item && item.isLegendary;\n    });\n    \n    if (hasLegendaryItem) {\n      playerStore.hasCraftedLegendaryItem = true;\n    }\n    \n    // Check for number of unique crafted items\n    const uniqueItemTypes = new Set(\n      playerStore.craftedItems.map(itemId => {\n        const item = cardStore.getCraftedItemById(itemId);\n        return item ? item.type : null;\n      }).filter(Boolean)\n    );\n    \n    playerStore.uniqueCraftedItemsCount = uniqueItemTypes.size;\n  }\n}\n\nexport { CraftingService };\n","import { render } from \"./CraftingStation.vue?vue&type=template&id=05833e9e&scoped=true&ts=true\"\nimport script from \"./CraftingStation.vue?vue&type=script&lang=ts\"\nexport * from \"./CraftingStation.vue?vue&type=script&lang=ts\"\n\nimport \"./CraftingStation.vue?vue&type=style&index=0&id=05833e9e&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-05833e9e\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"game-log\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = {\n  class: \"game-log__entries\",\n  ref: \"logContainer\"\n}\nconst _hoisted_3 = { class: \"game-log__timestamp\" }\nconst _hoisted_4 = { class: \"game-log__message\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"game-log__empty\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"GameLog\", -1)),\n    _cache[1] || (_cache[1] = _createElementVNode(\"h3\", { class: \"game-log__title\" }, \"Journey Log\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.gameLog, (entry, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: _normalizeClass([\"game-log__entry\", { 'game-log__entry--highlight': entry.highlight }])\n        }, [\n          _createElementVNode(\"span\", _hoisted_3, _toDisplayString(_ctx.formatTimestamp(entry.timestamp)), 1),\n          _createElementVNode(\"span\", _hoisted_4, _toDisplayString(entry.message), 1)\n        ], 2))\n      }), 128)),\n      (_ctx.gameLog.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" Your journey has just begun. Events will be recorded here. \"))\n        : _createCommentVNode(\"\", true)\n    ], 512)\n  ]))\n}","<template>\n  <div class=\"game-log\" style=\"border: 2px solid lightblue; position: relative;\">\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">GameLog</div>\n    <h3 class=\"game-log__title\">Journey Log</h3>\n    <div class=\"game-log__entries\" ref=\"logContainer\">\n      <div \n        v-for=\"(entry, index) in gameLog\" \n        :key=\"index\" \n        class=\"game-log__entry\"\n        :class=\"{ 'game-log__entry--highlight': entry.highlight }\"\n      >\n        <span class=\"game-log__timestamp\">{{ formatTimestamp(entry.timestamp) }}</span>\n        <span class=\"game-log__message\">{{ entry.message }}</span>\n      </div>\n      <div v-if=\"gameLog.length === 0\" class=\"game-log__empty\">\n        Your journey has just begun. Events will be recorded here.\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, watch, nextTick } from 'vue';\nimport { useGameStore } from '@/stores';\n\nexport default defineComponent({\n  name: 'GameLog',\n  setup() {\n    const gameStore = useGameStore();\n    const logContainer = ref<HTMLElement | null>(null);\n    \n    const gameLog = computed(() => {\n      return gameStore.gameLog;\n    });\n    \n    const formatTimestamp = (timestamp: number) => {\n      const date = new Date(timestamp);\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      const seconds = date.getSeconds().toString().padStart(2, '0');\n      \n      return `${hours}:${minutes}:${seconds}`;\n    };\n    \n    // Auto-scroll to the bottom when new log entries are added\n    watch(() => gameLog.value.length, () => {\n      nextTick(() => {\n        if (logContainer.value) {\n          logContainer.value.scrollTop = logContainer.value.scrollHeight;\n        }\n      });\n    });\n    \n    return {\n      gameLog,\n      logContainer,\n      formatTimestamp\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.game-log {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: $border-radius-md;\n  background-color: rgba(0, 0, 0, 0.02);\n  padding: $spacing-md;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  \n  &__title {\n    margin-top: 0;\n    margin-bottom: $spacing-md;\n    padding-bottom: $spacing-sm;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  }\n  \n  &__entries {\n    flex-grow: 1;\n    overflow-y: auto;\n    font-size: $font-size-sm;\n    line-height: 1.4;\n  }\n  \n  &__entry {\n    margin-bottom: $spacing-xs;\n    padding: $spacing-xs;\n    border-radius: $border-radius-sm;\n    \n    &:hover {\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n    \n    &--highlight {\n      background-color: rgba($accent-color, 0.1);\n      border-left: 3px solid $accent-color;\n      padding-left: $spacing-sm;\n    }\n  }\n  \n  &__timestamp {\n    color: rgba($dark-color, 0.6);\n    margin-right: $spacing-sm;\n    font-family: monospace;\n  }\n  \n  &__message {\n    color: $dark-color;\n  }\n  \n  &__empty {\n    color: rgba($dark-color, 0.6);\n    font-style: italic;\n    text-align: center;\n    margin-top: $spacing-lg;\n  }\n}\n</style>\n","import { render } from \"./GameLog.vue?vue&type=template&id=5a1c79ec&scoped=true&ts=true\"\nimport script from \"./GameLog.vue?vue&type=script&lang=ts\"\nexport * from \"./GameLog.vue?vue&type=script&lang=ts\"\n\nimport \"./GameLog.vue?vue&type=style&index=0&id=5a1c79ec&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5a1c79ec\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"game-map\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = { class: \"game-map__content\" }\nconst _hoisted_3 = { class: \"map-container\" }\nconst _hoisted_4 = { class: \"map-grid\" }\nconst _hoisted_5 = { class: \"location-marker\" }\nconst _hoisted_6 = { class: \"location-name\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[1] || (_cache[1] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"GameMap\", -1)),\n    _cache[2] || (_cache[2] = _createElementVNode(\"h3\", { class: \"game-map__title\" }, \"Journey Map\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.journeyLocations, (location, index) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: index,\n              class: _normalizeClass([\"map-location\", { \n              'map-location--active': index === _ctx.currentLocationIndex,\n              'map-location--visited': index < _ctx.currentLocationIndex\n            }])\n            }, [\n              _createElementVNode(\"div\", _hoisted_5, _toDisplayString(index + 1), 1),\n              _createElementVNode(\"div\", _hoisted_6, _toDisplayString(location.name), 1)\n            ], 2))\n          }), 128))\n        ]),\n        _cache[0] || (_cache[0] = _createElementVNode(\"div\", { class: \"map-path\" }, null, -1))\n      ])\n    ])\n  ]))\n}","<template>\n  <div class=\"game-map\" style=\"border: 2px solid lightblue; position: relative;\">\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">GameMap</div>\n    <h3 class=\"game-map__title\">Journey Map</h3>\n    <div class=\"game-map__content\">\n      <div class=\"map-container\">\n        <div class=\"map-grid\">\n          <div \n            v-for=\"(location, index) in journeyLocations\" \n            :key=\"index\"\n            class=\"map-location\"\n            :class=\"{ \n              'map-location--active': index === currentLocationIndex,\n              'map-location--visited': index < currentLocationIndex\n            }\"\n          >\n            <div class=\"location-marker\">{{ index + 1 }}</div>\n            <div class=\"location-name\">{{ location.name }}</div>\n          </div>\n        </div>\n        <div class=\"map-path\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed } from 'vue';\nimport { useGameStore } from '@/stores/gameStore';\n\nexport default defineComponent({\n  name: 'GameMap',\n  \n  setup() {\n    const gameStore = useGameStore();\n    \n    const journeyLocations = ref([\n      { name: 'Forest Edge', type: 'forest' },\n      { name: 'River Crossing', type: 'river' },\n      { name: 'Mountain Pass', type: 'mountain' },\n      { name: 'Ancient Ruins', type: 'ruins' },\n      { name: 'Valley Settlement', type: 'settlement' }\n    ]);\n    \n    const currentLocationIndex = computed(() => {\n      return gameStore.journeyProgress || 0;\n    });\n    \n    return {\n      journeyLocations,\n      currentLocationIndex\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n@import '@/assets/scss/variables';\n\n.game-map {\n  width: 100%;\n  margin-bottom: $spacing-lg;\n  \n  &__title {\n    margin-bottom: $spacing-md;\n    text-align: center;\n  }\n  \n  &__content {\n    background-color: rgba($light-color, 0.9);\n    border-radius: $border-radius-md;\n    padding: $spacing-md;\n    box-shadow: 0 2px 4px rgba($dark-color, 0.2);\n  }\n}\n\n.map-container {\n  position: relative;\n  min-height: 200px;\n}\n\n.map-grid {\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n  z-index: 2;\n}\n\n.map-path {\n  position: absolute;\n  top: 50%;\n  left: 0;\n  right: 0;\n  height: 4px;\n  background-color: $border-color;\n  z-index: 1;\n  transform: translateY(-50%);\n}\n\n.map-location {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  \n  .location-marker {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    background-color: $light-color;\n    border: 2px solid $border-color;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: $spacing-xs;\n    font-weight: bold;\n    z-index: 2;\n  }\n  \n  .location-name {\n    font-size: $font-size-sm;\n    text-align: center;\n    max-width: 100px;\n  }\n  \n  &--active {\n    .location-marker {\n      background-color: $primary-color;\n      color: $light-color;\n      border-color: darken($primary-color, 10%);\n    }\n    \n    .location-name {\n      font-weight: bold;\n    }\n  }\n  \n  &--visited {\n    .location-marker {\n      background-color: $success-color;\n      color: $light-color;\n      border-color: darken($success-color, 10%);\n    }\n  }\n}\n</style>\n","import { render } from \"./GameMap.vue?vue&type=template&id=11ad1a66&scoped=true&ts=true\"\nimport script from \"./GameMap.vue?vue&type=script&lang=ts\"\nexport * from \"./GameMap.vue?vue&type=script&lang=ts\"\n\nimport \"./GameMap.vue?vue&type=style&index=0&id=11ad1a66&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-11ad1a66\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createVNode as _createVNode, unref as _unref, withCtx as _withCtx, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"game-board\",\n  style: {\"border\":\"2px solid lightblue\",\"position\":\"relative\"}\n}\nconst _hoisted_2 = { class: \"game-header\" }\nconst _hoisted_3 = { class: \"game-content\" }\nconst _hoisted_4 = { class: \"season-section\" }\nconst _hoisted_5 = { class: \"season-card-container\" }\nconst _hoisted_6 = { class: \"character-section\" }\nconst _hoisted_7 = { class: \"character-card-container\" }\nconst _hoisted_8 = { key: 0 }\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"landscape-section\"\n}\nconst _hoisted_11 = { class: \"landscape-card-container\" }\nconst _hoisted_12 = { key: 0 }\nconst _hoisted_13 = { class: \"phase-content\" }\nconst _hoisted_14 = { key: 0 }\nconst _hoisted_15 = { class: \"phase-description\" }\nconst _hoisted_16 = { key: 1 }\nconst _hoisted_17 = { class: \"challenge-card-container\" }\nconst _hoisted_18 = { key: 0 }\nconst _hoisted_19 = { key: 0 }\nconst _hoisted_20 = { key: 1 }\nconst _hoisted_21 = { key: 2 }\nconst _hoisted_22 = { class: \"challenge-details mt-4\" }\nconst _hoisted_23 = { key: 2 }\nconst _hoisted_24 = { key: 3 }\nconst _hoisted_25 = { class: \"resource-actions mt-4\" }\nconst _hoisted_26 = [\"disabled\"]\nconst _hoisted_27 = {\n  key: 0,\n  class: \"resource-warning mt-2\"\n}\nconst _hoisted_28 = { key: 4 }\nconst _hoisted_29 = { key: 5 }\nconst _hoisted_30 = { key: 0 }\nconst _hoisted_31 = { key: 1 }\nconst _hoisted_32 = { key: 6 }\nconst _hoisted_33 = { class: \"journey-actions mt-4\" }\nconst _hoisted_34 = { key: 7 }\nconst _hoisted_35 = { class: \"season-assessment-content\" }\nconst _hoisted_36 = { class: \"season-actions mt-4\" }\nconst _hoisted_37 = { class: \"game-log\" }\n\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useGameStore } from '@/stores/gameStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport { CardType, ChallengeType } from '@/models/enums/cardTypes';\nimport CompanionManagement from '@/components/game/CompanionManagement.vue';\nimport AnimalCompanionSelection from '@/components/game/AnimalCompanionSelection.vue';\nimport PlayerDashboard from '@/components/game/PlayerDashboard.vue';\nimport CraftingStation from '@/components/game/CraftingStation.vue';\nimport GameLog from '@/components/game/GameLog.vue';\nimport GameCard from '@/components/core/GameCard.vue';\nimport GameMap from '@/components/game/GameMap.vue';\nimport { CraftingService } from '@/services/craftingService';\nimport type { ResourceCard } from '@/models/types/cards';\nimport type { LandscapeCard } from '@/models/types/cards';\n\n// Interface for challenge result\ninterface ChallengeResult {\n  success: boolean;\n  partialSuccess?: boolean;\n  partialSuccessExperience?: number;\n  partialSuccessSetback?: string;\n  message: string;\n  damage?: number;\n  rewards?: any;\n}\n\n// Initialize router and stores\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'GameBoardView',\n  setup(__props) {\n\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\n\n// Reactive references\nconst lastChallengeResult = ref<ChallengeResult | null>(null);\nconst selectedCompanion = ref<string | null>(null);\nconst craftingService = ref<CraftingService | null>(null);\n\n// Initialize services after component is mounted\nonMounted(() => {\n  // Make sure the CraftingService is initialized correctly\n  try {\n    craftingService.value = new CraftingService();\n    console.log('CraftingService initialized successfully');\n  } catch (error) {\n    console.error('Error initializing CraftingService:', error);\n  }\n});\n\n// Game state\nconst currentLandscape = computed<LandscapeCard | null>(() => {\n  return gameStore.currentLandscape;\n});\n\nconst currentCharacter = computed(() => {\n  if (!playerStore.characterId) return null;\n  return cardStore.characters.find(char => char.id === playerStore.characterId);\n});\n\n// Computed properties\nconst currentChallenge = computed(() => {\n  if (!gameStore.currentChallenge) return null;\n  return cardStore.getChallengeById(gameStore.currentChallenge);\n});\n\n// State for challenge resolution\n\n// Companion selection for ANIMAL_COMPANION phase\n\nconst selectCompanion = (companionId: string) => {\n  selectedCompanion.value = companionId;\n};\n\nconst clearSelectedCompanion = () => {\n  selectedCompanion.value = null;\n};\n\n// Check if current location is a healing location\nconst isHealingLocation = computed(() => {\n  if (!currentLandscape.value) return false;\n  return ['Sacred Oak Grove', 'Druid\\'s Sanctuary', 'Moonlit Loch'].includes(currentLandscape.value.name);\n});\n\n// Crafting computed properties\nconst craftableItems = computed(() => {\n  if (!playerStore.resources.length) return [];\n  \n  // Get list of craftable items based on player's resources\n  const craftableItemIds = playerStore.getCraftableItems();\n  \n  // Get full item objects for display\n  return craftableItemIds\n    .map(id => cardStore.getCraftedItemById(id))\n    .filter(item => item !== undefined);\n});\n\nconst currentLandscapeCraftingBonus = computed(() => {\n  if (!currentLandscape.value) return null;\n  \n  // Check if landscape has crafting bonuses\n  const landscape = currentLandscape.value;\n  \n  // Special crafting locations from game rules\n  if (landscape.name === 'Iron Forge Dell') return 1;\n  if (landscape.name === 'Sacred Oak Grove') return 1;\n  if (landscape.name === 'Druid\\'s Sanctuary') return 1;\n  if (landscape.name === 'Moonlit Loch') return 1;\n  \n  return null;\n});\n\n// Game actions\nconst resolveChallenge = () => {\n  if (!currentChallenge.value || !gameStore.currentChallenge) {\n    gameStore.addToGameLog(\"No active challenge to resolve.\", true);\n    return;\n  }\n  \n  console.log('Resolving challenge:', currentChallenge.value.name);\n  \n  // Calculate challenge difficulty including threat level\n  const baseDifficulty = currentChallenge.value.difficulty || 5;\n  const threatModifier = gameStore.threatLevel;\n  const seasonModifier = 0; // TODO: Add seasonal modifiers\n  const totalDifficulty = baseDifficulty + threatModifier + seasonModifier;\n  \n  // Calculate player's bonus\n  let playerBonus = 0;\n  \n  // Add bonuses from character\n  if (currentCharacter.value?.specialAbility) {\n    // Apply specific character bonuses if applicable\n    playerBonus += 1;\n  }\n  \n  // Add bonuses from animal companions\n  const animalBonus = playerStore.animalCompanions.length > 0 ? 1 : 0;\n  playerBonus += animalBonus;\n  \n  // Add bonuses from crafted items\n  const itemBonus = playerStore.craftedItems.length > 0 ? 1 : 0;\n  playerBonus += itemBonus;\n\n  // Helper function to format season names\n  const formatSeason = (season: Season): string => {\n    if (!season) return 'Unknown';\n    \n    // Convert enum value to readable format (e.g., SPRING to Spring)\n    const seasonName = season.toString();\n    return seasonName.charAt(0) + seasonName.slice(1).toLowerCase();\n  };\n\n  // Simulate rolling the 8-sided die\n  const dieRoll = Math.floor(Math.random() * 8) + 1;\n  const totalRoll = dieRoll + playerBonus;\n  \n  let success = false;\n  let partialSuccess = false;\n  let damage = 0;\n  \n  // Natural 8 always succeeds\n  if (dieRoll === 8) {\n    success = true;\n    gameStore.addToGameLog(\"Natural 8! Automatic success regardless of modifiers.\", true);\n  } else {\n    // Check for full success\n    success = totalRoll >= totalDifficulty;\n    \n    // Check for partial success (exactly one point below difficulty)\n    partialSuccess = !success && totalRoll === totalDifficulty - 1;\n  }\n  \n  if (success) {\n    // Handle success\n    lastChallengeResult.value = {\n      success: true,\n      message: `You successfully resolved the challenge! Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`\n    };\n    \n    gameStore.addToGameLog(`Success! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}.`, true);\n    \n    // Award experience\n    playerStore.gainExperience(1);\n    gameStore.addToGameLog(\"You gained 1 experience point!\", true);\n    \n    // Award resources (2 for full success)\n    if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n      for (let i = 0; i < 2 && !playerStore.isResourceCapacityReached; i++) {\n        const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n        const resourceId = currentLandscape.value.availableResources[randomIndex];\n        \n        const addResult = playerStore.addResource(resourceId);\n        if (addResult) {\n          const resource = cardStore.getResourceById(resourceId);\n          if (resource) {\n            gameStore.addToGameLog(`You gathered ${resource.name} as a reward.`, true);\n          }\n        }\n      }\n    }\n    \n    // Clear the current challenge\n    gameStore.setCurrentChallenge(null);\n  } else if (partialSuccess) {\n    // Handle partial success\n    lastChallengeResult.value = {\n      success: false,\n      partialSuccess: true,\n      message: `You partially resolved the challenge. Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`\n    };\n    \n    gameStore.addToGameLog(`Partial success! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll}, just one point below difficulty ${totalDifficulty}.`, true);\n    \n    // Award experience (half for partial success)\n    if (Math.random() < 0.5) {\n      playerStore.gainExperience(1);\n      gameStore.addToGameLog(\"You gained 1 experience point for your effort!\", true);\n    }\n    \n    // Award 1 resource for partial success\n    if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n      const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n      const resourceId = currentLandscape.value.availableResources[randomIndex];\n      \n      const addResult = playerStore.addResource(resourceId);\n      if (addResult) {\n        const resource = cardStore.getResourceById(resourceId);\n        if (resource) {\n          gameStore.addToGameLog(`You gathered ${resource.name} as a partial reward.`, true);\n        }\n      }\n    }\n    \n    // Apply a minor setback based on challenge type\n    if (currentChallenge.value) {\n      const challengeType = currentChallenge.value.type;\n      let setbackMessage = \"\";\n      \n      switch (challengeType) {\n        case ChallengeType.STRENGTH:\n        case ChallengeType.AGILITY:\n          // Physical challenges\n          damage = 1;\n          playerStore.loseHealth(damage);\n          setbackMessage = `You suffer a minor injury. You lost ${damage} health point.`;\n          break;\n        case ChallengeType.WISDOM:\n          // Mental challenges\n          gameStore.addThreatTokens(1);\n          setbackMessage = \"Your confidence wavers. You gained 1 Threat token.\";\n          break;\n        case ChallengeType.DIPLOMACY:\n          // Social challenges\n          // Temporarily lose access to one random resource type\n          if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n            const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n            const resourceId = currentLandscape.value.availableResources[randomIndex];\n            const resource = cardStore.getResourceById(resourceId);\n            if (resource) {\n              gameStore.addTempEffect(`resource_block_${resourceId}`, \"Resource Unavailable\", `Cannot gather ${resource.name}`, 1, 1);\n              setbackMessage = `The local community withholds ${resource.name} from you for now.`;\n            }\n          }\n          break;\n        case ChallengeType.SURVIVAL:\n          // Survival/spiritual challenges\n          // Animal companions become wary\n          if (playerStore.animalCompanions.length > 0) {\n            const companionId = playerStore.animalCompanions[0];\n            // Mark companion as wary (will be implemented in Phase 4)\n            setbackMessage = \"Your animal companion becomes wary of this place.\";\n          } else {\n            gameStore.addThreatTokens(1);\n            setbackMessage = \"The spiritual imbalance increases. You gained 1 Threat token.\";\n          }\n          break;\n        default:\n          damage = 1;\n          playerStore.loseHealth(damage);\n          setbackMessage = `You encounter an unexpected setback. You lost ${damage} health point.`;\n      }\n      \n      gameStore.addToGameLog(`Setback: ${setbackMessage}`, true);\n    }\n    \n    // Clear the current challenge\n    gameStore.setCurrentChallenge(null);\n  } else {\n    // Handle failure\n    damage = 1; // Basic damage from failing challenge\n    \n    lastChallengeResult.value = {\n      success: false,\n      message: `You failed to resolve the challenge. Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`,\n      damage\n    };\n    \n    gameStore.addToGameLog(`Failure! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}.`, true);\n    \n    // Apply consequences - lose health\n    playerStore.loseHealth(damage);\n    gameStore.addToGameLog(`You lost ${damage} health point${damage > 1 ? 's' : ''}.`, true);\n    \n    // Check if player is still alive\n    if (playerStore.health <= 0) {\n      gameStore.addToGameLog(\"Your journey has come to an end...\", true);\n      endJourney();\n      return;\n    }\n  }\n  \n  // Move to the Challenge Resolution phase\n  gameStore.setPhase(GamePhase.CHALLENGE_RESOLUTION);\n};\n\nconst avoidChallenge = () => {\n  // It costs 1 health to avoid a challenge\n  playerStore.loseHealth(1);\n  gameStore.addToGameLog(\"You chose to avoid the challenge, losing 1 health in the process.\", true);\n  \n  // Skip directly to Resource Management\n  gameStore.setPhase(GamePhase.RESOURCE_MANAGEMENT);\n};\n\nconst getChallengeDifficulty = () => {\n  if (!currentChallenge.value) return '?';\n  \n  const baseDifficulty = currentChallenge.value.difficulty || 5;\n  const threatModifier = gameStore.threatLevel;\n  const seasonModifier = 0; // TODO: Add seasonal modifiers\n  const totalDifficulty = baseDifficulty + threatModifier + seasonModifier;\n  \n  return `${totalDifficulty} (Base: ${baseDifficulty} + Threat: ${threatModifier} + Season: ${seasonModifier})`;\n};\n\nconst handleThreatCheck = () => {\n  // Use the threat level check handler in gameStore\n  gameStore.handleThreatLevelCheck();\n};\n\nconst gatherResources = () => {\n  if (!currentLandscape.value || playerStore.isResourceCapacityReached) {\n    return;\n  }\n  \n  // Determine the number of resources the player can gather\n  let resourcesToGather = 1;\n  \n  // Add seasonal bonuses\n  if (gameStore.currentSeason === Season.LUGHNASADH) {\n    resourcesToGather += 1; // Lughnasadh gives +1 resource\n    gameStore.addToGameLog(\"The harvest season of Lughnasadh allows you to gather an extra resource.\");\n  }\n  \n  // Gather random resources available from the landscape\n  if (currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n    for (let i = 0; i < resourcesToGather && !playerStore.isResourceCapacityReached; i++) {\n      const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n      const resourceId = currentLandscape.value.availableResources[randomIndex];\n      \n      const addResult = playerStore.addResource(resourceId);\n      if (addResult) {\n        const resource = cardStore.getResourceById(resourceId);\n        if (resource) {\n          gameStore.addToGameLog(`You gathered ${resource.name}.`, true);\n        }\n      }\n    }\n  } else {\n    gameStore.addToGameLog(\"There are no resources to gather at this location.\", true);\n  }\n  \n  // Advance to the next phase\n  gameStore.advancePhase();\n};\n\nconst getResourceName = (resourceId: string) => {\n  const resource = cardStore.getResourceById(resourceId);\n  return resource ? resource.name : 'Unknown Resource';\n};\n\nconst getRequiredResourcesText = (resources: string[]): string => {\n  if (!resources || !resources.length) return 'None';\n  return resources.map(id => getResourceName(id)).join(', ');\n};\n\nconst canCraftItem = (itemId: string) => {\n  if (!craftingService.value) return false;\n  return craftingService.value.canCraftItem(itemId);\n};\n\nconst craftItem = (itemId: string) => {\n  if (!craftingService.value) return;\n  const result = craftingService.value.craftItem(itemId);\n  if (result) {\n    gameStore.addToGameLog(`Successfully crafted an item!`, true);\n    // If we want to add a virtual die roll for crafting difficulty:\n    const dieRoll = Math.floor(Math.random() * 8) + 1;\n    gameStore.addToGameLog(`Rolled a ${dieRoll} for crafting check`, true);\n    \n    // Get crafted item details\n    const item = cardStore.getCraftedItemById(itemId);\n    if (item) {\n      gameStore.addToGameLog(`You now have a ${item.name} (${item.ability})`, true);\n      gameStore.addToGameLog(`Beware: ${item.drawback}`, true);\n    }\n  }\n};\n\nconst performHealing = () => {\n  let healAmount = 1; // Base healing\n  \n  // Add seasonal bonuses\n  if (gameStore.currentSeason === Season.IMBOLC) {\n    healAmount += 1; // Additional healing during Imbolc\n  }\n  if (gameStore.currentSeason === Season.LUGHNASADH) {\n    healAmount *= 2; // Double healing during Lughnasadh\n  }\n  \n  // Add location bonus\n  if (isHealingLocation.value) {\n    healAmount += 1; // Additional healing at special locations\n  }\n  \n  // Apply healing\n  playerStore.heal(healAmount);\n  gameStore.addToGameLog(`You rest and recover ${healAmount} health.`, true);\n  \n  // Advance to next phase\n  gameStore.advancePhase();\n};\n\n// Function to advance from Animal Companion phase\nconst advancePhase = () => {\n  // For the Animal Companion phase, we need to handle the progression\n  if (gameStore.currentPhase === GamePhase.ANIMAL_COMPANION) {\n    // If we have a selected companion, clear it first\n    if (selectedCompanion.value) {\n      clearSelectedCompanion();\n    }\n    \n    // Generate a new landscape if needed and advance the game phase\n    const cardStore = useCardStore();\n    const availableLandscapes = cardStore.landscapes.filter(l => \n      !gameStore.visitedLandscapes.includes(l.id)\n    );\n    \n    if (availableLandscapes.length > 0) {\n      // Pick a random landscape from the available ones\n      const randomIndex = Math.floor(Math.random() * availableLandscapes.length);\n      const newLandscape = availableLandscapes[randomIndex];\n      \n      // Update the current landscape\n      gameStore.setCurrentLandscape(newLandscape.id);\n      // Add to visited landscapes\n      gameStore.addVisitedLandscape(newLandscape.id);\n    } else {\n      // If no more landscapes, we've completed the journey\n      gameStore.addToGameLog('You have reached the end of your journey path.', true);\n      gameStore.completeJourney(true);\n    }\n  }\n  \n  // Advance to the next phase\n  gameStore.advancePhase();\n};\n\n// End the journey and return to character selection\nconst endJourney = () => {\n  console.log('Ending journey...');\n  playerStore.resetPlayer();\n  gameStore.resetGame();\n  router.push('/');\n};\n\n// Helper functions\nconst formatSeason = (season: Season): string => {\n  if (!season) return 'Unknown';\n  \n  // Convert enum value to readable format (e.g., SPRING to Spring)\n  const seasonName = season.toString();\n  return seasonName.charAt(0) + seasonName.slice(1).toLowerCase();\n};\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[21] || (_cache[21] = _createElementVNode(\"div\", { style: {\"position\":\"absolute\",\"top\":\"-20px\",\"left\":\"0\",\"background-color\":\"lightblue\",\"padding\":\"2px 6px\",\"font-size\":\"12px\",\"color\":\"#333\",\"z-index\":\"1070\"} }, \"GameBoardView\", -1)),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(PlayerDashboard)\n    ]),\n    _createElementVNode(\"main\", _hoisted_3, [\n      _createElementVNode(\"section\", _hoisted_4, [\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createVNode(GameCard, {\n            title: formatSeason(_unref(gameStore).currentSeason),\n            subtitle: \"Current Season\",\n            cardType: _unref(CardType).SEASON\n          }, {\n            default: _withCtx(() => _cache[4] || (_cache[4] = [\n              _createElementVNode(\"p\", null, \"The seasons affect which resources are available and the effectiveness of your animal companions.\", -1)\n            ])),\n            _: 1\n          }, 8, [\"title\", \"cardType\"])\n        ])\n      ]),\n      _createElementVNode(\"section\", _hoisted_6, [\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createVNode(GameCard, {\n            title: currentCharacter.value ? currentCharacter.value.name : 'No Character Selected',\n            subtitle: currentCharacter.value ? currentCharacter.value.archetype : '',\n            cardType: _unref(CardType).CHARACTER\n          }, {\n            default: _withCtx(() => [\n              (currentCharacter.value)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n                    _createElementVNode(\"p\", null, _toDisplayString(currentCharacter.value.description), 1),\n                    (currentCharacter.value.specialAbility)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                          _cache[5] || (_cache[5] = _createElementVNode(\"h4\", null, \"Special Ability:\", -1)),\n                          _createElementVNode(\"p\", null, _toDisplayString(currentCharacter.value.specialAbility.name) + \": \" + _toDisplayString(currentCharacter.value.specialAbility.description), 1)\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _: 1\n          }, 8, [\"title\", \"subtitle\", \"cardType\"])\n        ])\n      ]),\n      (currentLandscape.value)\n        ? (_openBlock(), _createElementBlock(\"section\", _hoisted_10, [\n            _createElementVNode(\"div\", _hoisted_11, [\n              _createVNode(GameCard, {\n                title: currentLandscape.value.name,\n                subtitle: currentLandscape.value.description,\n                cardType: _unref(CardType).LANDSCAPE\n              }, {\n                default: _withCtx(() => [\n                  (currentLandscape.value.availableResources && currentLandscape.value.availableResources.length)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                        _cache[6] || (_cache[6] = _createElementVNode(\"h4\", null, \"Available Resources:\", -1)),\n                        _createElementVNode(\"ul\", null, [\n                          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(currentLandscape.value.availableResources, (resourceId) => {\n                            return (_openBlock(), _createElementBlock(\"li\", { key: resourceId }, _toDisplayString(getResourceName(resourceId)), 1))\n                          }), 128))\n                        ])\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                _: 1\n              }, 8, [\"title\", \"subtitle\", \"cardType\"])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"section\", _hoisted_13, [\n        (_unref(gameStore).currentPhase === _unref(GamePhase).EXPLORATION)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n              _cache[7] || (_cache[7] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"EXPLORATION\", -1)),\n              _createElementVNode(\"div\", _hoisted_15, [\n                _createElementVNode(\"p\", null, \"You are exploring \" + _toDisplayString(currentLandscape.value?.name) + \". What will you discover?\", 1)\n              ]),\n              _createElementVNode(\"button\", {\n                onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(gameStore).advancePhase())),\n                class: \"btn btn--primary mt-4\"\n              }, \" Continue Exploration \")\n            ]))\n          : (_unref(gameStore).currentPhase === _unref(GamePhase).CHALLENGE && currentChallenge.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n                _cache[10] || (_cache[10] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"CHALLENGE\", -1)),\n                _createElementVNode(\"div\", _hoisted_17, [\n                  _createVNode(GameCard, {\n                    title: currentChallenge.value.name,\n                    subtitle: currentChallenge.value.description,\n                    cardType: currentChallenge.value.type\n                  }, {\n                    default: _withCtx(() => [\n                      _createElementVNode(\"div\", null, [\n                        _createElementVNode(\"p\", null, [\n                          _cache[8] || (_cache[8] = _createElementVNode(\"strong\", null, \"Difficulty:\", -1)),\n                          _createTextVNode(\" \" + _toDisplayString(currentChallenge.value.difficulty), 1)\n                        ]),\n                        (currentChallenge.value.rewards)\n                          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                              _cache[9] || (_cache[9] = _createElementVNode(\"h4\", null, \"Rewards:\", -1)),\n                              _createElementVNode(\"ul\", null, [\n                                (currentChallenge.value.rewards.resources)\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_19, \"Resources: \" + _toDisplayString(currentChallenge.value.rewards.resources.join(', ')), 1))\n                                  : _createCommentVNode(\"\", true),\n                                (currentChallenge.value.rewards.experience)\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_20, \"Experience: \" + _toDisplayString(currentChallenge.value.rewards.experience), 1))\n                                  : _createCommentVNode(\"\", true),\n                                (currentChallenge.value.rewards.knowledge)\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_21, \"Knowledge: \" + _toDisplayString(currentChallenge.value.rewards.knowledge), 1))\n                                  : _createCommentVNode(\"\", true)\n                              ])\n                            ]))\n                          : _createCommentVNode(\"\", true)\n                      ])\n                    ]),\n                    _: 1\n                  }, 8, [\"title\", \"subtitle\", \"cardType\"])\n                ]),\n                _createElementVNode(\"div\", _hoisted_22, [\n                  _createElementVNode(\"p\", null, \"Difficulty: \" + _toDisplayString(getChallengeDifficulty()), 1)\n                ]),\n                _createElementVNode(\"div\", { class: \"challenge-actions mt-4\" }, [\n                  _createElementVNode(\"button\", {\n                    onClick: resolveChallenge,\n                    class: \"btn btn--primary\"\n                  }, \" Face Challenge \"),\n                  _createElementVNode(\"button\", {\n                    onClick: avoidChallenge,\n                    class: \"btn btn--secondary ml-2\"\n                  }, \" Avoid (Lose 1 Health) \")\n                ])\n              ]))\n            : (_unref(gameStore).currentPhase === _unref(GamePhase).CHALLENGE_RESOLUTION && lastChallengeResult.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [\n                  _cache[11] || (_cache[11] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"CHALLENGE OUTCOME\", -1)),\n                  _createElementVNode(\"div\", {\n                    class: _normalizeClass([\"challenge-result\", { \n            'success': lastChallengeResult.value.success, \n            'partial-success': lastChallengeResult.value.partialSuccess,\n            'failure': !lastChallengeResult.value.success && !lastChallengeResult.value.partialSuccess\n          }])\n                  }, [\n                    _createElementVNode(\"h3\", null, _toDisplayString(lastChallengeResult.value.success ? 'Success!' : lastChallengeResult.value.partialSuccess ? 'Partial Success' : 'Failure'), 1),\n                    _createElementVNode(\"p\", null, _toDisplayString(lastChallengeResult.value.message), 1)\n                  ], 2),\n                  _createElementVNode(\"button\", {\n                    onClick: _cache[1] || (_cache[1] = ($event: any) => (_unref(gameStore).advancePhase())),\n                    class: \"btn btn--primary mt-4\"\n                  }, \" Continue \")\n                ]))\n              : (_unref(gameStore).currentPhase === _unref(GamePhase).RESOURCE_MANAGEMENT)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [\n                    _cache[13] || (_cache[13] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"RESOURCE MANAGEMENT\", -1)),\n                    _createElementVNode(\"div\", _hoisted_25, [\n                      _createElementVNode(\"button\", {\n                        onClick: gatherResources,\n                        class: \"btn btn--primary\",\n                        disabled: _unref(playerStore).isResourceCapacityReached\n                      }, \" Gather Resources \", 8, _hoisted_26),\n                      _createElementVNode(\"button\", {\n                        onClick: performHealing,\n                        class: \"btn btn--secondary ml-2\"\n                      }, \" Rest and Heal \")\n                    ]),\n                    (_unref(playerStore).isResourceCapacityReached)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, _cache[12] || (_cache[12] = [\n                          _createElementVNode(\"p\", null, \"You've reached your resource capacity!\", -1)\n                        ])))\n                      : _createCommentVNode(\"\", true)\n                  ]))\n                : (_unref(gameStore).currentPhase === _unref(GamePhase).CRAFTING)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [\n                      _cache[14] || (_cache[14] = _createElementVNode(\"h2\", {\n                        \"data-testid\": \"craftingHeader\",\n                        \"data-phase\": \"crafting\",\n                        class: \"phase-title\"\n                      }, \"CRAFTING\", -1)),\n                      _createVNode(CraftingStation)\n                    ]))\n                  : (_unref(gameStore).currentPhase === _unref(GamePhase).ANIMAL_COMPANION)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [\n                        _cache[15] || (_cache[15] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"ANIMAL COMPANION\", -1)),\n                        (_unref(playerStore).animalCompanions.length === 0)\n                          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [\n                              _createVNode(AnimalCompanionSelection, { onSelectCompanion: selectCompanion }),\n                              _createElementVNode(\"div\", { class: \"action-buttons mt-4\" }, [\n                                _createElementVNode(\"button\", {\n                                  class: \"btn btn--secondary\",\n                                  onClick: advancePhase\n                                }, \" Skip Animal Companion \")\n                              ])\n                            ]))\n                          : (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [\n                              _createVNode(CompanionManagement),\n                              _createElementVNode(\"div\", { class: \"action-buttons mt-4\" }, [\n                                _createElementVNode(\"button\", {\n                                  class: \"btn btn--primary\",\n                                  onClick: advancePhase\n                                }, \" Continue Journey \")\n                              ])\n                            ]))\n                      ]))\n                    : (_unref(gameStore).currentPhase === _unref(GamePhase).JOURNEY)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n                          _cache[16] || (_cache[16] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"JOURNEY\", -1)),\n                          _createVNode(GameMap),\n                          _createElementVNode(\"div\", _hoisted_33, [\n                            _createElementVNode(\"button\", {\n                              onClick: _cache[2] || (_cache[2] = ($event: any) => (_unref(gameStore).advanceJourney(1))),\n                              class: \"btn btn--primary\"\n                            }, \" Journey Onwards \")\n                          ])\n                        ]))\n                      : (_unref(gameStore).currentPhase === _unref(GamePhase).SEASONAL_ASSESSMENT)\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_34, [\n                            _cache[20] || (_cache[20] = _createElementVNode(\"h2\", { class: \"phase-title\" }, \"SEASONAL ASSESSMENT\", -1)),\n                            _createElementVNode(\"div\", _hoisted_35, [\n                              _createElementVNode(\"p\", null, [\n                                _cache[17] || (_cache[17] = _createTextVNode(\"The current season is \")),\n                                _createElementVNode(\"strong\", null, _toDisplayString(formatSeason(_unref(gameStore).currentSeason)), 1),\n                                _cache[18] || (_cache[18] = _createTextVNode(\".\"))\n                              ]),\n                              _cache[19] || (_cache[19] = _createElementVNode(\"p\", null, \"Assess how the season affects your journey and resources.\", -1))\n                            ]),\n                            _createElementVNode(\"div\", _hoisted_36, [\n                              _createElementVNode(\"button\", {\n                                onClick: _cache[3] || (_cache[3] = ($event: any) => (_unref(gameStore).advancePhase())),\n                                class: \"btn btn--primary\"\n                              }, \" Continue Journey \")\n                            ])\n                          ]))\n                        : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _createElementVNode(\"aside\", _hoisted_37, [\n      _createVNode(GameLog)\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"game-board\" style=\"border: 2px solid lightblue; position: relative;\">\n    <div style=\"position: absolute; top: -20px; left: 0; background-color: lightblue; padding: 2px 6px; font-size: 12px; color: #333; z-index: 1070;\">GameBoardView</div>\n    <div class=\"game-header\">\n      <PlayerDashboard />\n    </div>\n    \n    <main class=\"game-content\">\n      <!-- Season Section -->\n      <section class=\"season-section\">\n        <div class=\"season-card-container\">\n          <GameCard\n            :title=\"formatSeason(gameStore.currentSeason)\"\n            subtitle=\"Current Season\"\n            :cardType=\"CardType.SEASON\"\n          >\n            <p>The seasons affect which resources are available and the effectiveness of your animal companions.</p>\n          </GameCard>\n        </div>\n      </section>\n\n      <!-- Character Section -->\n      <section class=\"character-section\">\n        <div class=\"character-card-container\">\n          <GameCard\n            :title=\"currentCharacter ? currentCharacter.name : 'No Character Selected'\"\n            :subtitle=\"currentCharacter ? currentCharacter.archetype : ''\"\n            :cardType=\"CardType.CHARACTER\"\n          >\n            <div v-if=\"currentCharacter\">\n              <p>{{ currentCharacter.description }}</p>\n              <div v-if=\"currentCharacter.specialAbility\">\n                <h4>Special Ability:</h4>\n                <p>{{ currentCharacter.specialAbility.name }}: {{ currentCharacter.specialAbility.description }}</p>\n              </div>\n            </div>\n          </GameCard>\n        </div>\n      </section>\n      \n      <!-- Landscape Section -->\n      <section class=\"landscape-section\" v-if=\"currentLandscape\">\n        <div class=\"landscape-card-container\">\n          <GameCard \n            :title=\"currentLandscape.name\" \n            :subtitle=\"currentLandscape.description\" \n            :cardType=\"CardType.LANDSCAPE\"\n          >\n            <div v-if=\"currentLandscape.availableResources && currentLandscape.availableResources.length\">\n              <h4>Available Resources:</h4>\n              <ul>\n                <li v-for=\"resourceId in currentLandscape.availableResources\" :key=\"resourceId\">\n                  {{ getResourceName(resourceId) }}\n                </li>\n              </ul>\n            </div>\n          </GameCard>\n        </div>\n      </section>\n      \n      <!-- Phase-specific content -->\n      <section class=\"phase-content\">\n        <!-- Exploration Phase -->\n        <div v-if=\"gameStore.currentPhase === GamePhase.EXPLORATION\">\n          <h2 class=\"phase-title\">EXPLORATION</h2>\n          <div class=\"phase-description\">\n            <p>You are exploring {{ currentLandscape?.name }}. What will you discover?</p>\n          </div>\n          \n          <button \n            @click=\"gameStore.advancePhase()\" \n            class=\"btn btn--primary mt-4\"\n          >\n            Continue Exploration\n          </button>\n        </div>\n        \n        <!-- Challenge Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.CHALLENGE && currentChallenge\">\n          <h2 class=\"phase-title\">CHALLENGE</h2>\n          <div class=\"challenge-card-container\">\n            <GameCard \n              :title=\"currentChallenge.name\" \n              :subtitle=\"currentChallenge.description\" \n              :cardType=\"currentChallenge.type\"\n            >\n              <div>\n                <p><strong>Difficulty:</strong> {{ currentChallenge.difficulty }}</p>\n                <div v-if=\"currentChallenge.rewards\">\n                  <h4>Rewards:</h4>\n                  <ul>\n                    <li v-if=\"currentChallenge.rewards.resources\">Resources: {{ currentChallenge.rewards.resources.join(', ') }}</li>\n                    <li v-if=\"currentChallenge.rewards.experience\">Experience: {{ currentChallenge.rewards.experience }}</li>\n                    <li v-if=\"currentChallenge.rewards.knowledge\">Knowledge: {{ currentChallenge.rewards.knowledge }}</li>\n                  </ul>\n                </div>\n              </div>\n            </GameCard>\n          </div>\n          \n          <div class=\"challenge-details mt-4\">\n            <p>Difficulty: {{ getChallengeDifficulty() }}</p>\n          </div>\n          \n          <div class=\"challenge-actions mt-4\">\n            <button \n              @click=\"resolveChallenge\" \n              class=\"btn btn--primary\"\n            >\n              Face Challenge\n            </button>\n            <button \n              @click=\"avoidChallenge\" \n              class=\"btn btn--secondary ml-2\"\n            >\n              Avoid (Lose 1 Health)\n            </button>\n          </div>\n        </div>\n        \n        <!-- Challenge Resolution Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.CHALLENGE_RESOLUTION && lastChallengeResult\">\n          <h2 class=\"phase-title\">CHALLENGE OUTCOME</h2>\n          \n          <div class=\"challenge-result\" :class=\"{ \n            'success': lastChallengeResult.success, \n            'partial-success': lastChallengeResult.partialSuccess,\n            'failure': !lastChallengeResult.success && !lastChallengeResult.partialSuccess\n          }\">\n            <h3>{{ lastChallengeResult.success ? 'Success!' : lastChallengeResult.partialSuccess ? 'Partial Success' : 'Failure' }}</h3>\n            <p>{{ lastChallengeResult.message }}</p>\n          </div>\n          \n          <button \n            @click=\"gameStore.advancePhase()\" \n            class=\"btn btn--primary mt-4\"\n          >\n            Continue\n          </button>\n        </div>\n        \n        <!-- Resource Management Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.RESOURCE_MANAGEMENT\">\n          <h2 class=\"phase-title\">RESOURCE MANAGEMENT</h2>\n          \n          <div class=\"resource-actions mt-4\">\n            <button \n              @click=\"gatherResources\" \n              class=\"btn btn--primary\"\n              :disabled=\"playerStore.isResourceCapacityReached\"\n            >\n              Gather Resources\n            </button>\n            \n            <button \n              @click=\"performHealing\" \n              class=\"btn btn--secondary ml-2\"\n            >\n              Rest and Heal\n            </button>\n          </div>\n          \n          <div v-if=\"playerStore.isResourceCapacityReached\" class=\"resource-warning mt-2\">\n            <p>You've reached your resource capacity!</p>\n          </div>\n        </div>\n        \n        <!-- Crafting Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.CRAFTING\">\n          <h2 data-testid=\"craftingHeader\" data-phase=\"crafting\" class=\"phase-title\">CRAFTING</h2>\n          <CraftingStation />\n        </div>\n        \n        <!-- Animal Companion Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.ANIMAL_COMPANION\">\n          <h2 class=\"phase-title\">ANIMAL COMPANION</h2>\n          \n          <div v-if=\"playerStore.animalCompanions.length === 0\">\n            <AnimalCompanionSelection\n              @select-companion=\"selectCompanion\"\n            />\n            \n            <div class=\"action-buttons mt-4\">\n              <button \n                class=\"btn btn--secondary\"\n                @click=\"advancePhase\"\n              >\n                Skip Animal Companion\n              </button>\n            </div>\n          </div>\n          \n          <div v-else>\n            <CompanionManagement />\n            \n            <div class=\"action-buttons mt-4\">\n              <button \n                class=\"btn btn--primary\"\n                @click=\"advancePhase\"\n              >\n                Continue Journey\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Journey Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.JOURNEY\">\n          <h2 class=\"phase-title\">JOURNEY</h2>\n          \n          <GameMap />\n          \n          <div class=\"journey-actions mt-4\">\n            <button \n              @click=\"gameStore.advanceJourney(1)\"\n              class=\"btn btn--primary\"\n            >\n              Journey Onwards\n            </button>\n          </div>\n        </div>\n        \n        <!-- Seasonal Assessment Phase -->\n        <div v-else-if=\"gameStore.currentPhase === GamePhase.SEASONAL_ASSESSMENT\">\n          <h2 class=\"phase-title\">SEASONAL ASSESSMENT</h2>\n          \n          <div class=\"season-assessment-content\">\n            <p>The current season is <strong>{{ formatSeason(gameStore.currentSeason) }}</strong>.</p>\n            <p>Assess how the season affects your journey and resources.</p>\n          </div>\n          \n          <div class=\"season-actions mt-4\">\n            <button \n              @click=\"gameStore.advancePhase()\" \n              class=\"btn btn--primary\"\n            >\n              Continue Journey\n            </button>\n          </div>\n        </div>\n      </section>\n    </main>\n    \n    <aside class=\"game-log\">\n      <GameLog />\n    </aside>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { usePlayerStore } from '@/stores/playerStore';\nimport { useGameStore } from '@/stores/gameStore';\nimport { useCardStore } from '@/stores/cardStore';\nimport { GamePhase } from '@/models/enums/phases';\nimport { Season } from '@/models/enums/seasons';\nimport { CardType, ChallengeType } from '@/models/enums/cardTypes';\nimport CompanionManagement from '@/components/game/CompanionManagement.vue';\nimport AnimalCompanionSelection from '@/components/game/AnimalCompanionSelection.vue';\nimport PlayerDashboard from '@/components/game/PlayerDashboard.vue';\nimport CraftingStation from '@/components/game/CraftingStation.vue';\nimport GameLog from '@/components/game/GameLog.vue';\nimport GameCard from '@/components/core/GameCard.vue';\nimport GameMap from '@/components/game/GameMap.vue';\nimport { CraftingService } from '@/services/craftingService';\nimport type { ResourceCard } from '@/models/types/cards';\nimport type { LandscapeCard } from '@/models/types/cards';\n\n// Interface for challenge result\ninterface ChallengeResult {\n  success: boolean;\n  partialSuccess?: boolean;\n  partialSuccessExperience?: number;\n  partialSuccessSetback?: string;\n  message: string;\n  damage?: number;\n  rewards?: any;\n}\n\n// Initialize router and stores\nconst router = useRouter();\nconst playerStore = usePlayerStore();\nconst gameStore = useGameStore();\nconst cardStore = useCardStore();\n\n// Reactive references\nconst lastChallengeResult = ref<ChallengeResult | null>(null);\nconst selectedCompanion = ref<string | null>(null);\nconst craftingService = ref<CraftingService | null>(null);\n\n// Initialize services after component is mounted\nonMounted(() => {\n  // Make sure the CraftingService is initialized correctly\n  try {\n    craftingService.value = new CraftingService();\n    console.log('CraftingService initialized successfully');\n  } catch (error) {\n    console.error('Error initializing CraftingService:', error);\n  }\n});\n\n// Game state\nconst currentLandscape = computed<LandscapeCard | null>(() => {\n  return gameStore.currentLandscape;\n});\n\nconst currentCharacter = computed(() => {\n  if (!playerStore.characterId) return null;\n  return cardStore.characters.find(char => char.id === playerStore.characterId);\n});\n\n// Computed properties\nconst currentChallenge = computed(() => {\n  if (!gameStore.currentChallenge) return null;\n  return cardStore.getChallengeById(gameStore.currentChallenge);\n});\n\n// State for challenge resolution\n\n// Companion selection for ANIMAL_COMPANION phase\n\nconst selectCompanion = (companionId: string) => {\n  selectedCompanion.value = companionId;\n};\n\nconst clearSelectedCompanion = () => {\n  selectedCompanion.value = null;\n};\n\n// Check if current location is a healing location\nconst isHealingLocation = computed(() => {\n  if (!currentLandscape.value) return false;\n  return ['Sacred Oak Grove', 'Druid\\'s Sanctuary', 'Moonlit Loch'].includes(currentLandscape.value.name);\n});\n\n// Crafting computed properties\nconst craftableItems = computed(() => {\n  if (!playerStore.resources.length) return [];\n  \n  // Get list of craftable items based on player's resources\n  const craftableItemIds = playerStore.getCraftableItems();\n  \n  // Get full item objects for display\n  return craftableItemIds\n    .map(id => cardStore.getCraftedItemById(id))\n    .filter(item => item !== undefined);\n});\n\nconst currentLandscapeCraftingBonus = computed(() => {\n  if (!currentLandscape.value) return null;\n  \n  // Check if landscape has crafting bonuses\n  const landscape = currentLandscape.value;\n  \n  // Special crafting locations from game rules\n  if (landscape.name === 'Iron Forge Dell') return 1;\n  if (landscape.name === 'Sacred Oak Grove') return 1;\n  if (landscape.name === 'Druid\\'s Sanctuary') return 1;\n  if (landscape.name === 'Moonlit Loch') return 1;\n  \n  return null;\n});\n\n// Game actions\nconst resolveChallenge = () => {\n  if (!currentChallenge.value || !gameStore.currentChallenge) {\n    gameStore.addToGameLog(\"No active challenge to resolve.\", true);\n    return;\n  }\n  \n  console.log('Resolving challenge:', currentChallenge.value.name);\n  \n  // Calculate challenge difficulty including threat level\n  const baseDifficulty = currentChallenge.value.difficulty || 5;\n  const threatModifier = gameStore.threatLevel;\n  const seasonModifier = 0; // TODO: Add seasonal modifiers\n  const totalDifficulty = baseDifficulty + threatModifier + seasonModifier;\n  \n  // Calculate player's bonus\n  let playerBonus = 0;\n  \n  // Add bonuses from character\n  if (currentCharacter.value?.specialAbility) {\n    // Apply specific character bonuses if applicable\n    playerBonus += 1;\n  }\n  \n  // Add bonuses from animal companions\n  const animalBonus = playerStore.animalCompanions.length > 0 ? 1 : 0;\n  playerBonus += animalBonus;\n  \n  // Add bonuses from crafted items\n  const itemBonus = playerStore.craftedItems.length > 0 ? 1 : 0;\n  playerBonus += itemBonus;\n\n  // Helper function to format season names\n  const formatSeason = (season: Season): string => {\n    if (!season) return 'Unknown';\n    \n    // Convert enum value to readable format (e.g., SPRING to Spring)\n    const seasonName = season.toString();\n    return seasonName.charAt(0) + seasonName.slice(1).toLowerCase();\n  };\n\n  // Simulate rolling the 8-sided die\n  const dieRoll = Math.floor(Math.random() * 8) + 1;\n  const totalRoll = dieRoll + playerBonus;\n  \n  let success = false;\n  let partialSuccess = false;\n  let damage = 0;\n  \n  // Natural 8 always succeeds\n  if (dieRoll === 8) {\n    success = true;\n    gameStore.addToGameLog(\"Natural 8! Automatic success regardless of modifiers.\", true);\n  } else {\n    // Check for full success\n    success = totalRoll >= totalDifficulty;\n    \n    // Check for partial success (exactly one point below difficulty)\n    partialSuccess = !success && totalRoll === totalDifficulty - 1;\n  }\n  \n  if (success) {\n    // Handle success\n    lastChallengeResult.value = {\n      success: true,\n      message: `You successfully resolved the challenge! Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`\n    };\n    \n    gameStore.addToGameLog(`Success! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}.`, true);\n    \n    // Award experience\n    playerStore.gainExperience(1);\n    gameStore.addToGameLog(\"You gained 1 experience point!\", true);\n    \n    // Award resources (2 for full success)\n    if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n      for (let i = 0; i < 2 && !playerStore.isResourceCapacityReached; i++) {\n        const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n        const resourceId = currentLandscape.value.availableResources[randomIndex];\n        \n        const addResult = playerStore.addResource(resourceId);\n        if (addResult) {\n          const resource = cardStore.getResourceById(resourceId);\n          if (resource) {\n            gameStore.addToGameLog(`You gathered ${resource.name} as a reward.`, true);\n          }\n        }\n      }\n    }\n    \n    // Clear the current challenge\n    gameStore.setCurrentChallenge(null);\n  } else if (partialSuccess) {\n    // Handle partial success\n    lastChallengeResult.value = {\n      success: false,\n      partialSuccess: true,\n      message: `You partially resolved the challenge. Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`\n    };\n    \n    gameStore.addToGameLog(`Partial success! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll}, just one point below difficulty ${totalDifficulty}.`, true);\n    \n    // Award experience (half for partial success)\n    if (Math.random() < 0.5) {\n      playerStore.gainExperience(1);\n      gameStore.addToGameLog(\"You gained 1 experience point for your effort!\", true);\n    }\n    \n    // Award 1 resource for partial success\n    if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n      const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n      const resourceId = currentLandscape.value.availableResources[randomIndex];\n      \n      const addResult = playerStore.addResource(resourceId);\n      if (addResult) {\n        const resource = cardStore.getResourceById(resourceId);\n        if (resource) {\n          gameStore.addToGameLog(`You gathered ${resource.name} as a partial reward.`, true);\n        }\n      }\n    }\n    \n    // Apply a minor setback based on challenge type\n    if (currentChallenge.value) {\n      const challengeType = currentChallenge.value.type;\n      let setbackMessage = \"\";\n      \n      switch (challengeType) {\n        case ChallengeType.STRENGTH:\n        case ChallengeType.AGILITY:\n          // Physical challenges\n          damage = 1;\n          playerStore.loseHealth(damage);\n          setbackMessage = `You suffer a minor injury. You lost ${damage} health point.`;\n          break;\n        case ChallengeType.WISDOM:\n          // Mental challenges\n          gameStore.addThreatTokens(1);\n          setbackMessage = \"Your confidence wavers. You gained 1 Threat token.\";\n          break;\n        case ChallengeType.DIPLOMACY:\n          // Social challenges\n          // Temporarily lose access to one random resource type\n          if (currentLandscape.value && currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n            const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n            const resourceId = currentLandscape.value.availableResources[randomIndex];\n            const resource = cardStore.getResourceById(resourceId);\n            if (resource) {\n              gameStore.addTempEffect(`resource_block_${resourceId}`, \"Resource Unavailable\", `Cannot gather ${resource.name}`, 1, 1);\n              setbackMessage = `The local community withholds ${resource.name} from you for now.`;\n            }\n          }\n          break;\n        case ChallengeType.SURVIVAL:\n          // Survival/spiritual challenges\n          // Animal companions become wary\n          if (playerStore.animalCompanions.length > 0) {\n            const companionId = playerStore.animalCompanions[0];\n            // Mark companion as wary (will be implemented in Phase 4)\n            setbackMessage = \"Your animal companion becomes wary of this place.\";\n          } else {\n            gameStore.addThreatTokens(1);\n            setbackMessage = \"The spiritual imbalance increases. You gained 1 Threat token.\";\n          }\n          break;\n        default:\n          damage = 1;\n          playerStore.loseHealth(damage);\n          setbackMessage = `You encounter an unexpected setback. You lost ${damage} health point.`;\n      }\n      \n      gameStore.addToGameLog(`Setback: ${setbackMessage}`, true);\n    }\n    \n    // Clear the current challenge\n    gameStore.setCurrentChallenge(null);\n  } else {\n    // Handle failure\n    damage = 1; // Basic damage from failing challenge\n    \n    lastChallengeResult.value = {\n      success: false,\n      message: `You failed to resolve the challenge. Roll: ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}`,\n      damage\n    };\n    \n    gameStore.addToGameLog(`Failure! You rolled ${dieRoll} + ${playerBonus} = ${totalRoll} vs difficulty ${totalDifficulty}.`, true);\n    \n    // Apply consequences - lose health\n    playerStore.loseHealth(damage);\n    gameStore.addToGameLog(`You lost ${damage} health point${damage > 1 ? 's' : ''}.`, true);\n    \n    // Check if player is still alive\n    if (playerStore.health <= 0) {\n      gameStore.addToGameLog(\"Your journey has come to an end...\", true);\n      endJourney();\n      return;\n    }\n  }\n  \n  // Move to the Challenge Resolution phase\n  gameStore.setPhase(GamePhase.CHALLENGE_RESOLUTION);\n};\n\nconst avoidChallenge = () => {\n  // It costs 1 health to avoid a challenge\n  playerStore.loseHealth(1);\n  gameStore.addToGameLog(\"You chose to avoid the challenge, losing 1 health in the process.\", true);\n  \n  // Skip directly to Resource Management\n  gameStore.setPhase(GamePhase.RESOURCE_MANAGEMENT);\n};\n\nconst getChallengeDifficulty = () => {\n  if (!currentChallenge.value) return '?';\n  \n  const baseDifficulty = currentChallenge.value.difficulty || 5;\n  const threatModifier = gameStore.threatLevel;\n  const seasonModifier = 0; // TODO: Add seasonal modifiers\n  const totalDifficulty = baseDifficulty + threatModifier + seasonModifier;\n  \n  return `${totalDifficulty} (Base: ${baseDifficulty} + Threat: ${threatModifier} + Season: ${seasonModifier})`;\n};\n\nconst handleThreatCheck = () => {\n  // Use the threat level check handler in gameStore\n  gameStore.handleThreatLevelCheck();\n};\n\nconst gatherResources = () => {\n  if (!currentLandscape.value || playerStore.isResourceCapacityReached) {\n    return;\n  }\n  \n  // Determine the number of resources the player can gather\n  let resourcesToGather = 1;\n  \n  // Add seasonal bonuses\n  if (gameStore.currentSeason === Season.LUGHNASADH) {\n    resourcesToGather += 1; // Lughnasadh gives +1 resource\n    gameStore.addToGameLog(\"The harvest season of Lughnasadh allows you to gather an extra resource.\");\n  }\n  \n  // Gather random resources available from the landscape\n  if (currentLandscape.value.availableResources && currentLandscape.value.availableResources.length > 0) {\n    for (let i = 0; i < resourcesToGather && !playerStore.isResourceCapacityReached; i++) {\n      const randomIndex = Math.floor(Math.random() * currentLandscape.value.availableResources.length);\n      const resourceId = currentLandscape.value.availableResources[randomIndex];\n      \n      const addResult = playerStore.addResource(resourceId);\n      if (addResult) {\n        const resource = cardStore.getResourceById(resourceId);\n        if (resource) {\n          gameStore.addToGameLog(`You gathered ${resource.name}.`, true);\n        }\n      }\n    }\n  } else {\n    gameStore.addToGameLog(\"There are no resources to gather at this location.\", true);\n  }\n  \n  // Advance to the next phase\n  gameStore.advancePhase();\n};\n\nconst getResourceName = (resourceId: string) => {\n  const resource = cardStore.getResourceById(resourceId);\n  return resource ? resource.name : 'Unknown Resource';\n};\n\nconst getRequiredResourcesText = (resources: string[]): string => {\n  if (!resources || !resources.length) return 'None';\n  return resources.map(id => getResourceName(id)).join(', ');\n};\n\nconst canCraftItem = (itemId: string) => {\n  if (!craftingService.value) return false;\n  return craftingService.value.canCraftItem(itemId);\n};\n\nconst craftItem = (itemId: string) => {\n  if (!craftingService.value) return;\n  const result = craftingService.value.craftItem(itemId);\n  if (result) {\n    gameStore.addToGameLog(`Successfully crafted an item!`, true);\n    // If we want to add a virtual die roll for crafting difficulty:\n    const dieRoll = Math.floor(Math.random() * 8) + 1;\n    gameStore.addToGameLog(`Rolled a ${dieRoll} for crafting check`, true);\n    \n    // Get crafted item details\n    const item = cardStore.getCraftedItemById(itemId);\n    if (item) {\n      gameStore.addToGameLog(`You now have a ${item.name} (${item.ability})`, true);\n      gameStore.addToGameLog(`Beware: ${item.drawback}`, true);\n    }\n  }\n};\n\nconst performHealing = () => {\n  let healAmount = 1; // Base healing\n  \n  // Add seasonal bonuses\n  if (gameStore.currentSeason === Season.IMBOLC) {\n    healAmount += 1; // Additional healing during Imbolc\n  }\n  if (gameStore.currentSeason === Season.LUGHNASADH) {\n    healAmount *= 2; // Double healing during Lughnasadh\n  }\n  \n  // Add location bonus\n  if (isHealingLocation.value) {\n    healAmount += 1; // Additional healing at special locations\n  }\n  \n  // Apply healing\n  playerStore.heal(healAmount);\n  gameStore.addToGameLog(`You rest and recover ${healAmount} health.`, true);\n  \n  // Advance to next phase\n  gameStore.advancePhase();\n};\n\n// Function to advance from Animal Companion phase\nconst advancePhase = () => {\n  // For the Animal Companion phase, we need to handle the progression\n  if (gameStore.currentPhase === GamePhase.ANIMAL_COMPANION) {\n    // If we have a selected companion, clear it first\n    if (selectedCompanion.value) {\n      clearSelectedCompanion();\n    }\n    \n    // Generate a new landscape if needed and advance the game phase\n    const cardStore = useCardStore();\n    const availableLandscapes = cardStore.landscapes.filter(l => \n      !gameStore.visitedLandscapes.includes(l.id)\n    );\n    \n    if (availableLandscapes.length > 0) {\n      // Pick a random landscape from the available ones\n      const randomIndex = Math.floor(Math.random() * availableLandscapes.length);\n      const newLandscape = availableLandscapes[randomIndex];\n      \n      // Update the current landscape\n      gameStore.setCurrentLandscape(newLandscape.id);\n      // Add to visited landscapes\n      gameStore.addVisitedLandscape(newLandscape.id);\n    } else {\n      // If no more landscapes, we've completed the journey\n      gameStore.addToGameLog('You have reached the end of your journey path.', true);\n      gameStore.completeJourney(true);\n    }\n  }\n  \n  // Advance to the next phase\n  gameStore.advancePhase();\n};\n\n// End the journey and return to character selection\nconst endJourney = () => {\n  console.log('Ending journey...');\n  playerStore.resetPlayer();\n  gameStore.resetGame();\n  router.push('/');\n};\n\n// Helper functions\nconst formatSeason = (season: Season): string => {\n  if (!season) return 'Unknown';\n  \n  // Convert enum value to readable format (e.g., SPRING to Spring)\n  const seasonName = season.toString();\n  return seasonName.charAt(0) + seasonName.slice(1).toLowerCase();\n};\n</script>\n\n<style lang=\"scss\" scoped>\n/* ... */\n</style>\n","import script from \"./GameBoardView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GameBoardView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./GameBoardView.vue?vue&type=style&index=0&id=74e972c2&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-74e972c2\"]])\n\nexport default __exports__","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router';\n\n// Import views\nimport GameSetupView from '@/views/GameSetupView.vue';\nimport GameBoardView from '@/views/GameBoardView.vue';\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    name: 'setup',\n    component: GameSetupView\n  },\n  {\n    path: '/game',\n    name: 'game',\n    component: GameBoardView\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\nexport default router;\n","import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\nimport router from './router/index'\n\n// Create the app instance\nconst app = createApp(App)\n\n// Use Pinia for state management\napp.use(createPinia())\n\n// Use Vue Router\napp.use(router)\n\n// Mount the app\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpathfinders_journey\"] = self[\"webpackChunkpathfinders_journey\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(4565); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","class","style","_hoisted_2","_defineComponent","__name","setup","__props","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","_renderSlot","$slots","__exports__","_component_router_view","_resolveComponent","_createBlock","GameLayout","default","_withCtx","_createVNode","_","CompanionState","CardType","ChallengeType","Season","useCardStore","defineStore","state","characters","landscapes","animalCompanions","resources","craftedItems","seasons","initialized","getters","getCharacterById","id","find","character","getLandscapeById","landscape","getAnimalCompanionById","companion","getCompanionById","getResourceById","resource","getCraftedItemById","item","getSeasonById","season","getChallengeById","allChallenges","reduce","challenges","landscapeChallenges","map","challenge","type","toLowerCase","name","description","difficulty","rewards","experience","knowledge","getResourcesBySeason","filter","seasonalAbundance","includes","getCompanionsBySeason","affinitySeasons","getAllCraftedItems","getCraftableItems","actions","initializeCards","this","initializeCharacters","initializeLandscapes","initializeAnimalCompanions","initializeResources","initializeCraftedItems","initializeSeasons","CHARACTER","healthPoints","strength","wisdom","agility","diplomacy","survival","resourceCapacity","image","specialAbility","startingResources","startingCompanion","challengeBonuses","LANDSCAPE","WISDOM","DIPLOMACY","availableResources","specialFeature","effect","ANIMAL_COMPANION","ability","SAMHAIN","WINTERS_DEPTH","IMBOLC","BELTANE","LUGHNASADH","RESOURCE","rarity","specialEffect","CRAFTED_ITEM","requiredResources","complexity","drawback","SEASON","abundantResources","scarceResources","animalAffinities","effects","GamePhase","useGameStore","currentPhase","CHARACTER_SELECTION","currentTurn","currentSeason","currentLandscapeId","currentChallenge","visitedLandscapes","journeyProgress","journeyPath","gameLog","victoryConditions","journeyCompleted","balanceMaintained","knowledgeAcquired","bondsFormed","questFulfilled","landscapesTraversed","seasonsExperienced","challengesOvercome","gameStarted","gameOver","isVictory","threatTokens","blessingTokens","challengeHistory","tempEffects","journeyComplete","ceremonyCompleted","currentLandscape","cardStore","currentSeasonCard","seasonCard","journeyPercentage","Math","min","round","isGameOver","hasWon","formattedGameLog","reverse","threatLevel","floor","hasTempEffect","effectId","some","duration","getTempEffectStrength","startGame","addToGameLog","resetGame","endGame","GAME_OVER","setPhase","phase","formatPhase","advancePhase","phaseOrder","SEASONAL_ASSESSMENT","THREAT_LEVEL_CHECK","LANDSCAPE_CHALLENGE","CHALLENGE_RESOLUTION","RESOURCE_MANAGEMENT","CRAFTING","HEALING_RECOVERY","JOURNEY_PROGRESSION","currentIndex","indexOf","length","previousPhase","newPhase","advanceTurn","newTurn","formatSeason","processTempEffects","advanceSeason","checkVictoryConditions","seasonOrder","nextIndex","previousSeason","newSeason","turn","processSeasonalResourceChanges","seasonEffects","forEach","effectDetails","setCurrentLandscape","landscapeId","previousLandscapeId","addVisitedLandscape","newLandscapeId","landscapeName","providesShelter","entryEffect","requiredLandscapes","push","visitedLandscapesCount","advanceJourney","setCurrentChallenge","challengeId","previousChallengeId","challengeName","challengeType","challengeDifficulty","challengeRewards","newChallengeId","steps","previousProgress","newProgress","stepsAdded","completeJourney","message","highlight","details","entry","timestamp","Date","now","time","timeString","getHours","toString","padStart","getMinutes","getSeconds","toUpperCase","console","error","debug","log","shift","allConditionsMet","Object","values","every","Boolean","replace","addThreatTokens","amount","oldThreatLevel","newThreatLevel","removeThreatTokens","max","addTempEffect","existingEffectIndex","findIndex","removeTempEffect","index","splice","clearGameLog","handleThreatLevelCheck","triggerOtherworldlyManifestation","triggerRandomEvent","randomEvents","playerStore","usePlayerStore","addEffect","magnitude","target","gainExperience","loseRandomResources","randomEvent","random","manifestations","randomLandscape","addResource","loseHealth","reverseSeason","manifestation","updateSeasonCard","handleHealingRecovery","healingAmount","seasonalHealingModifier","totalHealing","health","maxHealth","healHealth","specialHealing","seasonalSpoilage","seasonalTransformations","transitionKey","spoilingResources","transformingResources","resourceId","removeResource","formatResourceName","newResourceId","oldResource","newResource","oldName","newName","updateResourceAvailability","rollD8","roll","resolveChallenge","totalRoll","outcome","performSpecialAction","actionId","success","VictoryService","checkJourneyCompletion","checkBalanceMaintained","checkKnowledgeAcquired","checkBondsFormed","checkPersonalQuest","checkLandscapesTraversed","checkSeasonsExperienced","checkChallengesOvercome","conditions","gameStore","characterId","companionCount","craftedItemCount","processVictory","processDefeat","reason","checkDefeatConditions","isDefeat","victoryService","knowledgeDiscovered","specialAbilityUsed","activeEffects","hasCraftedLegendaryItem","uniqueCraftedItemsCount","companionLoyalty","resourceCount","isResourceCapacityReached","experienceLevel","hasEffect","getEffectStrength","setCharacter","addAnimalCompanion","startingCompanions","companionId","selectCharacter","loyalty","LOYAL","turnsSinceLastFed","turnsWary","removeAnimalCompanion","feedCompanion","status","updatedStatus","WARY","updateCompanionStatus","companionName","LEAVING","isCompanionInState","getCompanionsInState","addCraftedItem","itemId","removeCraftedItem","addExperience","defeatResult","discoverKnowledge","knowledgeId","useSpecialAbility","resetSpecialAbility","resetPlayer","addCompanion","removeCompanion","setCompanionLoyalty","takeDamage","alive","lostCount","i","randomIndex","e","removeEffect","processEffects","useCompanionAbility","getCompanionStatus","useCraftedItem","useCompanionForChallenge","useCompanionForNight","allCraftableItems","craftableItems","canCraft","craftItem","rest","useCompanionForGathering","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","router","useRouter","ref","selectedCharacter","loadCharacters","value","getAbilityName","getAbilityDescription","firstLandscape","firstChallenge","setTimeout","alert","_createStaticVNode","_Fragment","_renderList","key","_normalizeClass","onClick","$event","_toDisplayString","_createTextVNode","_withModifiers","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","render","$props","$setup","$data","$options","_component_CompanionCard","args","emitClose","playerCompanions","abilityUsed","usedCompanionAbilities","canFeed","hasCompatibleResources","onSelect","selectCompanion","onFeed","openFeedDialog","onUseAbility","availableCompanions","selectAvailableCompanion","formatSeasonName","openBondDialog","disabled","hasResourcesForBonding","showBondDialog","selectedCompanionName","closeBondDialog","compatibleResources","selectedResource","bondWithCompanion","_createCommentVNode","CompanionService","isResourceSuitableForBonding","applyBondingEffects","preferredResources","increaseLoyalty","getLoyalty","currentLoyalty","newLoyalty","applyLoyaltyEffects","decreaseLoyalty","getCompanionsForChallengeType","selectRandomCompanion","locationId","landscapeCompanions","availableCompanionTypes","companionType","split","isCompanionWary","bondingEffect","loyaltyLevel","loyaltyEffects","companionService","_component_GameCard","title","subtitle","cardType","footer","useAbility","_normalizeStyle","loyaltyBarStyle","showFeedDialog","closeFeedDialog","cardTypeClass","$emit","charAt","getSuitSymbol","undefined","defineComponent","props","String","required","validator","computed","cardTypeValue","classes","methods","emits","components","GameCard","selected","emit","percentage","width","backgroundColor","getLoyaltyColor","playerResourceIds","word","slice","join","CompanionCard","allCompanions","isCompanionAvailableInSeason","selectedCompanion","selectedAvailableCompanion","getCompatibleResources","$subscribe","confirmBond","onMounted","randomCompanionId","getResourceName","availableRecipes","selectedRecipe","selectRecipe","hasResource","canCraftSelectedRecipe","cancelCrafting","ThreatManifestationType","ThreatEventType","OtherworldlyManifestationType","ThreatService","constructor","_defineProperty","MOONLIT_LOCH","DRUIDS_SANCTUARY","SACRED_WATER","ROWAN_WOOD","MINOR","CHALLENGE_DIFFICULTY","HEALTH_LOSS","RESOURCE_LOSS","MODERATE","LANDSCAPE_EFFECT","COMPANION_EFFECT","MAJOR","SEASONAL_SHIFT","counterResource","requiresChallenge","requiresOffering","remainingReduction","MAX_THREAT_REDUCTION_PER_TURN","threatReductionThisTurn","actualAmount","resetThreatReductionTracker","getThreatLevel","hasThreatPrevention","generateRandomThreatEvent","eligibleEvents","threatEvents","event","applyThreatEvent","manifestThreat","shouldManifestThreat","manifestationChance","addThreatPreventionEffect","processThreatEffects","rollForOtherworldlyManifestation","useSacredSiteForThreatReduction","SACRED_SITES","reduction","useResourceForThreatReduction","THREAT_RESOURCES","performSeasonalPurificationRitual","hasPerformedSeasonalRitual","ritualName","resetSeasonalRitualTracker","otherworldlyManifestations","isSacredSite","isResourceUsefulForThreat","getThreatForCraftedItem","complexityValue","getComplexityValue","addThreatForSeasonalCrossing","addThreatForSacredSiteDisrespect","severity","threatAmount","handleSeasonChange","oldSeason","isPrepared","r","processEndOfTurn","processResourceUse","COMPLEXITY_TIERS","SIMPLE","COMPLEX","ADVANCED","LEGENDARY","CraftingService","canCraftItem","missingResources","landscapeSupported","playerSkill","isComplexitySupportedByLandscape","playerHasSkillForComplexity","complexityTier","hasCraftingFacilities","specialCraftingCapabilities","invalidResources","isLegendary","threatCost","threatService","calculateCraftingDifficulty","baseDifficulty","locationBonus","getLocationCraftingBonus","seasonalModifier","getSeasonalCraftingModifier","experienceBonus","craftingBonuses","seasonalModifiers","getRecipeSuggestions","getRecipeSuggestionsByComplexity","maxComplexity","getCraftingRequirements","applyItemEffect","checkCraftingVictoryConditions","hasLegendaryItem","uniqueItemTypes","Set","size","craftingService","playerResources","result","recipe","formatTimestamp","logContainer","date","hours","minutes","seconds","watch","nextTick","scrollTop","scrollHeight","journeyLocations","location","currentLocationIndex","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","lastChallengeResult","currentCharacter","char","clearSelectedCompanion","isHealingLocation","craftableItemIds","threatModifier","seasonModifier","totalDifficulty","playerBonus","animalBonus","itemBonus","dieRoll","partialSuccess","damage","addResult","setbackMessage","STRENGTH","AGILITY","SURVIVAL","endJourney","avoidChallenge","getChallengeDifficulty","gatherResources","resourcesToGather","performHealing","healAmount","heal","availableLandscapes","l","newLandscape","seasonName","PlayerDashboard","_unref","archetype","EXPLORATION","CHALLENGE","CraftingStation","AnimalCompanionSelection","onSelectCompanion","CompanionManagement","JOURNEY","GameMap","GameLog","routes","path","component","GameSetupView","GameBoardView","createRouter","history","createWebHistory","app","createApp","App","use","createPinia","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}